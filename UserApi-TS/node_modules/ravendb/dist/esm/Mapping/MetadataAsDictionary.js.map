{"version":3,"file":"MetadataAsDictionary.js","sourceRoot":"","sources":["../../../src/Mapping/MetadataAsDictionary.ts"],"names":[],"mappings":"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","sourcesContent":["import { IMetadataDictionary, IRawMetadataDictionary } from \"../Documents/Session/IMetadataDictionary.js\";\r\nimport { throwError } from \"../Exceptions/index.js\";\r\n\r\nexport interface MetadataAsDictionaryParentInfo {\r\n    parent: MetadataDictionary;\r\n    parentKey: string;\r\n}\r\n\r\nexport interface MetadataAsDictionary extends IMetadataDictionary, MetadataAsDictionaryParentInfo {\r\n}\r\n\r\nconst metadataDirtiness = new WeakMap<IMetadataDictionary, boolean>();\r\nconst metadataParents = new WeakMap<IMetadataDictionary, MetadataAsDictionaryParentInfo>();\r\nconst metadataProxyTargets = new WeakMap<object, IMetadataDictionary>();\r\n\r\nexport interface MetadataParameters {\r\n    raw: IRawMetadataDictionary;\r\n    parentInfo?: MetadataAsDictionaryParentInfo;\r\n}\r\n\r\nexport class MetadataInternal {\r\n\r\n    constructor(obj) {\r\n        if (obj) {\r\n            for (const key of Object.keys(obj)) {\r\n                this[key] = this._metadataConvertValue(key, obj[key]);\r\n            }\r\n        }\r\n    }\r\n\r\n    public isDirty(): boolean {\r\n        return metadataDirtiness.get(metadataProxyTargets.get(this));\r\n    }\r\n\r\n    public getParent() {\r\n        const parentData = metadataParents.get(metadataProxyTargets.get(this));\r\n        return parentData ? parentData.parent : null;\r\n    }\r\n\r\n    public getParentKey() {\r\n        const parentData = metadataParents.get(metadataProxyTargets.get(this));\r\n        return parentData ? parentData.parentKey : null;\r\n    }\r\n\r\n    private _metadataConvertValue(key, val) {\r\n        if (val == null) {\r\n            return null;\r\n        }\r\n\r\n        if (typeof val !== \"object\") {\r\n            return val;\r\n        }\r\n\r\n        if (Array.isArray(val)) {\r\n            return val.map((e) => this._metadataConvertValue(key, e));\r\n        }\r\n\r\n        return createMetadataDictionary({\r\n            raw: val,\r\n            parentInfo: {\r\n                parent: this,\r\n                parentKey: key\r\n            }\r\n        });\r\n    }\r\n\r\n    public static getChangeTrackingProxy(instance) {\r\n        const proxy = new Proxy<MetadataAsDictionary>(instance, {\r\n            get(obj, prop, value) {\r\n                return Reflect.get(obj, prop, value);\r\n            },\r\n            set(obj, prop, value) {\r\n                metadataDirtiness.set(obj, true);\r\n                return Reflect.set(obj, prop, value);\r\n            },\r\n            deleteProperty(obj, prop) {\r\n                metadataDirtiness.set(obj, true);\r\n                return Reflect.deleteProperty(obj, prop);\r\n            },\r\n            ownKeys(target) {\r\n                return Reflect.ownKeys(target)\r\n                    .filter(x =>\r\n                        x !== \"getParentKey\"\r\n                        && x !== \"getParent\"\r\n                        && x !== \"isDirty\"\r\n                        && x !== \"_metadataConvertValue\");\r\n            }\r\n        });\r\n\r\n        metadataProxyTargets.set(proxy, instance);\r\n        return proxy;\r\n    }\r\n}\r\n\r\nexport class MetadataDictionary {\r\n    public static create(raw?: object) {\r\n        return createMetadataDictionary({ raw: raw || {} });\r\n    }\r\n\r\n    public static materializeFromJson(metadata?: object) {\r\n        return MetadataDictionary.create(metadata);\r\n    }\r\n}\r\n\r\nexport function createMetadataDictionary(\r\n    metadataParams: MetadataParameters): MetadataAsDictionary {\r\n    const parentInfo = metadataParams.parentInfo;\r\n    const metadata = new MetadataInternal(metadataParams.raw);\r\n\r\n    const proxy = MetadataInternal.getChangeTrackingProxy(metadata);\r\n\r\n    if (parentInfo) {\r\n        if (!parentInfo.parent) {\r\n            return throwError(\"InvalidArgumentException\", \"Parent cannot be null\");\r\n        }\r\n\r\n        if (!parentInfo.parentKey) {\r\n            return throwError(\"InvalidArgumentException\", \"Parent key cannot be null\");\r\n        }\r\n\r\n        metadataParents.set(metadata, parentInfo);\r\n    }\r\n\r\n    metadataDirtiness.set(metadata, false);\r\n\r\n    return proxy;\r\n}\r\n"]}