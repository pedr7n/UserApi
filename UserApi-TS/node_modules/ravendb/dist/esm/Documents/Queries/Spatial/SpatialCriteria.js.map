{"version":3,"file":"SpatialCriteria.js","sourceRoot":"","sources":["../../../../../src/Documents/Queries/Spatial/SpatialCriteria.ts"],"names":[],"mappings":"AAGA,OAAO,EAAE,UAAU,EAAE,MAAM,8BAA8B,CAAC;AAE1D,OAAO,EAAE,UAAU,EAAE,YAAY,EAAE,MAAM,oCAAoC,CAAC;AAE9E,MAAM,OAAgB,eAAe;IAEhB,SAAS,CAAkB;IAC3B,iBAAiB,CAAS;IAE3C,YAAsB,QAAyB,EAAE,gBAAwB;QACrE,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,iBAAiB,GAAG,gBAAgB,CAAC;IAC9C,CAAC;IAIM,YAAY,CAAC,SAAiB,EAAE,iBAAwC;QAC3E,MAAM,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,CAAC;QAE1D,IAAI,aAA4B,CAAC;QAEjC,QAAQ,IAAI,CAAC,SAAS,EAAE,CAAC;YACrB,KAAK,QAAQ,CAAC,CAAC,CAAC;gBACZ,aAAa,GAAG,eAAe,CAAC;gBAChC,MAAM;YACV,CAAC;YACD,KAAK,UAAU,CAAC,CAAC,CAAC;gBACd,aAAa,GAAG,iBAAiB,CAAC;gBAClC,MAAM;YACV,CAAC;YACD,KAAK,UAAU,CAAC,CAAC,CAAC;gBACd,aAAa,GAAG,iBAAiB,CAAC;gBAClC,MAAM;YACV,CAAC;YACD,KAAK,YAAY,CAAC,CAAC,CAAC;gBAChB,aAAa,GAAG,mBAAmB,CAAC;gBACpC,MAAM;YACV,CAAC;YACD,OAAO,CAAC,CAAC,CAAC;gBACN,UAAU,CAAC,0BAA0B,CAAC,CAAC;YAC3C,CAAC;QACL,CAAC;QAED,OAAO,UAAU,CAAC,MAAM,CAAC,aAAa,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,YAAY,CAAC;YACtE,KAAK,EAAE,UAAU;YACjB,QAAQ,EAAE,IAAI,CAAC,iBAAiB;SACnC,CAAC,CAAC,CAAC;IAER,CAAC;CACJ","sourcesContent":["import { ShapeToken } from \"../../Session/Tokens/ShapeToken.js\";\r\nimport { SpatialRelation } from \"../../Indexes/Spatial.js\";\r\nimport { QueryToken } from \"../../Session/Tokens/QueryToken.js\";\r\nimport { throwError } from \"../../../Exceptions/index.js\";\r\nimport { WhereOperator } from \"../../Session/Tokens/WhereOperator.js\";\r\nimport { WhereToken, WhereOptions } from \"../../Session/Tokens/WhereToken.js\";\r\n\r\nexport abstract class SpatialCriteria {\r\n\r\n    private readonly _relation: SpatialRelation;\r\n    private readonly _distanceErrorPct: number;\r\n\r\n    protected constructor(relation: SpatialRelation, distanceErrorPct: number) {\r\n        this._relation = relation;\r\n        this._distanceErrorPct = distanceErrorPct;\r\n    }\r\n\r\n    protected abstract _getShapeToken(addQueryParameter: (o: object) => string): ShapeToken;\r\n\r\n    public toQueryToken(fieldName: string, addQueryParameter: (o: object) => string): QueryToken {\r\n        const shapeToken = this._getShapeToken(addQueryParameter);\r\n\r\n        let whereOperator: WhereOperator;\r\n\r\n        switch (this._relation) {\r\n            case \"Within\": {\r\n                whereOperator = \"SpatialWithin\";\r\n                break;\r\n            }\r\n            case \"Contains\": {\r\n                whereOperator = \"SpatialContains\";\r\n                break;\r\n            }\r\n            case \"Disjoint\": {\r\n                whereOperator = \"SpatialDisjoint\";\r\n                break;\r\n            }\r\n            case \"Intersects\": {\r\n                whereOperator = \"SpatialIntersects\";\r\n                break;\r\n            }\r\n            default: {\r\n                throwError(\"InvalidArgumentException\");\r\n            }\r\n        }\r\n\r\n        return WhereToken.create(whereOperator, fieldName, null, new WhereOptions({\r\n            shape: shapeToken,\r\n            distance: this._distanceErrorPct\r\n        }));\r\n\r\n    }\r\n}\r\n"]}