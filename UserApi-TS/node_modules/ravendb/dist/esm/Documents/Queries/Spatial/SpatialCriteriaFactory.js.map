{"version":3,"file":"SpatialCriteriaFactory.js","sourceRoot":"","sources":["../../../../../src/Documents/Queries/Spatial/SpatialCriteriaFactory.ts"],"names":[],"mappings":"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","sourcesContent":["import { SpatialCriteria } from \"./SpatialCriteria.js\";\r\nimport { SpatialRelation, SpatialUnits } from \"../../Indexes/Spatial.js\";\r\nimport { CONSTANTS } from \"../../../Constants.js\";\r\nimport { WktCriteria } from \"./WktCriteria.js\";\r\nimport { CircleCriteria } from \"./CircleCriteria.js\";\r\nimport { TypeUtil } from \"../../../Utility/TypeUtil.js\";\r\n\r\nexport class SpatialCriteriaFactory {\r\n\r\n    public static INSTANCE = new SpatialCriteriaFactory();\r\n\r\n    private constructor() {\r\n        // empty\r\n    }\r\n\r\n    public relatesToShape(shapeWkt: string, relation: SpatialRelation): SpatialCriteria;\r\n    public relatesToShape(\r\n        shapeWkt: string, \r\n        relation: SpatialRelation, \r\n        units: SpatialUnits, \r\n        distErrorPercent: number): SpatialCriteria;\r\n    public relatesToShape(\r\n        shapeWkt: string, \r\n        relation: SpatialRelation, \r\n        units?: SpatialUnits, \r\n        distErrorPercent?: number): SpatialCriteria {\r\n        if (TypeUtil.isNullOrUndefined(distErrorPercent)) {\r\n            distErrorPercent = CONSTANTS.Documents.Indexing.Spatial.DEFAULT_DISTANCE_ERROR_PCT;\r\n        }\r\n\r\n        return new WktCriteria(shapeWkt, relation, units, distErrorPercent);\r\n    }\r\n\r\n    private static _normalizeArgs(distErrorPercentOrUnits, distErrorPercent) {\r\n        let units = null;\r\n        if (TypeUtil.isString(distErrorPercentOrUnits)) {\r\n            units = distErrorPercentOrUnits;\r\n        } else if (TypeUtil.isNumber(distErrorPercentOrUnits)) {\r\n            distErrorPercent = distErrorPercentOrUnits;\r\n            units = null;\r\n        }\r\n\r\n        distErrorPercent = distErrorPercent ?? CONSTANTS.Documents.Indexing.Spatial.DEFAULT_DISTANCE_ERROR_PCT;\r\n        return { units, distErrorPercent };\r\n    }\r\n\r\n    public intersects(shapeWkt: string): SpatialCriteria;\r\n    public intersects(\r\n        shapeWkt: string, \r\n        distErrorPercent: number): SpatialCriteria;\r\n    public intersects(\r\n        shapeWkt: string, \r\n        distErrorPercent: number): SpatialCriteria;\r\n    public intersects(\r\n        shapeWkt: string, \r\n        units: SpatialUnits,\r\n        distErrorPercent: number): SpatialCriteria;\r\n    public intersects(\r\n        shapeWkt: string, \r\n        distErrorPercentOrUnits?: number | SpatialUnits,\r\n        distErrorPercent?: number): SpatialCriteria {\r\n        const args = \r\n            SpatialCriteriaFactory._normalizeArgs(distErrorPercentOrUnits, distErrorPercent);\r\n        return this.relatesToShape(shapeWkt, \"Intersects\", args.units, args.distErrorPercent);\r\n    }\r\n\r\n    public contains(shapeWkt: string): SpatialCriteria;\r\n    public contains(shapeWkt: string, units: SpatialUnits): SpatialCriteria;\r\n    public contains(shapeWkt: string, distErrorPercent: number): SpatialCriteria;\r\n    public contains(shapeWkt: string, units: SpatialUnits, distErrorPercent: number): SpatialCriteria;\r\n    public contains(\r\n        shapeWkt: string, \r\n        distErrorPercentOrUnits?: number | SpatialUnits, \r\n        distErrorPercent?: number): SpatialCriteria {\r\n        const args = \r\n            SpatialCriteriaFactory._normalizeArgs(distErrorPercentOrUnits, distErrorPercent);\r\n        return this.relatesToShape(shapeWkt, \"Contains\", args.units, args.distErrorPercent);\r\n    }\r\n\r\n    public disjoint(shapeWkt: string): SpatialCriteria;\r\n    public disjoint(shapeWkt: string, units: SpatialUnits): SpatialCriteria;\r\n    public disjoint(shapeWkt: string, distErrorPercent: number): SpatialCriteria;\r\n    public disjoint(shapeWkt: string, units: SpatialUnits, distErrorPercent: number): SpatialCriteria;\r\n    public disjoint(\r\n        shapeWkt: string, \r\n        distErrorPercentOrUnits?: number | SpatialUnits,\r\n        distErrorPercent?: number): SpatialCriteria {\r\n        const args = \r\n            SpatialCriteriaFactory._normalizeArgs(distErrorPercentOrUnits, distErrorPercent);\r\n        return this.relatesToShape(shapeWkt, \"Disjoint\", args.units, args.distErrorPercent);\r\n    }\r\n\r\n    public within(shapeWkt: string): SpatialCriteria;\r\n    public within(shapeWkt: string, units: SpatialUnits): SpatialCriteria;\r\n    public within(shapeWkt: string, distErrorPercent: number): SpatialCriteria;\r\n    public within(shapeWkt: string, units: SpatialUnits, distErrorPercent: number): SpatialCriteria;\r\n    public within(\r\n        shapeWkt: string, \r\n        distErrorPercentOrUnits?: number | SpatialUnits,\r\n        distErrorPercent?: number): SpatialCriteria {\r\n        const args = \r\n            SpatialCriteriaFactory._normalizeArgs(distErrorPercentOrUnits, distErrorPercent);\r\n        return this.relatesToShape(shapeWkt, \"Within\", args.units, args.distErrorPercent);\r\n    }\r\n\r\n    public withinRadius(radius: number, latitude: number, longitude: number): SpatialCriteria;\r\n    public withinRadius(\r\n        radius: number, latitude: number, longitude: number, radiusUnits: SpatialUnits): SpatialCriteria;\r\n    public withinRadius(\r\n        radius: number,\r\n        latitude: number,\r\n        longitude: number,\r\n        radiusUnits: SpatialUnits,\r\n        distErrorPercent: number): SpatialCriteria;\r\n    public withinRadius(\r\n        radius: number,\r\n        latitude: number,\r\n        longitude: number,\r\n        radiusUnits: SpatialUnits = null,\r\n        distErrorPercent?: number): SpatialCriteria {\r\n        distErrorPercent = distErrorPercent ?? CONSTANTS.Documents.Indexing.Spatial.DEFAULT_DISTANCE_ERROR_PCT;\r\n        return new CircleCriteria(radius, latitude, longitude, radiusUnits, \"Within\", distErrorPercent);\r\n    }\r\n}\r\n"]}