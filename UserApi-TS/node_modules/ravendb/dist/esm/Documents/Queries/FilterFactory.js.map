{"version":3,"file":"FilterFactory.js","sourceRoot":"","sources":["../../../../src/Documents/Queries/FilterFactory.ts"],"names":[],"mappings":"AAMA,MAAM,OAAO,aAAa;IACL,cAAc,CAA4B;IAE3D,YAAmB,aAAwC,EAAE,cAAsB,MAAM,CAAC,gBAAgB;QACtG,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC;QACpC,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;IACtC,CAAC;IAMM,MAAM,CAAC,sBAA4C,EAAE,KAAc,EAAE,QAAiB,KAAK;QAC9F,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,sBAA6B,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;QAC9E,OAAO,IAAI,CAAC;IAChB,CAAC;IAKM,SAAS,CAAC,sBAA4C,EAAE,KAAc,EAAE,QAAiB,KAAK;QACjG,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,sBAA6B,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;QACjF,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,WAAW,CAAC,SAAiB,EAAE,KAAU;QAC5C,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;QACxD,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,kBAAkB,CAAC,SAAiB,EAAE,KAAU;QACnD,IAAI,CAAC,cAAc,CAAC,wBAAwB,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;QAC/D,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,QAAQ,CAAC,SAAiB,EAAE,KAAU;QACzC,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;QACrD,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,eAAe,CAAC,SAAiB,EAAE,KAAU;QAChD,IAAI,CAAC,cAAc,CAAC,qBAAqB,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;QAC5D,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,OAAO;QACV,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC;QAC/B,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,MAAM;QACT,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC;QAC9B,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,GAAG;QACN,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC;QAClC,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,aAAa;QAChB,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC;QACrC,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,cAAc;QACjB,IAAI,CAAC,cAAc,CAAC,eAAe,EAAE,CAAC;QACtC,OAAO,IAAI,CAAC;IAChB,CAAC;IAEO,eAAe,CAAC,KAAa;QAChC,IAAI,CAAC,cAAmC,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;IACrE,CAAC;CACJ","sourcesContent":["import { IFilterFactory } from \"./IFilterFactory.js\";\r\nimport { IAbstractDocumentQuery } from \"../Session/IAbstractDocumentQuery.js\";\r\nimport { MethodCall } from \"../Session/MethodCall.js\";\r\nimport { WhereParams } from \"../Session/WhereParams.js\";\r\nimport { DocumentQuery } from \"../Session/DocumentQuery.js\";\r\n\r\nexport class FilterFactory<T extends object> implements IFilterFactory<T> {\r\n    private readonly _documentQuery: IAbstractDocumentQuery<T>;\r\n\r\n    public constructor(documentQuery: IAbstractDocumentQuery<T>, filterLimit: number = Number.MAX_SAFE_INTEGER) {\r\n        this._documentQuery = documentQuery;\r\n        this._setFilterLimit(filterLimit);\r\n    }\r\n\r\n\r\n    public equals(fieldName: string, value: any): IFilterFactory<T>;\r\n    public equals(fieldName: string, method: MethodCall): IFilterFactory<T>;\r\n    public equals(whereParams: WhereParams): IFilterFactory<T>;\r\n    public equals(fieldNameOrWhereParams: string | WhereParams, value?: object, exact: boolean = false): IFilterFactory<T> {\r\n        this._documentQuery._whereEquals(fieldNameOrWhereParams as any, value, exact);\r\n        return this;\r\n    }\r\n\r\n    public notEquals(fieldName: string, value: any): IFilterFactory<T>;\r\n    public notEquals(fieldName: string, method: MethodCall): IFilterFactory<T>;\r\n    public notEquals(whereParams: WhereParams): IFilterFactory<T>;\r\n    public notEquals(fieldNameOrWhereParams: string | WhereParams, value?: object, exact: boolean = false): IFilterFactory<T> {\r\n        this._documentQuery._whereNotEquals(fieldNameOrWhereParams as any, value, exact);\r\n        return this;\r\n    }\r\n\r\n    public greaterThan(fieldName: string, value: any): IFilterFactory<T> {\r\n        this._documentQuery._whereGreaterThan(fieldName, value);\r\n        return this;\r\n    }\r\n\r\n    public greaterThanOrEqual(fieldName: string, value: any): IFilterFactory<T> {\r\n        this._documentQuery._whereGreaterThanOrEqual(fieldName, value);\r\n        return this;\r\n    }\r\n\r\n    public lessThan(fieldName: string, value: any): IFilterFactory<T> {\r\n        this._documentQuery._whereLessThan(fieldName, value);\r\n        return this;\r\n    }\r\n\r\n    public lessThanOrEqual(fieldName: string, value: any): IFilterFactory<T> {\r\n        this._documentQuery._whereLessThanOrEqual(fieldName, value);\r\n        return this;\r\n    }\r\n\r\n    public andAlso(): IFilterFactory<T> {\r\n        this._documentQuery._andAlso();\r\n        return this;\r\n    }\r\n\r\n    public orElse(): IFilterFactory<T> {\r\n        this._documentQuery._orElse();\r\n        return this;\r\n    }\r\n\r\n    public not(): IFilterFactory<T> {\r\n        this._documentQuery._negateNext();\r\n        return this;\r\n    }\r\n\r\n    public openSubclause(): IFilterFactory<T> {\r\n        this._documentQuery._openSubclause();\r\n        return this;\r\n    }\r\n\r\n    public closeSubclause(): IFilterFactory<T> {\r\n        this._documentQuery._closeSubclause();\r\n        return this;\r\n    }\r\n\r\n    private _setFilterLimit(limit: number) {\r\n        (this._documentQuery as DocumentQuery<T>)._addFilterLimit(limit);\r\n    }\r\n}\r\n"]}