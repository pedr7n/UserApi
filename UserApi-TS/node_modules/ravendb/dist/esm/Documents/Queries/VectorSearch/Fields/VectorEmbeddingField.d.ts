import { IVectorEmbeddingField, IVectorEmbeddingFieldFactoryAccessor } from "../../../Session/VectorFieldFactory.js";
import { VectorEmbeddingType } from "../VectorEmbeddingType.js";
import { Field } from "../../../../Types/index.js";
export declare class VectorEmbeddingField<T> implements IVectorEmbeddingField, IVectorEmbeddingFieldFactoryAccessor<T> {
    fieldName: string;
    sourceQuantizationType: VectorEmbeddingType;
    destinationQuantizationType: VectorEmbeddingType;
    isBase64Encoded: boolean;
    embeddingsGenerationTaskIdentifier: string;
    constructor(fieldName: Field<T>, sourceQuantizationType?: VectorEmbeddingType, isBase64Encoded?: boolean);
    targetQuantization(targetEmbeddingQuantization: VectorEmbeddingType): IVectorEmbeddingField;
}
//# sourceMappingURL=VectorEmbeddingField.d.ts.map