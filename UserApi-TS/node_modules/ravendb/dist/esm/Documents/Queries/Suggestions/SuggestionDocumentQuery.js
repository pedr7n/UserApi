import { SuggestionQueryBase } from "./SuggestionQueryBase.js";
import { SuggestionBase } from "./SuggestionBase.js";
import { SuggestionBuilder } from "./SuggestionBuilder.js";
export class SuggestionDocumentQuery extends SuggestionQueryBase {
    _source;
    constructor(source) {
        super(source.session);
        this._source = source;
    }
    _getIndexQuery(updateAfterQueryExecuted = true) {
        return this._source.getIndexQuery();
    }
    _invokeAfterQueryExecuted(result) {
        this._source.emit("afterQueryExecuted", result);
    }
    andSuggestUsing(suggestionOrBuilder) {
        if (suggestionOrBuilder instanceof SuggestionBase) {
            this._source._suggestUsing(suggestionOrBuilder);
        }
        else {
            const f = new SuggestionBuilder();
            suggestionOrBuilder(f);
            this._source.suggestUsing(f.suggestion);
        }
        return this;
    }
}
//# sourceMappingURL=SuggestionDocumentQuery.js.map