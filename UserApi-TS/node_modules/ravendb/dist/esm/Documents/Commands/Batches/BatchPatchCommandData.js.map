{"version":3,"file":"BatchPatchCommandData.js","sourceRoot":"","sources":["../../../../../src/Documents/Commands/Batches/BatchPatchCommandData.ts"],"names":[],"mappings":"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","sourcesContent":["import { CommandType, ICommandData } from \"../CommandData.js\";\r\nimport { CaseInsensitiveStringSet } from \"../../../Primitives/CaseInsensitiveStringSet.js\";\r\nimport { PatchRequest } from \"../../Operations/PatchRequest.js\";\r\nimport { throwError } from \"../../../Exceptions/index.js\";\r\nimport { TypeUtil } from \"../../../Utility/TypeUtil.js\";\r\nimport { StringUtil } from \"../../../Utility/StringUtil.js\";\r\nimport { DocumentConventions } from \"../../Conventions/DocumentConventions.js\";\r\n\r\nexport interface IdAndChangeVector {\r\n    id: string;\r\n    changeVector: string;\r\n}\r\n\r\n/**\r\n * Commands that patches multiple documents using same patch script\r\n * CAUTION: This command does not update session state after .saveChanges() call\r\n */\r\nexport class BatchPatchCommandData implements ICommandData {\r\n    private readonly _seenIds: Set<string> = CaseInsensitiveStringSet.create();\r\n    private readonly _ids: IdAndChangeVector[] = [];\r\n    private readonly _name: string = null;\r\n    private readonly _patch: PatchRequest;\r\n    private readonly _patchIfMissing: PatchRequest;\r\n\r\n    public constructor(patch: PatchRequest, patchIfMissing: PatchRequest, ...ids: string[]);\r\n    public constructor(patch: PatchRequest, patchIfMissing: PatchRequest, ...ids: IdAndChangeVector[]);\r\n    public constructor(patch: PatchRequest, patchIfMissing: PatchRequest, ...ids: (IdAndChangeVector | string)[]) {\r\n        if (!patch) {\r\n            throwError(\"InvalidArgumentException\", \"Patch cannot be null.\");\r\n        }\r\n\r\n        if (arguments.length >= 3) {\r\n            if (!ids) {\r\n                throwError(\"InvalidArgumentException\", \"Ids cannot be null.\");\r\n            }\r\n\r\n            if (ids.length === 0) {\r\n                throwError(\"InvalidArgumentException\", \"Value cannot be an empty collection.\");\r\n            }\r\n\r\n            for (const idEntry of ids) {\r\n                if (TypeUtil.isObject(idEntry)) {\r\n                    const { id, changeVector } = idEntry as IdAndChangeVector;\r\n                    this._add(id, changeVector);\r\n                } else {\r\n                    this._add(idEntry as string);\r\n                }\r\n            }\r\n        }\r\n\r\n        this._patch = patch;\r\n        this._patchIfMissing = patchIfMissing;\r\n    }\r\n\r\n    private _add(id: string, changeVector?: string): void {\r\n        if (StringUtil.isNullOrWhitespace(id)) {\r\n            throwError(\"InvalidArgumentException\", \"Value cannot be null or whitespace.\");\r\n        }\r\n\r\n        if (!this._seenIds.add(id)) {\r\n            throwError(\"InvalidOperationException\",\r\n                \"Could not add ID '\" + id + \"' because item with the same ID was already added\");\r\n        }\r\n\r\n        this._ids.push({ id, changeVector });\r\n    }\r\n\r\n    public get ids() {\r\n        return this._ids;\r\n    }\r\n\r\n    public get id(): string {\r\n        return throwError(\"NotSupportedException\");\r\n    }\r\n\r\n    public get name(): string {\r\n        return this._name;\r\n    }\r\n\r\n    public get patch(): PatchRequest {\r\n        return this._patch;\r\n    }\r\n\r\n    public patchIfMissing(): PatchRequest {\r\n        return this._patchIfMissing;\r\n    }\r\n\r\n    public get changeVector(): string {\r\n        return throwError(\"NotSupportedException\");\r\n    }\r\n\r\n    public get type(): CommandType {\r\n        return \"BatchPATCH\";\r\n    }\r\n\r\n    public serialize(conventions: DocumentConventions): object {\r\n        const ids = this._ids.map(x => ({\r\n            Id: x.id,\r\n            ChangeVector: x.changeVector || undefined\r\n        }));\r\n\r\n        return {\r\n            Ids: ids,\r\n            Patch: this.patch.serialize(conventions),\r\n            Type: \"BatchPATCH\",\r\n            PatchIfMissing: this._patchIfMissing\r\n                ? this._patchIfMissing.serialize(conventions)\r\n                : undefined\r\n        };\r\n   }\r\n}\r\n"]}