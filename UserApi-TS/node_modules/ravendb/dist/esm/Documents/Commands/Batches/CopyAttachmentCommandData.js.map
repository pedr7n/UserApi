{"version":3,"file":"CopyAttachmentCommandData.js","sourceRoot":"","sources":["../../../../../src/Documents/Commands/Batches/CopyAttachmentCommandData.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,UAAU,EAAE,MAAM,gCAAgC,CAAC;AAC5D,OAAO,EAAE,UAAU,EAAE,MAAM,8BAA8B,CAAC;AAG1D,MAAM,OAAO,yBAAyB;IAClB,EAAE,CAAS;IACX,YAAY,CAAS;IACrB,IAAI,CAAS;IACZ,cAAc,CAAS;IACvB,gBAAgB,CAAS;IAE1C,IAAW,IAAI;QACX,OAAO,gBAAgB,CAAC;IAC5B,CAAC;IAED,YACI,UAAkB,EAClB,IAAY,EACZ,qBAA6B,EAC7B,eAAuB,EACvB,YAAoB;QACpB,IAAI,UAAU,CAAC,kBAAkB,CAAC,UAAU,CAAC,EAAE,CAAC;YAC5C,UAAU,CAAC,0BAA0B,EAAE,yBAAyB,CAAC,CAAC;QACtE,CAAC;QAED,IAAI,UAAU,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE,CAAC;YACtC,UAAU,CAAC,0BAA0B,EAAE,mBAAmB,CAAC,CAAC;QAChE,CAAC;QAED,IAAI,UAAU,CAAC,kBAAkB,CAAC,qBAAqB,CAAC,EAAE,CAAC;YACvD,UAAU,CAAC,0BAA0B,EAAE,oCAAoC,CAAC,CAAC;QACjF,CAAC;QAED,IAAI,UAAU,CAAC,kBAAkB,CAAC,eAAe,CAAC,EAAE,CAAC;YACjD,UAAU,CAAC,0BAA0B,EAAE,8BAA8B,CAAC,CAAC;QAC3E,CAAC;QAED,IAAI,CAAC,EAAE,GAAG,UAAU,CAAC;QACrB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,IAAI,CAAC,cAAc,GAAG,qBAAqB,CAAC;QAC5C,IAAI,CAAC,gBAAgB,GAAG,eAAe,CAAC;IAC5C,CAAC;IAEM,OAAO;QACV,OAAO,gBAAgB,CAAC;IAC5B,CAAC;IAEM,SAAS,CAAC,WAAgC;QAC7C,OAAO;YACH,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,aAAa,EAAE,IAAI,CAAC,cAAc;YAClC,eAAe,EAAE,IAAI,CAAC,gBAAgB;YACtC,YAAY,EAAE,IAAI,CAAC,YAAY;YAC/B,IAAI,EAAE,gBAA+B;SACxC,CAAC;IACN,CAAC;CACJ","sourcesContent":["import { ICommandData, CommandType } from \"../CommandData.js\";\r\nimport { StringUtil } from \"../../../Utility/StringUtil.js\";\r\nimport { throwError } from \"../../../Exceptions/index.js\";\r\nimport { DocumentConventions } from \"../../Conventions/DocumentConventions.js\";\r\n\r\nexport class CopyAttachmentCommandData implements ICommandData {\r\n    public readonly id: string;\r\n    public readonly changeVector: string;\r\n    public readonly name: string;\r\n    private readonly _destinationId: string;\r\n    private readonly _destinationName: string;\r\n\r\n    public get type(): CommandType {\r\n        return \"AttachmentCOPY\";\r\n    }\r\n\r\n    public constructor(\r\n        documentId: string, \r\n        name: string, \r\n        destinationDocumentId: string, \r\n        destinationName: string, \r\n        changeVector: string) {\r\n        if (StringUtil.isNullOrWhitespace(documentId)) {\r\n            throwError(\"InvalidArgumentException\", \"DocumentId is required.\");\r\n        }\r\n\r\n        if (StringUtil.isNullOrWhitespace(name)) {\r\n            throwError(\"InvalidArgumentException\", \"Name is required.\");\r\n        }\r\n\r\n        if (StringUtil.isNullOrWhitespace(destinationDocumentId)) {\r\n            throwError(\"InvalidArgumentException\", \"DestinationDocumentId is required.\");\r\n        }\r\n\r\n        if (StringUtil.isNullOrWhitespace(destinationName)) {\r\n            throwError(\"InvalidArgumentException\", \"DestinationName is required.\");\r\n        }\r\n        \r\n        this.id = documentId;\r\n        this.name = name;\r\n        this.changeVector = changeVector;\r\n        this._destinationId = destinationDocumentId;\r\n        this._destinationName = destinationName;\r\n    }\r\n\r\n    public getType(): CommandType {\r\n        return \"AttachmentMOVE\";\r\n    }\r\n\r\n    public serialize(conventions: DocumentConventions): object {\r\n        return {\r\n            Id: this.id,\r\n            Name: this.name,\r\n            DestinationId: this._destinationId,\r\n            DestinationName: this._destinationName,\r\n            ChangeVector: this.changeVector,\r\n            Type: \"AttachmentCOPY\" as CommandType\r\n        };\r\n    }\r\n}\r\n"]}