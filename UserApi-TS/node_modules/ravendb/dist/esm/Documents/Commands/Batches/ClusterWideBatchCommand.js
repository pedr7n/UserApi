import { RaftIdGenerator } from "../../../Utility/RaftIdGenerator.js";
import { SingleNodeBatchCommand } from "./SingleNodeBatchCommand.js";
import { TypeUtil } from "../../../Utility/TypeUtil.js";
export class ClusterWideBatchCommand extends SingleNodeBatchCommand {
    _disableAtomicDocumentWrites;
    get disableAtomicDocumentWrites() {
        return this._disableAtomicDocumentWrites;
    }
    getRaftUniqueRequestId() {
        return RaftIdGenerator.newId();
    }
    constructor(conventions, commands, options, disableAtomicDocumentsWrites) {
        super(conventions, commands, options, "ClusterWide");
        this._disableAtomicDocumentWrites = disableAtomicDocumentsWrites;
    }
    _appendOptions() {
        let options = super._appendOptions();
        if (TypeUtil.isNullOrUndefined(this._disableAtomicDocumentWrites)) {
            return "";
        }
        options
            += "&disableAtomicDocumentWrites=" + (this._disableAtomicDocumentWrites ? "true" : "false");
        return options;
    }
}
//# sourceMappingURL=ClusterWideBatchCommand.js.map