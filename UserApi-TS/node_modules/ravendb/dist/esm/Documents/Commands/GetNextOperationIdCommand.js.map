{"version":3,"file":"GetNextOperationIdCommand.js","sourceRoot":"","sources":["../../../../src/Documents/Commands/GetNextOperationIdCommand.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,4BAA4B,CAAC;AAK1D,MAAM,OAAO,yBAA0B,SAAQ,YAAoB;IAEvD,QAAQ,CAAS;IAEzB,IAAW,OAAO;QACd,OAAO,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;IAED,IAAW,aAAa;QACpB,OAAO,KAAK,CAAC,CAAC,kBAAkB;IACpC,CAAC;IAEM,aAAa,CAAC,IAAgB;QACjC,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,cAAc,IAAI,CAAC,QAAQ,+BAA+B,CAAC;QAClF,OAAO,EAAE,GAAG,EAAE,CAAC;IACnB,CAAC;IAEM,KAAK,CAAC,gBAAgB,CAAC,UAAkB,EAAE,SAAkB;QAChE,IAAI,IAAI,GAAW,IAAI,CAAC;QACxB,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QAC/E,MAAM,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;QACzB,IAAI,OAAO,EAAE,KAAK,WAAW,EAAE,CAAC;YAC5B,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACrB,CAAC;QAED,MAAM,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;QACnC,IAAI,OAAO,EAAE,CAAC;YACV,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QAC5B,CAAC;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;CACJ","sourcesContent":["import { RavenCommand } from \"../../Http/RavenCommand.js\";\r\nimport { ServerNode } from \"../../Http/ServerNode.js\";\r\nimport { HttpRequestParameters } from \"../../Primitives/Http.js\";\r\nimport { Stream } from \"node:stream\";\r\n\r\nexport class GetNextOperationIdCommand extends RavenCommand<number> {\r\n\r\n    private _nodeTag: string;\r\n\r\n    public get nodeTag(): string {\r\n        return this._nodeTag;\r\n    }\r\n\r\n    public get isReadRequest(): boolean {\r\n        return false; // disable caching\r\n    }\r\n\r\n    public createRequest(node: ServerNode): HttpRequestParameters {\r\n        const uri = `${node.url}/databases/${node.database}/operations/next-operation-id`;\r\n        return { uri };\r\n    }\r\n\r\n    public async setResponseAsync(bodyStream: Stream, fromCache: boolean): Promise<string> {\r\n        let body: string = null;\r\n        const results = await this._defaultPipeline(_ => body = _).process(bodyStream);\r\n        const id = results[\"id\"];\r\n        if (typeof id !== \"undefined\") {\r\n            this.result = id;\r\n        }\r\n\r\n        const nodeTag = results[\"nodeTag\"];\r\n        if (nodeTag) {\r\n            this._nodeTag = nodeTag;\r\n        }\r\n        return body;\r\n    }\r\n}\r\n"]}