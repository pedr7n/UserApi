import { HttpRequestParameters } from "../../Primitives/Http.js";
import { Stream } from "node:stream";
import { RavenCommand } from "../../Http/RavenCommand.js";
import { IRavenArrayResult } from "../../Types/index.js";
import { ServerNode } from "../../Http/ServerNode.js";
import { DocumentConventions } from "../Conventions/DocumentConventions.js";
export declare class GetRevisionsBinEntryCommand extends RavenCommand<IRavenArrayResult> {
    private readonly _conventions;
    private readonly _start;
    private readonly _pageSize;
    private readonly _continuationToken;
    constructor(conventions: DocumentConventions, continuationToken: string);
    constructor(conventions: DocumentConventions, start: number, pageSize: number);
    createRequest(node: ServerNode): HttpRequestParameters;
    setResponseAsync(bodyStream: Stream, fromCache: boolean): Promise<string>;
    get isReadRequest(): boolean;
}
//# sourceMappingURL=GetRevisionsBinEntryCommand.d.ts.map