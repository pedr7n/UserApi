{"version":3,"file":"ConditionalGetDocumentsCommand.js","sourceRoot":"","sources":["../../../../src/Documents/Commands/ConditionalGetDocumentsCommand.ts"],"names":[],"mappings":"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","sourcesContent":["import { RavenCommand, ResponseDisposeHandling } from \"../../Http/RavenCommand.js\";\r\nimport { ServerNode } from \"../../Http/ServerNode.js\";\r\nimport { HttpRequestParameters, HttpResponse } from \"../../Primitives/Http.js\";\r\nimport { Stream, Readable } from \"node:stream\";\r\nimport { HttpCache } from \"../../Http/HttpCache.js\";\r\nimport { StatusCodes } from \"../../Http/StatusCode.js\";\r\nimport { DocumentConventions } from \"../Conventions/DocumentConventions.js\";\r\nimport { readToEnd } from \"../../Utility/StreamUtil.js\";\r\nimport { ObjectUtil } from \"../../Utility/ObjectUtil.js\";\r\nimport { HEADERS } from \"../../Constants.js\";\r\n\r\nexport class ConditionalGetDocumentsCommand extends RavenCommand<ConditionalGetResult> {\r\n\r\n    private readonly _changeVector: string;\r\n    private readonly _id: string;\r\n    private readonly _conventions: DocumentConventions;\r\n\r\n\r\n    constructor(id: string, changeVector: string, conventions: DocumentConventions) {\r\n        super();\r\n\r\n        this._changeVector = changeVector;\r\n        this._id = id;\r\n        this._conventions = conventions;\r\n    }\r\n\r\n    createRequest(node: ServerNode): HttpRequestParameters {\r\n        const uri = node.url + \"/databases/\" + node.database + \"/docs?id=\" + this._urlEncode(this._id);\r\n\r\n        return {\r\n            uri,\r\n            method: \"GET\",\r\n            headers: {\r\n                [HEADERS.IF_NONE_MATCH]: `\"${this._changeVector}\"`\r\n            }\r\n        }\r\n    }\r\n\r\n    public async setResponseAsync(bodyStream: Stream, fromCache: boolean): Promise<string> {\r\n        if (!bodyStream) {\r\n            this.result = null;\r\n            return;\r\n        }\r\n\r\n        let body: string = null;\r\n        this.result =\r\n            await ConditionalGetDocumentsCommand.parseDocumentsResultResponseAsync(\r\n                bodyStream, this._conventions, b => body = b);\r\n\r\n        return body as string;\r\n    }\r\n\r\n    public static async parseDocumentsResultResponseAsync(\r\n        bodyStream: Stream,\r\n        conventions: DocumentConventions,\r\n        bodyCallback?: (body: string) => void): Promise<ConditionalGetResult> {\r\n\r\n        const body = await readToEnd(bodyStream);\r\n        bodyCallback?.(body);\r\n\r\n        const parsedJson = JSON.parse(body);\r\n\r\n        return ConditionalGetDocumentsCommand._mapToLocalObject(parsedJson, conventions);\r\n    }\r\n\r\n    private static _mapToLocalObject(json: any, conventions: DocumentConventions): ConditionalGetResult {\r\n        return {\r\n            results: json.Results.map(x => ObjectUtil.transformDocumentKeys(x, conventions)),\r\n            changeVector: json.ChangeVector\r\n        };\r\n    }\r\n\r\n    public async processResponse(cache: HttpCache, response: HttpResponse, bodyStream: Readable, url: string): Promise<ResponseDisposeHandling> {\r\n        if (response.status === StatusCodes.NotModified) {\r\n            return \"Automatic\";\r\n        }\r\n\r\n        const result = await super.processResponse(cache, response, bodyStream, url);\r\n        this.result.changeVector = response.headers.get(\"ETag\");\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Here we explicitly do _NOT_ want to have caching\r\n     * by the Request Executor, we want to manage it ourselves\r\n     */\r\n    get isReadRequest(): boolean {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport interface ConditionalGetResult {\r\n    results: any[];\r\n    changeVector: string;\r\n}\r\n"]}