{"version":3,"file":"QueryCommand.js","sourceRoot":"","sources":["../../../../src/Documents/Commands/QueryCommand.ts"],"names":[],"mappings":"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","sourcesContent":["import { QueryResult } from \"../Queries/QueryResult.js\";\r\nimport { DocumentConventions } from \"../Conventions/DocumentConventions.js\";\r\nimport { IndexQuery, writeIndexQuery } from \"../Queries/IndexQuery.js\";\r\nimport { throwError } from \"../../Exceptions/index.js\";\r\nimport { Stream } from \"node:stream\";\r\nimport { ServerCasing, ServerResponse } from \"../../Types/index.js\";\r\nimport { QueryTimings } from \"../Queries/Timings/QueryTimings.js\";\r\nimport { StringUtil } from \"../../Utility/StringUtil.js\";\r\nimport { readToEnd } from \"../../Utility/StreamUtil.js\";\r\nimport { ObjectUtil } from \"../../Utility/ObjectUtil.js\";\r\nimport { InMemoryDocumentSessionOperations } from \"../Session/InMemoryDocumentSessionOperations.js\";\r\nimport { AbstractQueryCommand } from \"./AbstractQueryCommand.js\";\r\nimport { DateUtil } from \"../../Utility/DateUtil.js\";\r\n\r\nexport interface QueryCommandOptions {\r\n    metadataOnly?: boolean;\r\n    indexEntriesOnly?: boolean;\r\n}\r\n\r\nexport class QueryCommand extends AbstractQueryCommand<QueryResult, { [param: string]: object }> {\r\n    private readonly _conventions: DocumentConventions;\r\n    private readonly _indexQuery: IndexQuery;\r\n    protected readonly _session: InMemoryDocumentSessionOperations;\r\n\r\n\r\n    public constructor(\r\n        session: InMemoryDocumentSessionOperations, indexQuery: IndexQuery, opts: QueryCommandOptions) {\r\n        super(indexQuery, !indexQuery.disableCaching, opts?.metadataOnly, opts?.indexEntriesOnly, false);\r\n\r\n        this._session = session;\r\n\r\n        if (!indexQuery) {\r\n            throwError(\"InvalidArgumentException\", \"indexQuery cannot be null.\");\r\n        }\r\n\r\n        this._indexQuery = indexQuery;\r\n        this._conventions = session.conventions;\r\n    }\r\n\r\n    protected getQueryHash(): string {\r\n        return this._indexQuery.getQueryHash(this._session.conventions.objectMapper);\r\n    }\r\n\r\n    protected _getContent(): string {\r\n        return writeIndexQuery(this._session.conventions, this._indexQuery);\r\n    }\r\n\r\n    public async setResponseAsync(bodyStream: Stream, fromCache: boolean): Promise<string> {\r\n        if (!bodyStream) {\r\n            this.result = null;\r\n            return;\r\n        }\r\n\r\n        let body: string = null;\r\n        this.result = await QueryCommand.parseQueryResultResponseAsync(\r\n            bodyStream, this._session.conventions, fromCache, b => body = b);\r\n\r\n        return body;\r\n    }\r\n\r\n    public static async parseQueryResultResponseAsync(\r\n        bodyStream: Stream,\r\n        conventions: DocumentConventions,\r\n        fromCache: boolean,\r\n        bodyCallback?: (body: string) => void): Promise<QueryResult> {\r\n\r\n        const body = await readToEnd(bodyStream);\r\n        bodyCallback?.(body);\r\n\r\n        const parsedJson = JSON.parse(body);\r\n\r\n        const queryResult = QueryCommand._mapToLocalObject(parsedJson, conventions);\r\n\r\n        if (fromCache) {\r\n            queryResult.durationInMs = -1;\r\n\r\n            if (queryResult.timingsInMs) {\r\n                queryResult.timingsInMs.durationInMs = -1;\r\n                queryResult.timingsInMs = null;\r\n            }\r\n        }\r\n\r\n        return queryResult;\r\n    }\r\n\r\n    private static _mapTimingsToLocalObject(timings: ServerCasing<ServerResponse<QueryTimings>>) {\r\n        if (!timings) {\r\n            return undefined;\r\n        }\r\n\r\n        const mapped = new QueryTimings();\r\n        mapped.durationInMs = timings.DurationInMs;\r\n        mapped.timings = timings.Timings ? {} : undefined;\r\n        if (timings.Timings) {\r\n            for (const time of Object.keys(timings.Timings)) {\r\n                mapped.timings[StringUtil.uncapitalize(time)] = QueryCommand._mapTimingsToLocalObject(timings.Timings[time]);\r\n            }\r\n        }\r\n        return mapped;\r\n    }\r\n\r\n\r\n    private static _mapToLocalObject(json: any, conventions: DocumentConventions): QueryResult {\r\n        const props: Omit<QueryResult, \"scoreExplanations\" | \"cappedMaxResults\" | \"createSnapshot\" | \"resultSize\"> = {\r\n            results: json.Results.map(x => ObjectUtil.transformDocumentKeys(x, conventions)),\r\n            includes: ObjectUtil.mapIncludesToLocalObject(json.Includes, conventions),\r\n            indexName: json.IndexName,\r\n            indexTimestamp: DateUtil.utc.parse(json.IndexTimestamp),\r\n            includedPaths: json.IncludedPaths,\r\n            isStale: json.IsStale,\r\n            skippedResults: json.SkippedResults,\r\n            totalResults: json.TotalResults,\r\n            highlightings: json.Highlightings,\r\n            explanations: json.Explanations,\r\n            timingsInMs: json.TimingsInMs,\r\n            lastQueryTime: DateUtil.utc.parse(json.LastQueryTime),\r\n            durationInMs: json.DurationInMs,\r\n            resultEtag: json.ResultEtag,\r\n            nodeTag: json.NodeTag,\r\n            scannedResults: json.ScannedResults,\r\n            counterIncludes: ObjectUtil.mapCounterIncludesToLocalObject(json.CounterIncludes),\r\n            includedCounterNames: json.IncludedCounterNames,\r\n            timeSeriesIncludes: ObjectUtil.mapTimeSeriesIncludesToLocalObject(json.TimeSeriesIncludes),\r\n            compareExchangeValueIncludes: ObjectUtil.mapCompareExchangeToLocalObject(json.CompareExchangeValueIncludes),\r\n            revisionIncludes: json.RevisionIncludes,\r\n            timeSeriesFields: json.TimeSeriesFields,\r\n            timings: QueryCommand._mapTimingsToLocalObject(json.Timings)\r\n        }\r\n\r\n        return Object.assign(new QueryResult(), props);\r\n    }\r\n}\r\n"]}