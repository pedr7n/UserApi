{"version":3,"file":"AbstractCsharpCountersIndexCreationTask.js","sourceRoot":"","sources":["../../../../../src/Documents/Indexes/Counters/AbstractCsharpCountersIndexCreationTask.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,wCAAwC,EAAE,MAAM,+CAA+C,CAAC;AAEzG,OAAO,EAAE,8BAA8B,EAAE,MAAM,qCAAqC,CAAC;AACrF,OAAO,EAAE,mBAAmB,EAAE,MAAM,0CAA0C,CAAC;AAE/E,MAAM,OAAgB,uCAAwC,SAAQ,wCAAwC;IACnG,GAAG,CAAS;IAEnB,qBAAqB;QACjB,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;YACpB,IAAI,CAAC,WAAW,GAAG,IAAI,mBAAmB,EAAE,CAAC;QACjD,CAAC;QAED,MAAM,sBAAsB,GAAG,IAAI,8BAA8B,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;QACvF,sBAAsB,CAAC,cAAc,GAAG,IAAI,CAAC,eAAe,CAAC;QAC7D,sBAAsB,CAAC,gBAAgB,GAAG,IAAI,CAAC,iBAAiB,CAAC;QACjE,sBAAsB,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;QACtC,sBAAsB,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7C,sBAAsB,CAAC,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC;QAC3D,sBAAsB,CAAC,kBAAkB,GAAG,IAAI,CAAC,iBAAiB,CAAC;QACnE,sBAAsB,CAAC,kBAAkB,GAAG,IAAI,CAAC,mBAAmB,CAAC;QACrE,sBAAsB,CAAC,kBAAkB,GAAG,IAAI,CAAC,qBAAqB,CAAC;QACvE,sBAAsB,CAAC,qBAAqB,GAAG,IAAI,CAAC,sBAAsB,CAAC;QAC3E,sBAAsB,CAAC,wBAAwB,GAAG,IAAI,CAAC,yBAAyB,CAAC;QACjF,sBAAsB,CAAC,4CAA4C,GAAG,IAAI,CAAC,6CAA6C,CAAC;QACzH,sBAAsB,CAAC,+BAA+B,GAAG,IAAI,CAAC,gCAAgC,CAAC;QAC/F,sBAAsB,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC;QAClE,sBAAsB,CAAC,oBAAoB,GAAG,IAAI,CAAC,oBAAoB,CAAC;QACxE,sBAAsB,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;QAC1D,sBAAsB,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAChD,sBAAsB,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAChD,sBAAsB,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QAC1C,sBAAsB,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;QAE5D,OAAO,sBAAsB,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACtE,CAAC;CACJ","sourcesContent":["import { AbstractGenericCountersIndexCreationTask } from \"./AbstractGenericCountersIndexCreationTask.js\";\r\nimport { CountersIndexDefinition } from \"./CountersIndexDefinition.js\";\r\nimport { CountersIndexDefinitionBuilder } from \"./CountersIndexDefinitionBuilder.js\";\r\nimport { DocumentConventions } from \"../../Conventions/DocumentConventions.js\";\r\n\r\nexport abstract class AbstractCsharpCountersIndexCreationTask extends AbstractGenericCountersIndexCreationTask {\r\n    public map: string;\r\n\r\n    createIndexDefinition(): CountersIndexDefinition {\r\n        if (!this.conventions) {\r\n            this.conventions = new DocumentConventions();\r\n        }\r\n\r\n        const indexDefinitionBuilder = new CountersIndexDefinitionBuilder(this.getIndexName());\r\n        indexDefinitionBuilder.indexesStrings = this._indexesStrings;\r\n        indexDefinitionBuilder.analyzersStrings = this._analyzersStrings;\r\n        indexDefinitionBuilder.map = this.map;\r\n        indexDefinitionBuilder.reduce = this._reduce;\r\n        indexDefinitionBuilder.storesStrings = this._storesStrings;\r\n        indexDefinitionBuilder.suggestionsOptions = this._indexSuggestions;\r\n        indexDefinitionBuilder.termVectorsStrings = this._termVectorsStrings;\r\n        indexDefinitionBuilder.vectorFieldStrings = this._vectorOptionsStrings;\r\n        indexDefinitionBuilder.spatialIndexesStrings = this._spatialOptionsStrings;\r\n        indexDefinitionBuilder.outputReduceToCollection = this._outputReduceToCollection;\r\n        indexDefinitionBuilder.patternForOutputReduceToCollectionReferences = this._patternForOutputReduceToCollectionReferences;\r\n        indexDefinitionBuilder.patternReferencesCollectionName = this._patternReferencesCollectionName;\r\n        indexDefinitionBuilder.additionalSources = this.additionalSources;\r\n        indexDefinitionBuilder.additionalAssemblies = this.additionalAssemblies;\r\n        indexDefinitionBuilder.configuration = this.configuration;\r\n        indexDefinitionBuilder.lockMode = this.lockMode;\r\n        indexDefinitionBuilder.priority = this.priority;\r\n        indexDefinitionBuilder.state = this.state;\r\n        indexDefinitionBuilder.deploymentMode = this.deploymentMode;\r\n\r\n        return indexDefinitionBuilder.toIndexDefinition(this.conventions);\r\n    }\r\n}\r\n"]}