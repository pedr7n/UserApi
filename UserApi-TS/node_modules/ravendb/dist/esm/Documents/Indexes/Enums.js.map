{"version":3,"file":"Enums.js","sourceRoot":"","sources":["../../../../src/Documents/Indexes/Enums.ts"],"names":[],"mappings":"","sourcesContent":["export type IndexState =\r\n    \"Normal\"\r\n    | \"Disabled\"\r\n    | \"Idle\"\r\n    | \"Error\";\r\n\r\nexport type IndexType =\r\n    \"None\"\r\n    | \"AutoMap\"\r\n    | \"AutoMapReduce\"\r\n    | \"Map\"\r\n    | \"MapReduce\"\r\n    | \"Faulty\"\r\n    | \"JavaScriptMap\"\r\n    | \"JavaScriptMapReduce\";\r\n\r\nexport type SearchEngineType =\r\n    \"None\"\r\n    | \"Corax\"\r\n    | \"Lucene\";\r\n\r\nexport type FieldStorage = \"Yes\" | \"No\";\r\n\r\nexport type FieldIndexing =\r\n    /**\r\n     * Do not index the field value.\r\n     * This field can thus not be searched, but one can still access its contents provided it is stored.\r\n     */\r\n    \"No\"\r\n    /**\r\n     * Index the tokens produced by running the field's value through an Analyzer. This is useful for common text.\r\n     */\r\n    | \"Search\"\r\n\r\n    /**\r\n     * Index the field's value without using an Analyzer, so it can be searched.  As no analyzer is used the\r\n     * value will be stored as a single term. This is useful for unique Ids like product numbers.\r\n     */\r\n    | \"Exact\"\r\n\r\n    /**\r\n     * Index the tokens produced by running the field's value through an Analyzer (same as Search),\r\n     * store them in index and track term vector positions and offsets. This is mandatory when highlighting is used.\r\n     */\r\n    | \"Highlighting\"\r\n\r\n    /**\r\n     *  Index this field using the default internal analyzer: LowerCaseKeywordAnalyzer\r\n     */\r\n    | \"Default\";\r\n\r\nexport type FieldTermVector =\r\n    /**\r\n     * Do not store term vectors\r\n     */\r\n    \"No\"\r\n    /**\r\n     * Store the term vectors of each document. A term vector is a list of the document's\r\n     * terms and their number of occurrences in that document.\r\n     */\r\n    | \"Yes\"\r\n    /**\r\n     * Store the term vector + token position information\r\n     */\r\n    | \"WithPositions\"\r\n    /**\r\n     * Store the term vector + Token offset information\r\n     */\r\n    | \"WithOffsets\"\r\n    /**\r\n     * Store the term vector + Token position and offset information\r\n     */\r\n    | \"WithPositionsAndOffsets\";\r\n\r\nexport type IndexPriority =\r\n    \"Low\"\r\n    | \"Normal\"\r\n    | \"High\";\r\n\r\nexport type IndexLockMode =\r\n    \"Unlock\"\r\n    | \"LockedIgnore\"\r\n    | \"LockedError\";\r\n\r\n\r\nexport type AggregationOperation =\r\n    \"None\"\r\n    | \"Count\"\r\n    | \"Sum\";\r\n\r\nexport type AutoFieldIndexing =\r\n    \"No\"\r\n    | \"Search\"\r\n    | \"Exact\"\r\n    | \"Highighting\"\r\n    | \"Default\";\r\n\r\nexport type GroupByArrayBehavior =\r\n    \"NotApplicable\"\r\n    | \"ByContent\"\r\n    | \"ByIndividualValues\";\r\n\r\nexport type AutoSpatialMethodType =\r\n    \"Point\"\r\n    | \"Wkt\";\r\n\r\n/**\r\n * Represents enum mapping in index definition\r\n * ex. Role.Admin -> \"admin\"\r\n *     (sourceCode)  (actualValue)\r\n */\r\nexport interface EnumMapping {\r\n    sourceCode: string;\r\n    actualValue: string | number;\r\n}\r\n"]}