import { AbstractIndexCreationTaskBase } from "../AbstractIndexCreationTaskBase.js";
import { TimeSeriesIndexDefinition } from "./TimeSeriesIndexDefinition.js";
import { IndexDefinition } from "../IndexDefinition.js";
export declare abstract class AbstractRawJavaScriptTimeSeriesIndexCreationTask extends AbstractIndexCreationTaskBase<TimeSeriesIndexDefinition> {
    private readonly _definition;
    protected constructor();
    get maps(): Set<string>;
    set maps(value: Set<string>);
    get fields(): {
        [fieldName: string]: import("../IndexFieldOptions.js").IndexFieldOptions;
    };
    set fields(value: {
        [fieldName: string]: import("../IndexFieldOptions.js").IndexFieldOptions;
    });
    get reduce(): string;
    set reduce(value: string);
    get isMapReduce(): boolean;
    /**
     * @return If not null than each reduce result will be created as a document in the specified collection name.
     */
    get outputReduceToCollection(): string;
    /**
     * @param value If not null than each reduce result will be created as a document in the specified collection name.
     */
    set outputReduceToCollection(value: string);
    /**
     * @return Defines a collection name for reference documents created based on provided pattern
     */
    get patternReferencesCollectionName(): string;
    /**
     * @param value Defines a collection name for reference documents created based on provided pattern
     */
    set patternReferencesCollectionName(value: string);
    /**
     * @return Defines a collection name for reference documents created based on provided pattern
     */
    get patternForOutputReduceToCollectionReferences(): string;
    /**
     * @param value Defines a collection name for reference documents created based on provided pattern
     */
    set patternForOutputReduceToCollectionReferences(value: string);
    createIndexDefinition(): IndexDefinition;
}
//# sourceMappingURL=AbstractRawJavaScriptTimeSeriesIndexCreationTask.d.ts.map