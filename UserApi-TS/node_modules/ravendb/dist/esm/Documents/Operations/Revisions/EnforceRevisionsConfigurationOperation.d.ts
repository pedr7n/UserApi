import { IOperation, OperationIdResult, OperationResultType } from "../OperationAbstractions.js";
import { IDocumentStore } from "../../IDocumentStore.js";
import { DocumentConventions } from "../../Conventions/DocumentConventions.js";
import { HttpCache } from "../../../Http/HttpCache.js";
import { RavenCommand } from "../../../Http/RavenCommand.js";
export declare class EnforceRevisionsConfigurationOperation implements IOperation<OperationIdResult> {
    private readonly _parameters;
    constructor();
    constructor(parameters: EnforceRevisionsParameters);
    get resultType(): OperationResultType;
    getCommand(store: IDocumentStore, conventions: DocumentConventions, httpCache: HttpCache): RavenCommand<OperationIdResult>;
}
export interface EnforceRevisionsParameters {
    includeForceCreated: boolean;
    collections?: string[];
}
//# sourceMappingURL=EnforceRevisionsConfigurationOperation.d.ts.map