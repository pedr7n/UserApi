{"version":3,"file":"EnforceRevisionsConfigurationOperation.js","sourceRoot":"","sources":["../../../../../src/Documents/Operations/Revisions/EnforceRevisionsConfigurationOperation.ts"],"names":[],"mappings":"AAIA,OAAO,EAAE,YAAY,EAAE,MAAM,+BAA+B,CAAC;AAK7D,MAAM,OAAO,sCAAsC;IAC9B,WAAW,CAA6B;IAIzD,YAAY,UAAuC;QAC/C,IAAI,CAAC,WAAW,GAAG,UAAU,IAAI;YAC7B,WAAW,EAAE,IAAI;YACjB,mBAAmB,EAAE,KAAK;SAC7B,CAAC;IACN,CAAC;IAED,IAAW,UAAU;QACjB,OAAO,eAAe,CAAC;IAC3B,CAAC;IAED,UAAU,CAAC,KAAqB,EAAE,WAAgC,EAAE,SAAoB;QACpF,OAAO,IAAI,oCAAoC,CAAC,IAAI,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;IACnF,CAAC;CACJ;AAOD,MAAM,oCAAqC,SAAQ,YAA+B;IAC7D,WAAW,CAA6B;IACxC,YAAY,CAAsB;IAGnD,YAAY,UAAsC,EAAE,WAAgC;QAChF,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;QAC9B,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;IACpC,CAAC;IAED,aAAa,CAAC,IAAgB;QAC1B,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,aAAa,GAAG,IAAI,CAAC,QAAQ,GAAG,iCAAiC,CAAC;QAEzF,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,EAAE;aAC1B,WAAW,EAAE;aACb,KAAK,EAAE,CAAC;QAEb,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAE1D,OAAO;YACH,MAAM,EAAE,MAAM;YACd,GAAG;YACH,OAAO;YACP,IAAI;SACP,CAAA;IACL,CAAC;IAED,IAAI,aAAa;QACb,OAAO,KAAK,CAAC;IACjB,CAAC;IAED,KAAK,CAAC,gBAAgB,CAAC,UAAkB,EAAE,SAAkB;QACzD,IAAI,CAAC,UAAU,EAAE,CAAC;YACd,IAAI,CAAC,qBAAqB,EAAE,CAAC;QACjC,CAAC;QAED,OAAO,IAAI,CAAC,0BAA0B,CAAC,UAAU,CAAC,CAAC;IACvD,CAAC;CACJ","sourcesContent":["import { IOperation, OperationIdResult, OperationResultType } from \"../OperationAbstractions.js\";\r\nimport { IDocumentStore } from \"../../IDocumentStore.js\";\r\nimport { DocumentConventions } from \"../../Conventions/DocumentConventions.js\";\r\nimport { HttpCache } from \"../../../Http/HttpCache.js\";\r\nimport { RavenCommand } from \"../../../Http/RavenCommand.js\";\r\nimport { ServerNode } from \"../../../Http/ServerNode.js\";\r\nimport { HttpRequestParameters } from \"../../../Primitives/Http.js\";\r\nimport { Stream } from \"node:stream\";\r\n\r\nexport class EnforceRevisionsConfigurationOperation implements IOperation<OperationIdResult> {\r\n    private readonly _parameters: EnforceRevisionsParameters;\r\n\r\n    constructor()\r\n    constructor(parameters: EnforceRevisionsParameters)\r\n    constructor(parameters?: EnforceRevisionsParameters) {\r\n        this._parameters = parameters ?? {\r\n            collections: null,\r\n            includeForceCreated: false\r\n        };\r\n    }\r\n\r\n    public get resultType(): OperationResultType {\r\n        return \"CommandResult\";\r\n    }\r\n\r\n    getCommand(store: IDocumentStore, conventions: DocumentConventions, httpCache: HttpCache): RavenCommand<OperationIdResult> {\r\n        return new EnforceRevisionsConfigurationCommand(this._parameters, conventions);\r\n    }\r\n}\r\n\r\nexport interface EnforceRevisionsParameters {\r\n    includeForceCreated: boolean;\r\n    collections?: string[];\r\n}\r\n\r\nclass EnforceRevisionsConfigurationCommand extends RavenCommand<OperationIdResult> {\r\n    private readonly _parameters: EnforceRevisionsParameters;\r\n    private readonly _conventions: DocumentConventions;\r\n\r\n\r\n    constructor(parameters: EnforceRevisionsParameters, conventions: DocumentConventions) {\r\n        super();\r\n        this._parameters = parameters;\r\n        this._conventions = conventions;\r\n    }\r\n\r\n    createRequest(node: ServerNode): HttpRequestParameters {\r\n        const uri = node.url + \"/databases/\" + node.database + \"/admin/revisions/config/enforce\";\r\n\r\n        const headers = this._headers()\r\n            .typeAppJson()\r\n            .build();\r\n\r\n        const body = this._serializer.serialize(this._parameters);\r\n\r\n        return {\r\n            method: \"POST\",\r\n            uri,\r\n            headers,\r\n            body\r\n        }\r\n    }\r\n\r\n    get isReadRequest(): boolean {\r\n        return false;\r\n    }\r\n\r\n    async setResponseAsync(bodyStream: Stream, fromCache: boolean): Promise<string> {\r\n        if (!bodyStream) {\r\n            this._throwInvalidResponse();\r\n        }\r\n\r\n        return this._parseResponseDefaultAsync(bodyStream);\r\n    }\r\n}"]}