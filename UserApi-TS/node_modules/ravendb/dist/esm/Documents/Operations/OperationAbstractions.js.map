{"version":3,"file":"OperationAbstractions.js","sourceRoot":"","sources":["../../../../src/Documents/Operations/OperationAbstractions.ts"],"names":[],"mappings":"AA2BA,MAAM,OAAgB,0BAA0B;IAC5C,IAAI,UAAU;QACV,OAAO,aAAa,CAAC;IACzB,CAAC;CACJ;AAED,MAAM,OAAO,wBACT,SAAQ,0BAA0B;IAG3B,UAAU,CAAC,WAAgC;QAC9C,MAAM,IAAI,KAAK,CAAC,sDAAsD,CAAC,CAAC;IAC5E,CAAC;CACJ;AAED,MAAM,OAAO,6BACT,SAAQ,0BAA0B;IAG3B,UAAU,CAAC,WAAgC;QAC9C,MAAM,IAAI,KAAK,CAAC,sDAAsD,CAAC,CAAC;IAC5E,CAAC;CACJ;AAED,MAAM,OAAO,kBACT,SAAQ,0BAA0B;IAG3B,UAAU,CACb,KAAqB,EACrB,WAAgC,EAChC,SAAoB;QACpB,MAAM,IAAI,KAAK,CAAC,sDAAsD,CAAC,CAAC;IAC5E,CAAC;CACJ;AAOD,MAAM,OAAO,wBAAwB;IAC1B,IAAI,CAAS;IACb,OAAO,CAAS;IAChB,KAAK,CAAS;IACd,UAAU,CAAS;CAC7B","sourcesContent":["import { RavenCommand } from \"../../Http/RavenCommand.js\";\r\nimport { IDocumentStore } from \"../IDocumentStore.js\";\r\nimport { DocumentConventions } from \"../Conventions/DocumentConventions.js\";\r\nimport { HttpCache } from \"../../Http/HttpCache.js\";\r\n\r\nexport type OperationResultType = \"OperationId\" | \"CommandResult\" | \"PatchResult\";\r\n\r\nexport interface IAbstractOperation {\r\n    resultType: OperationResultType;\r\n}\r\n\r\nexport interface IOperation<TResult> extends IAbstractOperation {\r\n    getCommand(store: IDocumentStore, conventions: DocumentConventions, httpCache: HttpCache): RavenCommand<TResult>;\r\n}\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\r\nexport interface IAwaitableOperation extends IOperation<OperationIdResult> {\r\n}\r\n\r\nexport interface IMaintenanceOperation<TResult> extends IAbstractOperation {\r\n    getCommand(conventions: DocumentConventions): RavenCommand<TResult>;\r\n}\r\n\r\nexport interface IServerOperation<TResult> extends IAbstractOperation {\r\n    getCommand(conventions: DocumentConventions): RavenCommand<TResult>;\r\n}\r\n\r\nexport abstract class AbstractAwaitableOperation {\r\n    get resultType(): OperationResultType {\r\n        return \"OperationId\";\r\n    }\r\n}\r\n\r\nexport class AwaitableServerOperation\r\n    extends AbstractAwaitableOperation\r\n    implements IServerOperation<OperationIdResult> {\r\n\r\n    public getCommand(conventions: DocumentConventions): RavenCommand<OperationIdResult> {\r\n        throw new Error(\"getCommand() must be implemented in extending class.\");\r\n    }\r\n}\r\n\r\nexport class AwaitableMaintenanceOperation\r\n    extends AbstractAwaitableOperation\r\n    implements IMaintenanceOperation<OperationIdResult> {\r\n\r\n    public getCommand(conventions: DocumentConventions): RavenCommand<OperationIdResult> {\r\n        throw new Error(\"getCommand() must be implemented in extending class.\");\r\n    }\r\n}\r\n\r\nexport class AwaitableOperation\r\n    extends AbstractAwaitableOperation\r\n    implements IOperation<OperationIdResult> {\r\n\r\n    public getCommand(\r\n        store: IDocumentStore,\r\n        conventions: DocumentConventions,\r\n        httpCache: HttpCache): RavenCommand<OperationIdResult> {\r\n        throw new Error(\"getCommand() must be implemented in extending class.\");\r\n    }\r\n}\r\n\r\nexport interface OperationIdResult {\r\n    operationId: number;\r\n    operationNodeTag: string;\r\n}\r\n\r\nexport class OperationExceptionResult {\r\n    public type: string;\r\n    public message: string;\r\n    public error: string;\r\n    public statusCode: number;\r\n}\r\n"]}