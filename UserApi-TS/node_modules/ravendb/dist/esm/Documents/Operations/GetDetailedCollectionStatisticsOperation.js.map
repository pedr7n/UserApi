{"version":3,"file":"GetDetailedCollectionStatisticsOperation.js","sourceRoot":"","sources":["../../../../src/Documents/Operations/GetDetailedCollectionStatisticsOperation.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,YAAY,EAAE,MAAM,4BAA4B,CAAC;AAM1D,MAAM,OAAO,wCAAwC;IACjD,UAAU,CAAC,WAAgC;QACvC,OAAO,IAAI,sCAAsC,EAAE,CAAC;IACxD,CAAC;IAED,IAAW,UAAU;QACjB,OAAO,eAAe,CAAC;IAC3B,CAAC;CAEJ;AAED,MAAM,sCAAuC,SAAQ,YAA0C;IAC3F,IAAI,aAAa;QACb,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,aAAa,CAAC,IAAgB;QAC1B,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,aAAa,GAAG,IAAI,CAAC,QAAQ,GAAG,6BAA6B,CAAC;QAErF,OAAO;YACH,MAAM,EAAE,KAAK;YACb,GAAG;SACN,CAAA;IACL,CAAC;IAED,KAAK,CAAC,gBAAgB,CAAC,UAAkB,EAAE,SAAkB;QACzD,IAAI,CAAC,UAAU,EAAE,CAAC;YACd,IAAI,CAAC,qBAAqB,EAAE,CAAC;QACjC,CAAC;QAED,OAAO,IAAI,CAAC,0BAA0B,CAAC,UAAU,CAAC,CAAC;IACvD,CAAC;CACJ","sourcesContent":["import { IMaintenanceOperation, OperationResultType } from \"./OperationAbstractions.js\";\r\nimport { DetailedCollectionStatistics } from \"./DetailedCollectionStatistics.js\";\r\nimport { RavenCommand } from \"../../Http/RavenCommand.js\";\r\nimport { DocumentConventions } from \"../Conventions/DocumentConventions.js\";\r\nimport { HttpRequestParameters } from \"../../Primitives/Http.js\";\r\nimport { ServerNode } from \"../../Http/ServerNode.js\";\r\nimport { Stream } from \"node:stream\";\r\n\r\nexport class GetDetailedCollectionStatisticsOperation implements IMaintenanceOperation<DetailedCollectionStatistics> {\r\n    getCommand(conventions: DocumentConventions): RavenCommand<DetailedCollectionStatistics> {\r\n        return new GetDetailedCollectionStatisticsCommand();\r\n    }\r\n\r\n    public get resultType(): OperationResultType {\r\n        return \"CommandResult\";\r\n    }\r\n\r\n}\r\n\r\nclass GetDetailedCollectionStatisticsCommand extends RavenCommand<DetailedCollectionStatistics> {\r\n    get isReadRequest(): boolean {\r\n        return true;\r\n    }\r\n\r\n    createRequest(node: ServerNode): HttpRequestParameters {\r\n        const uri = node.url + \"/databases/\" + node.database + \"/collections/stats/detailed\";\r\n\r\n        return {\r\n            method: \"GET\",\r\n            uri\r\n        }\r\n    }\r\n\r\n    async setResponseAsync(bodyStream: Stream, fromCache: boolean): Promise<string> {\r\n        if (!bodyStream) {\r\n            this._throwInvalidResponse();\r\n        }\r\n\r\n        return this._parseResponseDefaultAsync(bodyStream);\r\n    }\r\n}\r\n"]}