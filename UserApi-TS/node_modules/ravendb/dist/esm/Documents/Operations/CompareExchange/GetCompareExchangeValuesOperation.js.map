{"version":3,"file":"GetCompareExchangeValuesOperation.js","sourceRoot":"","sources":["../../../../../src/Documents/Operations/CompareExchange/GetCompareExchangeValuesOperation.ts"],"names":[],"mappings":"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","sourcesContent":["import { HttpRequestParameters } from \"../../../Primitives/Http.js\";\r\nimport { IOperation, OperationResultType } from \"../OperationAbstractions.js\";\r\nimport { CompareExchangeValue } from \"./CompareExchangeValue.js\";\r\nimport { throwError } from \"../../../Exceptions/index.js\";\r\nimport { CompareExchangeResultClass, ServerCasing, ServerResponse } from \"../../../Types/index.js\";\r\nimport { IDocumentStore } from \"../../IDocumentStore.js\";\r\nimport { DocumentConventions } from \"../../Conventions/DocumentConventions.js\";\r\nimport { HttpCache } from \"../../../Http/HttpCache.js\";\r\nimport { RavenCommand } from \"../../../Http/RavenCommand.js\";\r\nimport { ServerNode } from \"../../../Http/ServerNode.js\";\r\nimport { CompareExchangeValueResultParser, GetCompareExchangeValuesResponse } from \"./CompareExchangeValueResultParser.js\";\r\nimport { Stream } from \"node:stream\";\r\nimport { StringBuilder } from \"../../../Utility/StringBuilder.js\";\r\nimport { TypeUtil } from \"../../../Utility/TypeUtil.js\";\r\n\r\nexport interface GetCompareExchangeValuesParameters<T> {\r\n    keys?: string[];\r\n\r\n    startWith?: string;\r\n    start?: number;\r\n    pageSize?: number;\r\n\r\n    materializeMetadata?: boolean;\r\n\r\n    clazz?: CompareExchangeResultClass<T>;\r\n}\r\n\r\nexport class GetCompareExchangeValuesOperation<T> implements IOperation<{ [key: string]: CompareExchangeValue<T> }> {\r\n\r\n    private readonly _clazz: CompareExchangeResultClass<T>;\r\n    private readonly _keys: string[];\r\n\r\n    private readonly _startWith: string;\r\n    private readonly _start: number;\r\n    private readonly _pageSize: number;\r\n\r\n    private readonly _materializeMetadata: boolean;\r\n\r\n    public get keys(): string[] {\r\n        return this._keys;\r\n    }\r\n\r\n    public get startWith(): string {\r\n        return this._startWith;\r\n    }\r\n\r\n    public get start(): number {\r\n        return this._start;\r\n    }\r\n\r\n    public get pageSize(): number {\r\n        return this._pageSize;\r\n    }\r\n\r\n    public get clazz(): CompareExchangeResultClass<T> {\r\n        return this._clazz;\r\n    }\r\n\r\n    public constructor(parameters: GetCompareExchangeValuesParameters<T>) {\r\n        this._clazz = parameters.clazz;\r\n        this._materializeMetadata = parameters.materializeMetadata || true;\r\n\r\n        if (parameters.keys) {\r\n            if (!parameters.keys.length) {\r\n                throwError(\"InvalidArgumentException\", \"Keys cannot be an empty array.\");\r\n            }\r\n\r\n            this._keys = parameters.keys;\r\n        } else if (!TypeUtil.isNullOrUndefined(parameters.startWith)) {\r\n            this._startWith = parameters.startWith;\r\n            this._start = parameters.start;\r\n            this._pageSize = parameters.pageSize;\r\n        } else {\r\n            throwError(\"InvalidArgumentException\", \"Please specify at least keys or startWith parameter\");\r\n        }\r\n    }\r\n\r\n    public getCommand(store: IDocumentStore, conventions: DocumentConventions, cache: HttpCache)\r\n        : RavenCommand<{ [key: string]: CompareExchangeValue<T> }> {\r\n        return new GetCompareExchangeValuesCommand(this, this._materializeMetadata, conventions);\r\n    }\r\n\r\n    public get resultType(): OperationResultType {\r\n        return \"CommandResult\";\r\n    }\r\n}\r\n\r\nexport class GetCompareExchangeValuesCommand<T> extends RavenCommand<{ [key: string]: CompareExchangeValue<T> }> {\r\n    private _operation: GetCompareExchangeValuesOperation<T>;\r\n    private readonly _materializeMetadata: boolean;\r\n    private readonly _conventions: DocumentConventions;\r\n\r\n    public constructor(operation: GetCompareExchangeValuesOperation<T>, materializeMetadata: boolean, conventions: DocumentConventions) {\r\n        super();\r\n        this._operation = operation;\r\n        this._materializeMetadata = materializeMetadata;\r\n        this._conventions = conventions;\r\n    }\r\n\r\n    public get isReadRequest(): boolean {\r\n        return true;\r\n    }\r\n\r\n    public createRequest(node: ServerNode): HttpRequestParameters {\r\n        const pathBuilder = new StringBuilder(node.url);\r\n\r\n        pathBuilder.append(\"/databases/\")\r\n            .append(node.database)\r\n            .append(\"/cmpxchg?\");\r\n\r\n        if (this._operation.keys) {\r\n            for (const key of this._operation.keys) {\r\n                pathBuilder.append(\"&key=\").append(encodeURIComponent(key));\r\n            }\r\n        } else {\r\n            if (this._operation.startWith) {\r\n                pathBuilder.append(\"&startsWith=\")\r\n                    .append(encodeURIComponent(this._operation.startWith));\r\n            }\r\n\r\n            if (this._operation.start) {\r\n                pathBuilder.append(\"&start=\")\r\n                    .append(this._operation.start);\r\n            }\r\n\r\n            if (this._operation.pageSize) {\r\n                pathBuilder.append(\"&pageSize=\")\r\n                    .append(this._operation.pageSize);\r\n            }\r\n        }\r\n\r\n        const uri = pathBuilder.toString();\r\n\r\n        return { uri };\r\n    }\r\n\r\n    public async setResponseAsync(bodyStream: Stream, fromCache: boolean): Promise<string> {\r\n        let body: string = null;\r\n\r\n        if (!bodyStream) {\r\n            this.result = {};\r\n            return body;\r\n        }\r\n\r\n        const results = await this._pipeline<ServerCasing<ServerResponse<GetCompareExchangeValuesResponse>>>()\r\n            .collectBody(b => body = b)\r\n            .parseJsonSync()\r\n            .process(bodyStream);\r\n\r\n        const localObject = GetCompareExchangeValuesCommand.mapToLocalObject(results);\r\n\r\n        this.result = CompareExchangeValueResultParser.getValues<T>(\r\n            localObject, this._materializeMetadata, this._conventions, this._operation.clazz);\r\n\r\n        return body;\r\n    }\r\n\r\n    public static mapToLocalObject(json: ServerCasing<ServerResponse<GetCompareExchangeValuesResponse>>): GetCompareExchangeValuesResponse {\r\n        return {\r\n            results: json.Results.map(item => {\r\n                if (!item.Value) {\r\n                    return {\r\n                        changeVector: item.ChangeVector,\r\n                        index: item.Index,\r\n                        key: item.Key,\r\n                        value: null\r\n                    }\r\n                }\r\n\r\n                return {\r\n                    value: item.Value,\r\n                    index: item.Index,\r\n                    key: item.Key,\r\n                    changeVector: item.ChangeVector\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n"]}