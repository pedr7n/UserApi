import { throwError } from "../../../Exceptions/index.js";
import { RavenCommand } from "../../../Http/RavenCommand.js";
import { RaftIdGenerator } from "../../../Utility/RaftIdGenerator.js";
export class DeleteIndexOperation {
    _indexName;
    constructor(indexName) {
        if (!indexName) {
            throwError("InvalidArgumentException", "Index name cannot be null.");
        }
        this._indexName = indexName;
    }
    getCommand(conventions) {
        return new DeleteIndexCommand(this._indexName);
    }
    get resultType() {
        return "CommandResult";
    }
}
export class DeleteIndexCommand extends RavenCommand {
    _indexName;
    constructor(indexName) {
        super();
        this._responseType = "Empty";
        if (!indexName) {
            throwError("InvalidArgumentException", "Index name cannot be null.");
        }
        this._indexName = indexName;
    }
    createRequest(node) {
        const uri = node.url + "/databases/" + node.database
            + "/indexes?name=" + encodeURIComponent(this._indexName);
        return { method: "DELETE", uri };
    }
    get isReadRequest() {
        return false;
    }
    getRaftUniqueRequestId() {
        return RaftIdGenerator.newId();
    }
}
//# sourceMappingURL=DeleteIndexOperation.js.map