import { HttpRequestParameters } from "../../Primitives/Http.js";
import { IMaintenanceOperation, OperationResultType } from "./OperationAbstractions.js";
import { CollectionStatistics } from "./CollectionStatistics.js";
import { RavenCommand } from "../../Http/RavenCommand.js";
import { DocumentConventions } from "../Conventions/DocumentConventions.js";
import { ServerNode } from "../../Http/ServerNode.js";
import { Stream } from "node:stream";
export declare class GetCollectionStatisticsOperation implements IMaintenanceOperation<CollectionStatistics> {
    getCommand(conventions: DocumentConventions): RavenCommand<CollectionStatistics>;
    get resultType(): OperationResultType;
}
export declare class GetCollectionStatisticsCommand extends RavenCommand<CollectionStatistics> {
    constructor();
    get isReadRequest(): boolean;
    createRequest(node: ServerNode): HttpRequestParameters;
    setResponseAsync(bodyStream: Stream, fromCache: boolean): Promise<string>;
}
//# sourceMappingURL=GetCollectionStatisticsOperation.d.ts.map