{"version":3,"file":"DelayBackupOperation.js","sourceRoot":"","sources":["../../../../../src/Documents/Operations/Backups/DelayBackupOperation.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,YAAY,EAAE,MAAM,+BAA+B,CAAC;AAG7D,OAAO,EAAE,QAAQ,EAAE,MAAM,8BAA8B,CAAC;AAExD,MAAM,OAAO,oBAAoB;IACZ,oBAAoB,CAAS;IAC7B,SAAS,CAAS;IAEnC,YAAmB,mBAA2B,EAAE,QAAgB;QAC5D,IAAI,CAAC,oBAAoB,GAAG,mBAAmB,CAAC;QAChD,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;IAC9B,CAAC;IAED,IAAW,UAAU;QACjB,OAAO,eAAe,CAAC;IAC3B,CAAC;IAED,UAAU,CAAC,WAAgC;QACvC,OAAO,IAAI,kBAAkB,CAAC,IAAI,CAAC,oBAAoB,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IAC7E,CAAC;CACJ;AAED,MAAM,kBAAmB,SAAQ,YAAkB;IAC9B,OAAO,CAAS;IAChB,SAAS,CAAS;IAEnC,YAAmB,MAAc,EAAE,QAAgB;QAC/C,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;IAC9B,CAAC;IAED,IAAI,aAAa;QACb,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,aAAa,CAAC,IAAgB;QAC1B,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,kCAAkC,GAAG,IAAI,CAAC,OAAO,GAAG,YAAY,GAAG,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC;QAErK,OAAO;YACH,GAAG;YACH,MAAM,EAAE,MAAM;SACjB,CAAA;IACL,CAAC;CACJ","sourcesContent":["import { IMaintenanceOperation, OperationResultType } from \"../OperationAbstractions.js\";\r\nimport { DocumentConventions } from \"../../Conventions/DocumentConventions.js\";\r\nimport { RavenCommand } from \"../../../Http/RavenCommand.js\";\r\nimport { ServerNode } from \"../../../Http/ServerNode.js\";\r\nimport { HttpRequestParameters } from \"../../../Primitives/Http.js\";\r\nimport { TimeUtil } from \"../../../Utility/TimeUtil.js\";\r\n\r\nexport class DelayBackupOperation implements IMaintenanceOperation<void> {\r\n    private readonly _runningBackupTaskId: number;\r\n    private readonly _duration: number;\r\n\r\n    public constructor(runningBackupTaskId: number, duration: number) {\r\n        this._runningBackupTaskId = runningBackupTaskId;\r\n        this._duration = duration;\r\n    }\r\n\r\n    public get resultType(): OperationResultType {\r\n        return \"CommandResult\";\r\n    }\r\n\r\n    getCommand(conventions: DocumentConventions): RavenCommand<void> {\r\n        return new DelayBackupCommand(this._runningBackupTaskId, this._duration);\r\n    }\r\n}\r\n\r\nclass DelayBackupCommand extends RavenCommand<void> {\r\n    private readonly _taskId: number;\r\n    private readonly _duration: number;\r\n\r\n    public constructor(taskId: number, duration: number) {\r\n        super();\r\n\r\n        this._taskId = taskId;\r\n        this._duration = duration;\r\n    }\r\n\r\n    get isReadRequest(): boolean {\r\n        return true;\r\n    }\r\n\r\n    createRequest(node: ServerNode): HttpRequestParameters {\r\n        const uri = node.url + \"/admin/backup-task/delay?taskId=\" + this._taskId + \"&duration=\" + TimeUtil.durationToTimeSpan(this._duration) + \"&database=\" + node.database;\r\n\r\n        return {\r\n            uri,\r\n            method: \"POST\"\r\n        }\r\n    }\r\n}\r\n"]}