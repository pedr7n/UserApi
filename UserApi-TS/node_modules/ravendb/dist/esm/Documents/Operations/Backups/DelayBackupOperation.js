import { RavenCommand } from "../../../Http/RavenCommand.js";
import { TimeUtil } from "../../../Utility/TimeUtil.js";
export class DelayBackupOperation {
    _runningBackupTaskId;
    _duration;
    constructor(runningBackupTaskId, duration) {
        this._runningBackupTaskId = runningBackupTaskId;
        this._duration = duration;
    }
    get resultType() {
        return "CommandResult";
    }
    getCommand(conventions) {
        return new DelayBackupCommand(this._runningBackupTaskId, this._duration);
    }
}
class DelayBackupCommand extends RavenCommand {
    _taskId;
    _duration;
    constructor(taskId, duration) {
        super();
        this._taskId = taskId;
        this._duration = duration;
    }
    get isReadRequest() {
        return true;
    }
    createRequest(node) {
        const uri = node.url + "/admin/backup-task/delay?taskId=" + this._taskId + "&duration=" + TimeUtil.durationToTimeSpan(this._duration) + "&database=" + node.database;
        return {
            uri,
            method: "POST"
        };
    }
}
//# sourceMappingURL=DelayBackupOperation.js.map