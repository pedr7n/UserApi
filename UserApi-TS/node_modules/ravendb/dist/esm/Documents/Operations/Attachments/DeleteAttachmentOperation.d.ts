import { IOperation, OperationResultType } from "../OperationAbstractions.js";
import { HttpCache } from "../../../Http/HttpCache.js";
import { HttpRequestParameters } from "../../../Primitives/Http.js";
import { IDocumentStore } from "../../IDocumentStore.js";
import { DocumentConventions } from "../../Conventions/DocumentConventions.js";
import { RavenCommand } from "../../../Http/RavenCommand.js";
import { ServerNode } from "../../../Http/ServerNode.js";
export declare class DeleteAttachmentOperation implements IOperation<void> {
    private readonly _documentId;
    private readonly _name;
    private readonly _changeVector;
    get resultType(): OperationResultType;
    constructor(documentId: string, name: string, changeVector?: string);
    getCommand(store: IDocumentStore, conventions: DocumentConventions, httpCache: HttpCache): RavenCommand<void>;
}
export declare class DeleteAttachmentCommand extends RavenCommand<void> {
    private readonly _documentId;
    private readonly _name;
    private readonly _changeVector;
    constructor(documentId: string, name: string, changeVector: string);
    get isReadRequest(): boolean;
    createRequest(node: ServerNode): HttpRequestParameters;
}
//# sourceMappingURL=DeleteAttachmentOperation.d.ts.map