{"version":3,"file":"DeleteAttachmentOperation.js","sourceRoot":"","sources":["../../../../../src/Documents/Operations/Attachments/DeleteAttachmentOperation.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,UAAU,EAAE,MAAM,gCAAgC,CAAC;AAC5D,OAAO,EAAE,UAAU,EAAE,MAAM,8BAA8B,CAAC;AAI1D,OAAO,EAAE,YAAY,EAAE,MAAM,+BAA+B,CAAC;AAG7D,MAAM,OAAO,yBAAyB;IACjB,WAAW,CAAS;IACpB,KAAK,CAAS;IACd,aAAa,CAAS;IAEvC,IAAW,UAAU;QACjB,OAAO,eAAe,CAAC;IAC3B,CAAC;IAED,YAAmB,UAAkB,EAAE,IAAY,EAAE,YAAqB;QACtE,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;QAC9B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;IACtC,CAAC;IAEM,UAAU,CACb,KAAqB,EAAE,WAAgC,EAAE,SAAoB;QAC7E,OAAO,IAAI,uBAAuB,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;IACzF,CAAC;CACJ;AAED,MAAM,OAAO,uBAAwB,SAAQ,YAAkB;IAC1C,WAAW,CAAS;IACpB,KAAK,CAAS;IACd,aAAa,CAAS;IAEvC,YAAmB,UAAkB,EAAE,IAAY,EAAE,YAAoB;QACrE,KAAK,EAAE,CAAC;QACR,IAAI,UAAU,CAAC,kBAAkB,CAAC,UAAU,CAAC,EAAE,CAAC;YAC5C,UAAU,CAAC,0BAA0B,EAAE,oCAAoC,CAAC,CAAC;QACjF,CAAC;QACD,IAAI,UAAU,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE,CAAC;YACtC,UAAU,CAAC,0BAA0B,EAAE,8BAA8B,CAAC,CAAC;QAC3E,CAAC;QAED,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;QAC9B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;IACtC,CAAC;IAED,IAAW,aAAa;QACpB,OAAO,KAAK,CAAC;IACjB,CAAC;IAEM,aAAa,CAAC,IAAgB;QACjC,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,aAAa,GAAG,IAAI,CAAC,QAAQ;cAC9C,kBAAkB,GAAG,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC;cACzD,QAAQ,GAAG,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAChD,MAAM,GAAG,GAAG;YACR,GAAG;YACH,MAAM,EAAE,QAAQ;SACnB,CAAC;QAEF,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,aAAa,EAAE,GAAG,CAAC,CAAC;QAExD,OAAO,GAAG,CAAC;IACf,CAAC;CACJ","sourcesContent":["import { IOperation, OperationResultType } from \"../OperationAbstractions.js\";\r\nimport { HttpCache } from \"../../../Http/HttpCache.js\";\r\nimport { StringUtil } from \"../../../Utility/StringUtil.js\";\r\nimport { throwError } from \"../../../Exceptions/index.js\";\r\nimport { HttpRequestParameters } from \"../../../Primitives/Http.js\";\r\nimport { IDocumentStore } from \"../../IDocumentStore.js\";\r\nimport { DocumentConventions } from \"../../Conventions/DocumentConventions.js\";\r\nimport { RavenCommand } from \"../../../Http/RavenCommand.js\";\r\nimport { ServerNode } from \"../../../Http/ServerNode.js\";\r\n\r\nexport class DeleteAttachmentOperation implements IOperation<void> {\r\n    private readonly _documentId: string;\r\n    private readonly _name: string;\r\n    private readonly _changeVector: string;\r\n\r\n    public get resultType(): OperationResultType {\r\n        return \"CommandResult\";\r\n    }\r\n\r\n    public constructor(documentId: string, name: string, changeVector?: string) {\r\n        this._documentId = documentId;\r\n        this._name = name;\r\n        this._changeVector = changeVector;\r\n    }\r\n\r\n    public getCommand(\r\n        store: IDocumentStore, conventions: DocumentConventions, httpCache: HttpCache): RavenCommand<void> {\r\n        return new DeleteAttachmentCommand(this._documentId, this._name, this._changeVector);\r\n    }\r\n}\r\n\r\nexport class DeleteAttachmentCommand extends RavenCommand<void> {\r\n    private readonly _documentId: string;\r\n    private readonly _name: string;\r\n    private readonly _changeVector: string;\r\n\r\n    public constructor(documentId: string, name: string, changeVector: string) {\r\n        super();\r\n        if (StringUtil.isNullOrWhitespace(documentId)) {\r\n            throwError(\"InvalidArgumentException\", \"DocumentId cannot be null or empty\");\r\n        }\r\n        if (StringUtil.isNullOrWhitespace(name)) {\r\n            throwError(\"InvalidArgumentException\", \"Name cannot be null or empty\");\r\n        }\r\n\r\n        this._documentId = documentId;\r\n        this._name = name;\r\n        this._changeVector = changeVector;\r\n    }\r\n\r\n    public get isReadRequest() {\r\n        return false;\r\n    }\r\n\r\n    public createRequest(node: ServerNode): HttpRequestParameters {\r\n        const uri = node.url + \"/databases/\" + node.database\r\n            + \"/attachments?id=\" + encodeURIComponent(this._documentId)\r\n            + \"&name=\" + encodeURIComponent(this._name);\r\n        const req = {\r\n            uri,\r\n            method: \"DELETE\"\r\n        };\r\n\r\n        this._addChangeVectorIfNotNull(this._changeVector, req);\r\n\r\n        return req;\r\n    }\r\n}\r\n"]}