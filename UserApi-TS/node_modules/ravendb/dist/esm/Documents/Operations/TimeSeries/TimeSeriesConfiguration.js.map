{"version":3,"file":"TimeSeriesConfiguration.js","sourceRoot":"","sources":["../../../../../src/Documents/Operations/TimeSeries/TimeSeriesConfiguration.ts"],"names":[],"mappings":"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","sourcesContent":["import { CaseInsensitiveKeysMap } from \"../../../Primitives/CaseInsensitiveKeysMap.js\";\r\nimport {\r\n    TimeSeriesCollectionConfiguration\r\n} from \"./TimeSeriesCollectionConfiguration.js\";\r\nimport { TimeUtil } from \"../../../Utility/TimeUtil.js\";\r\nimport { TimeSeriesCollectionConfigurationRaw } from \"./RawTimeSeriesTypes.js\";\r\n\r\nexport class TimeSeriesConfiguration {\r\n\r\n    public collections: Map<string, TimeSeriesCollectionConfiguration> = CaseInsensitiveKeysMap.create();\r\n    public policyCheckFrequencyInMs: number;\r\n    public namedValues: Map<string, Map<string, string[]>> = CaseInsensitiveKeysMap.create();\r\n\r\n    public getNames(collection: string, timeSeries: string): string[] {\r\n        if (!this.namedValues) {\r\n            return null;\r\n        }\r\n\r\n        const timeSeriesHolder = this.namedValues.get(collection);\r\n        if (!timeSeriesHolder) {\r\n            return null;\r\n        }\r\n\r\n        const names = timeSeriesHolder.get(timeSeries);\r\n        if (!names) {\r\n            return null;\r\n        }\r\n\r\n        return names;\r\n    }\r\n\r\n    public serialize(): TimeSeriesConfigurationRaw {\r\n        const collections: Record<string, TimeSeriesCollectionConfigurationRaw> = {};\r\n\r\n        if (this.collections) {\r\n            for (const entry of this.collections.entries()) {\r\n                collections[entry[0]] = entry[1].serialize();\r\n            }\r\n        }\r\n\r\n        const namedValues: Record<string, Record<string, string[]>> = {};\r\n\r\n        if (this.namedValues) {\r\n            for (const entry of this.namedValues.entries()) {\r\n                const collectionEntry: Record<string, string[]> = {};\r\n\r\n                for (const perCollectionEntry of entry[1].entries()) {\r\n                    collectionEntry[perCollectionEntry[0]] = perCollectionEntry[1];\r\n                }\r\n\r\n                namedValues[entry[0]] = collectionEntry;\r\n            }\r\n        }\r\n\r\n        return {\r\n            Collections: collections,\r\n            PolicyCheckFrequency: this.policyCheckFrequencyInMs ? TimeUtil.millisToTimeSpan(this.policyCheckFrequencyInMs) : null,\r\n            NamedValues: namedValues\r\n        }\r\n    }\r\n\r\n    // using handcrafted parse function as we need to customize parsing process + call after deserialize callbacks\r\n    static parse(raw: TimeSeriesConfigurationRaw): TimeSeriesConfiguration {\r\n        const configuration = new TimeSeriesConfiguration();\r\n\r\n        for (const [key, collectionRaw] of Object.entries(raw.Collections)) {\r\n            configuration.collections.set(key, TimeSeriesCollectionConfiguration.parse(collectionRaw));\r\n        }\r\n        configuration.policyCheckFrequencyInMs = raw.PolicyCheckFrequency ? TimeUtil.timeSpanToDuration(raw.PolicyCheckFrequency) : null;\r\n        for (const [key, valuesRaw] of Object.entries(raw.NamedValues)) {\r\n            const map = CaseInsensitiveKeysMap.create<string[]>();\r\n            for (const [innerKey, innerValuesRaw] of Object.entries(valuesRaw)) {\r\n                map.set(innerKey, innerValuesRaw);\r\n            }\r\n            configuration.namedValues.set(key, map);\r\n        }\r\n\r\n        return configuration;\r\n    }\r\n}\r\n\r\nexport interface TimeSeriesConfigurationRaw {\r\n    Collections: Record<string, TimeSeriesCollectionConfigurationRaw>;\r\n    PolicyCheckFrequency: string;\r\n    NamedValues: Record<string, Record<string, string[]>>;\r\n}\r\n"]}