{"version":3,"file":"TimeSeriesPolicy.js","sourceRoot":"","sources":["../../../../../src/Documents/Operations/TimeSeries/TimeSeriesPolicy.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,kCAAkC,CAAC;AAC7D,OAAO,EAAE,UAAU,EAAE,MAAM,gCAAgC,CAAC;AAC5D,OAAO,EAAE,UAAU,EAAE,MAAM,8BAA8B,CAAC;AAC1D,OAAO,EAAE,4BAA4B,EAAuB,MAAM,yBAAyB,CAAC;AAE5F,MAAM,OAAO,gBAAgB;IACzB;;OAEG;IACI,IAAI,CAAS;IAEpB;;OAEG;IACI,aAAa,CAAY;IAEhC;;OAEG;IACI,eAAe,CAAY;IAE3B,iBAAiB,CAAC,OAAe;QACpC,OAAO,OAAO,GAAG,4BAA4B,GAAG,IAAI,CAAC,IAAI,CAAC;IAC9D,CAAC;IAID,YAAmB,IAAY,EAAE,eAA0B,EAAE,aAAyB;QAClF,aAAa,GAAG,aAAa,IAAI,SAAS,CAAC,SAAS,CAAC;QACrD,IAAI,UAAU,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,CAAC;YACjC,UAAU,CAAC,0BAA0B,EAAE,8BAA8B,CAAC,CAAC;QAC3E,CAAC;QAED,IAAI,eAAe,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;YACjD,UAAU,CAAC,0BAA0B,EAAE,4CAA4C,CAAC,CAAC;QACzF,CAAC;QAED,IAAI,aAAa,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;YAC/C,UAAU,CAAC,0BAA0B,EAAE,0CAA0C,CAAC,CAAC;QACvF,CAAC;QAED,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QACnC,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;QACvC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACrB,CAAC;IAEM,SAAS;QACZ,OAAO;YACH,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,aAAa,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,IAAI;YACzE,eAAe,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,IAAI;SAClF,CAAA;IACL,CAAC;IAEM,MAAM,CAAC,KAAK,CAAC,MAA2B;QAC3C,OAAO,IAAI,gBAAgB,CACvB,MAAM,CAAC,IAAI,EACX,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,eAAe,CAAC,EACvC,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,aAAa,CAAC,CACxC,CAAC;IACN,CAAC;CACJ","sourcesContent":["import { TimeValue } from \"../../../Primitives/TimeValue.js\";\r\nimport { StringUtil } from \"../../../Utility/StringUtil.js\";\r\nimport { throwError } from \"../../../Exceptions/index.js\";\r\nimport { TIME_SERIES_ROLLUP_SEPARATOR, TimeSeriesPolicyRaw } from \"./RawTimeSeriesTypes.js\";\r\n\r\nexport class TimeSeriesPolicy {\r\n    /**\r\n     * Name of the time series policy, must be unique.\r\n     */\r\n    public name: string;\r\n\r\n    /**\r\n     * How long the data of this policy will be retained\r\n     */\r\n    public retentionTime: TimeValue;\r\n\r\n    /**\r\n     * Define the aggregation of this policy\r\n     */\r\n    public aggregationTime: TimeValue;\r\n\r\n    public getTimeSeriesName(rawName: string): string {\r\n        return rawName + TIME_SERIES_ROLLUP_SEPARATOR + this.name;\r\n    }\r\n\r\n    public constructor(name: string, aggregationTime: TimeValue);\r\n    public constructor(name: string, aggregationTime: TimeValue, retentionTime: TimeValue);\r\n    public constructor(name: string, aggregationTime: TimeValue, retentionTime?: TimeValue) {\r\n        retentionTime = retentionTime || TimeValue.MAX_VALUE;\r\n        if (StringUtil.isNullOrEmpty(name)) {\r\n            throwError(\"InvalidArgumentException\", \"Name cannot be null or empty\");\r\n        }\r\n\r\n        if (aggregationTime.compareTo(TimeValue.ZERO) <= 0) {\r\n            throwError(\"InvalidArgumentException\", \"Aggregation time must be greater than zero\");\r\n        }\r\n\r\n        if (retentionTime.compareTo(TimeValue.ZERO) <= 0) {\r\n            throwError(\"InvalidArgumentException\", \"Retention time must be greater than zero\");\r\n        }\r\n\r\n        this.retentionTime = retentionTime;\r\n        this.aggregationTime = aggregationTime;\r\n        this.name = name;\r\n    }\r\n\r\n    public serialize(): TimeSeriesPolicyRaw {\r\n        return {\r\n            Name: this.name,\r\n            RetentionTime: this.retentionTime ? this.retentionTime.serialize() : null,\r\n            AggregationTime: this.aggregationTime ? this.aggregationTime.serialize() : null\r\n        }\r\n    }\r\n\r\n    public static parse(policy: TimeSeriesPolicyRaw) {\r\n        return new TimeSeriesPolicy(\r\n            policy.Name,\r\n            TimeValue.parse(policy.AggregationTime),\r\n            TimeValue.parse(policy.RetentionTime)\r\n        );\r\n    }\r\n}\r\n"]}