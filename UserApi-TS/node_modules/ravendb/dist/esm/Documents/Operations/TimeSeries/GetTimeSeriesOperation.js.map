{"version":3,"file":"GetTimeSeriesOperation.js","sourceRoot":"","sources":["../../../../../src/Documents/Operations/TimeSeries/GetTimeSeriesOperation.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,qBAAqB,EAAE,MAAM,4BAA4B,CAAC;AACnE,OAAO,EAAE,QAAQ,EAAE,MAAM,8BAA8B,CAAC;AACxD,OAAO,EAAE,UAAU,EAAE,MAAM,gCAAgC,CAAC;AAC5D,OAAO,EAAE,UAAU,EAAE,MAAM,8BAA8B,CAAC;AAI1D,OAAO,EAAE,QAAQ,EAAE,MAAM,8BAA8B,CAAC;AAExD,OAAO,EAAE,eAAe,EAAE,MAAM,6CAA6C,CAAC;AAC9E,OAAO,EAAE,mBAAmB,EAAE,MAAM,0CAA0C,CAAC;AAC/E,OAAO,EAAE,YAAY,EAAE,MAAM,+BAA+B,CAAC;AAE7D,OAAO,EAAE,aAAa,EAAE,MAAM,mCAAmC,CAAC;AAGlE,OAAO,EAAE,wBAAwB,EAAE,MAAM,mDAAmD,CAAC;AAE7F,MAAM,OAAO,sBAAsB;IACd,MAAM,CAAS;IACf,KAAK,CAAS;IACd,MAAM,CAAS;IACf,SAAS,CAAS;IAClB,KAAK,CAAO;IACZ,GAAG,CAAO;IACV,SAAS,CAAsD;IAC/D,kBAAkB,CAAU;IAQ7C,YAAmB,KAAa,EAAE,UAAkB,EAAE,IAAW,EAAE,EAAS,EAAE,QAAgB,CAAC,EAAE,WAAmB,QAAQ,CAAC,SAAS,EACnH,QAA8D,EAAE,oBAA6B,KAAK;QACjH,IAAI,UAAU,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE,CAAC;YAClC,UAAU,CAAC,0BAA0B,EAAE,+BAA+B,CAAC,CAAC;QAC5E,CAAC;QAED,IAAI,UAAU,CAAC,aAAa,CAAC,UAAU,CAAC,EAAE,CAAC;YACvC,UAAU,CAAC,0BAA0B,EAAE,oCAAoC,CAAC,CAAC;QACjF,CAAC;QAED,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC;QACxB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;QACd,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,kBAAkB,GAAG,iBAAiB,CAAC;IAChD,CAAC;IAED,IAAW,UAAU;QACjB,OAAO,eAAe,CAAC;IAC3B,CAAC;IAED,UAAU,CAAC,KAAqB,EAAE,WAAgC,EAAE,SAAoB;QACpF,OAAO,IAAI,oBAAoB,CAAC,WAAW,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;IACtK,CAAC;CACJ;AAED,MAAM,OAAO,oBAAqB,SAAQ,YAAmC;IACxD,YAAY,CAAsB;IAClC,MAAM,CAAS;IACf,KAAK,CAAS;IACd,MAAM,CAAS;IACf,SAAS,CAAS;IAClB,KAAK,CAAO;IACZ,GAAG,CAAO;IACV,SAAS,CAAsD;IAC/D,kBAAkB,CAAU;IAE7C,YAAmB,WAAgC,EAAE,KAAa,EAAE,IAAY,EAAE,IAAU,EAAE,EAAQ,EAAE,KAAa,EAAE,QAAgB,EACpH,QAA8D,EAAE,oBAA6B,KAAK;QACjH,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;QAChC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;QACd,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,kBAAkB,GAAG,iBAAiB,CAAC;IAChD,CAAC;IAED,aAAa,CAAC,IAAgB;QAC1B,MAAM,WAAW,GAAG,IAAI,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAEhD,WAAW;aACN,MAAM,CAAC,aAAa,CAAC;aACrB,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;aACrB,MAAM,CAAC,aAAa,CAAC;aACrB,MAAM,CAAC,SAAS,CAAC;aACjB,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;QAE1C,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YAClB,WAAW;iBACN,MAAM,CAAC,SAAS,CAAC;iBACjB,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;QACxC,CAAC;QAED,IAAI,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,SAAS,EAAE,CAAC;YACtC,WAAW;iBACN,MAAM,CAAC,YAAY,CAAC;iBACpB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;QAC3C,CAAC;QAED,WAAW;aACN,MAAM,CAAC,QAAQ,CAAC;aAChB,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;QAEzC,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;YACb,WAAW;iBACN,MAAM,CAAC,QAAQ,CAAC;iBAChB,MAAM,CAAC,kBAAkB,CAAC,QAAQ,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACxE,CAAC;QAED,IAAI,IAAI,CAAC,GAAG,EAAE,CAAC;YACX,WAAW;iBACN,MAAM,CAAC,MAAM,CAAC;iBACd,MAAM,CAAC,kBAAkB,CAAC,QAAQ,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACtE,CAAC;QAED,IAAI,IAAI,CAAC,SAAS,EAAE,CAAC;YACjB,oBAAoB,CAAC,oBAAoB,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAC3E,CAAC;QAED,IAAI,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,WAAW;iBACN,MAAM,CAAC,YAAY,CAAC,CAAC;QAC9B,CAAC;QAED,MAAM,GAAG,GAAG,WAAW,CAAC,QAAQ,EAAE,CAAC;QAEnC,OAAO;YACH,MAAM,EAAE,KAAK;YACb,GAAG;SACN,CAAA;IACL,CAAC;IAEM,MAAM,CAAC,oBAAoB,CAAC,WAA0B,EAAE,QAA6D;QACxH,MAAM,cAAc,GAAG,IAAI,wBAAwB,CAAC,mBAAmB,CAAC,kBAAkB,CAAC,CAAC;QAE5F,QAAQ,CAAC,cAAc,CAAC,CAAC;QAEzB,IAAI,cAAc,CAAC,yBAAyB,EAAE,CAAC;YAC3C,WAAW;iBACN,MAAM,CAAC,uBAAuB,CAAC,CAAC;QACzC,CAAC;QAED,IAAI,cAAc,CAAC,qBAAqB,EAAE,CAAC;YACvC,WAAW;iBACN,MAAM,CAAC,mBAAmB,CAAC,CAAC;QACrC,CAAC;IACL,CAAC;IAED,KAAK,CAAC,gBAAgB,CAAC,UAAkB,EAAE,SAAkB;QACzD,IAAI,CAAC,UAAU,EAAE,CAAC;YACd,OAAO;QACX,CAAC;QAED,IAAI,IAAI,GAAW,IAAI,CAAC;QAExB,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,SAAS,EAAO;aACtC,aAAa,EAAE;aACf,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,GAAG,CAAC,CAAC;aAC1B,OAAO,CAAC,UAAU,CAAC,CAAC;QAEzB,MAAM,kBAAkB,GAAG,oBAAoB,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;QAE1E,IAAI,CAAC,MAAM,GAAG,2BAA2B,CAAC,kBAAkB,CAAC,CAAC;QAE9D,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,IAAI,aAAa;QACb,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,MAAM,CAAC,gBAAgB,CAAC,IAAS;QAC7B,MAAM,MAAM,GAA0C;YAClD,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,YAAY,EAAE,IAAI,CAAC,YAAY;YAC/B,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;gBAChC,SAAS,EAAE,KAAK,CAAC,SAAS;gBAC1B,GAAG,EAAE,KAAK,CAAC,GAAG;gBACd,MAAM,EAAE,KAAK,CAAC,MAAM;gBACpB,QAAQ,EAAE,KAAK,CAAC,QAAQ;gBACxB,UAAU,EAAE,KAAK,CAAC,UAAU;aAC/B,CAAC,CAAC;SACN,CAAC;QAEF,OAAO,MAAM,CAAC;IAClB,CAAC;CACJ;AAED,MAAM,UAAU,2BAA2B,CAAC,IAA2C;IACnF,MAAM,MAAM,GAAG,IAAI,qBAAqB,EAAE,CAAC;IAE3C,MAAM,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,SAAS,EAAE,GAAG,IAAI,CAAC;IAEjD,MAAM,WAAW,GAAG,CAAC,QAAyC,EAAE,EAAE;QAC9D,MAAM,MAAM,GAAG,IAAI,eAAe,EAAE,CAAC;QACrC,MAAM,CAAC,SAAS,GAAG,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;QAC1D,MAAM,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;QACpC,MAAM,CAAC,GAAG,GAAG,QAAQ,CAAC,GAAG,CAAC;QAC1B,MAAM,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;QAChC,MAAM,CAAC,UAAU,GAAG,QAAQ,CAAC,UAAU,CAAC;QAExC,OAAO,MAAM,CAAC;IAClB,CAAC,CAAC;IAEF,MAAM,SAAS,GAAmC;QAC9C,GAAG,SAAS;QACZ,EAAE,EAAE,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC;QAC1B,IAAI,EAAE,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC;QAC9B,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC;KACpC,CAAA;IAED,OAAO,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;AAC5C,CAAC","sourcesContent":["import { IOperation, OperationResultType } from \"../OperationAbstractions.js\";\r\nimport { TimeSeriesRangeResult } from \"./TimeSeriesRangeResult.js\";\r\nimport { TypeUtil } from \"../../../Utility/TypeUtil.js\";\r\nimport { StringUtil } from \"../../../Utility/StringUtil.js\";\r\nimport { throwError } from \"../../../Exceptions/index.js\";\r\nimport { IDocumentStore } from \"../../IDocumentStore.js\";\r\nimport { HttpCache } from \"../../../Http/HttpCache.js\";\r\nimport { HttpRequestParameters } from \"../../../Primitives/Http.js\";\r\nimport { DateUtil } from \"../../../Utility/DateUtil.js\";\r\nimport { Stream } from \"node:stream\";\r\nimport { TimeSeriesEntry } from \"../../Session/TimeSeries/TimeSeriesEntry.js\";\r\nimport { DocumentConventions } from \"../../Conventions/DocumentConventions.js\";\r\nimport { RavenCommand } from \"../../../Http/RavenCommand.js\";\r\nimport { ServerNode } from \"../../../Http/ServerNode.js\";\r\nimport { StringBuilder } from \"../../../Utility/StringBuilder.js\";\r\nimport { ServerResponse } from \"../../../Types/index.js\";\r\nimport { ITimeSeriesIncludeBuilder } from \"../../Session/Loaders/ITimeSeriesIncludeBuilder.js\";\r\nimport { TimeSeriesIncludeBuilder } from \"../../Session/Loaders/TimeSeriesIncludeBuilder.js\";\r\n\r\nexport class GetTimeSeriesOperation implements IOperation<TimeSeriesRangeResult> {\r\n    private readonly _docId: string;\r\n    private readonly _name: string;\r\n    private readonly _start: number;\r\n    private readonly _pageSize: number;\r\n    private readonly _from: Date;\r\n    private readonly _to: Date;\r\n    private readonly _includes: (includeBuilder: ITimeSeriesIncludeBuilder) => void;\r\n    private readonly _returnFullResults: boolean;\r\n\r\n    public constructor(docId: string, timeseries: string);\r\n    public constructor(docId: string, timeseries: string, from: Date, to: Date);\r\n    public constructor(docId: string, timeseries: string, from: Date, to: Date, start: number);\r\n    public constructor(docId: string, timeseries: string, from: Date, to: Date, start: number, pageSize: number);\r\n    public constructor(docId: string, timeseries: string, from: Date, to: Date, start: number, pageSize: number, includes: (includeBuilder: ITimeSeriesIncludeBuilder) => void);\r\n    public constructor(docId: string, timeseries: string, from: Date, to: Date, start: number, pageSize: number, includes: (includeBuilder: ITimeSeriesIncludeBuilder) => void, returnFullResults: boolean);\r\n    public constructor(docId: string, timeseries: string, from?: Date, to?: Date, start: number = 0, pageSize: number = TypeUtil.MAX_INT32,\r\n                       includes?: (includeBuilder: ITimeSeriesIncludeBuilder) => void, returnFullResults: boolean = false) {\r\n        if (StringUtil.isNullOrEmpty(docId)) {\r\n            throwError(\"InvalidArgumentException\", \"DocId cannot be null or empty\");\r\n        }\r\n\r\n        if (StringUtil.isNullOrEmpty(timeseries)) {\r\n            throwError(\"InvalidArgumentException\", \"Timeseries cannot be null or empty\");\r\n        }\r\n\r\n        this._docId = docId;\r\n        this._start = start;\r\n        this._pageSize = pageSize;\r\n        this._name = timeseries;\r\n        this._from = from;\r\n        this._to = to;\r\n        this._includes = includes;\r\n        this._returnFullResults = returnFullResults;\r\n    }\r\n\r\n    public get resultType(): OperationResultType {\r\n        return \"CommandResult\";\r\n    }\r\n\r\n    getCommand(store: IDocumentStore, conventions: DocumentConventions, httpCache: HttpCache): RavenCommand<TimeSeriesRangeResult> {\r\n        return new GetTimeSeriesCommand(conventions, this._docId, this._name, this._from, this._to, this._start, this._pageSize, this._includes, this._returnFullResults);\r\n    }\r\n}\r\n\r\nexport class GetTimeSeriesCommand extends RavenCommand<TimeSeriesRangeResult> {\r\n    private readonly _conventions: DocumentConventions;\r\n    private readonly _docId: string;\r\n    private readonly _name: string;\r\n    private readonly _start: number;\r\n    private readonly _pageSize: number;\r\n    private readonly _from: Date;\r\n    private readonly _to: Date;\r\n    private readonly _includes: (includeBuilder: ITimeSeriesIncludeBuilder) => void;\r\n    private readonly _returnFullResults: boolean;\r\n\r\n    public constructor(conventions: DocumentConventions, docId: string, name: string, from: Date, to: Date, start: number, pageSize: number,\r\n                       includes?: (includeBuilder: ITimeSeriesIncludeBuilder) => void, returnFullResults: boolean = false) {\r\n        super();\r\n\r\n        this._conventions = conventions;\r\n        this._docId = docId;\r\n        this._name = name;\r\n        this._start = start;\r\n        this._pageSize = pageSize;\r\n        this._from = from;\r\n        this._to = to;\r\n        this._includes = includes;\r\n        this._returnFullResults = returnFullResults;\r\n    }\r\n\r\n    createRequest(node: ServerNode): HttpRequestParameters {\r\n        const pathBuilder = new StringBuilder(node.url);\r\n\r\n        pathBuilder\r\n            .append(\"/databases/\")\r\n            .append(node.database)\r\n            .append(\"/timeseries\")\r\n            .append(\"?docId=\")\r\n            .append(this._urlEncode(this._docId));\r\n\r\n        if (this._start > 0) {\r\n            pathBuilder\r\n                .append(\"&start=\")\r\n                .append(this._start.toString());\r\n        }\r\n\r\n        if (this._pageSize < TypeUtil.MAX_INT32) {\r\n            pathBuilder\r\n                .append(\"&pageSize=\")\r\n                .append(this._pageSize.toString());\r\n        }\r\n\r\n        pathBuilder\r\n            .append(\"&name=\")\r\n            .append(this._urlEncode(this._name));\r\n\r\n        if (this._from) {\r\n            pathBuilder\r\n                .append(\"&from=\")\r\n                .append(encodeURIComponent(DateUtil.utc.stringify(this._from)));\r\n        }\r\n\r\n        if (this._to) {\r\n            pathBuilder\r\n                .append(\"&to=\")\r\n                .append(encodeURIComponent(DateUtil.utc.stringify(this._to)));\r\n        }\r\n\r\n        if (this._includes) {\r\n            GetTimeSeriesCommand.addIncludesToRequest(pathBuilder, this._includes);\r\n        }\r\n\r\n        if (this._returnFullResults) {\r\n            pathBuilder\r\n                .append(\"&full=true\");\r\n        }\r\n\r\n        const uri = pathBuilder.toString();\r\n\r\n        return {\r\n            method: \"GET\",\r\n            uri\r\n        }\r\n    }\r\n\r\n    public static addIncludesToRequest(pathBuilder: StringBuilder, includes: (includeBuilder: ITimeSeriesIncludeBuilder) => void): void {\r\n        const includeBuilder = new TimeSeriesIncludeBuilder(DocumentConventions.defaultConventions);\r\n\r\n        includes(includeBuilder);\r\n\r\n        if (includeBuilder.includeTimeSeriesDocument) {\r\n            pathBuilder\r\n                .append(\"&includeDocument=true\");\r\n        }\r\n\r\n        if (includeBuilder.includeTimeSeriesTags) {\r\n            pathBuilder\r\n                .append(\"&includeTags=true\");\r\n        }\r\n    }\r\n\r\n    async setResponseAsync(bodyStream: Stream, fromCache: boolean): Promise<string> {\r\n        if (!bodyStream) {\r\n            return;\r\n        }\r\n\r\n        let body: string = null;\r\n\r\n        const results = await this._pipeline<any>()\r\n            .parseJsonSync()\r\n            .collectBody(b => body = b)\r\n            .process(bodyStream);\r\n\r\n        const transformedResults = GetTimeSeriesCommand.mapToLocalObject(results);\r\n\r\n        this.result = reviveTimeSeriesRangeResult(transformedResults);\r\n\r\n        return body;\r\n    }\r\n\r\n    get isReadRequest(): boolean {\r\n        return true;\r\n    }\r\n\r\n    static mapToLocalObject(json: any): ServerResponse<TimeSeriesRangeResult> {\r\n        const result: ServerResponse<TimeSeriesRangeResult> = {\r\n            to: json.To,\r\n            from: json.From,\r\n            includes: json.Includes,\r\n            totalResults: json.TotalResults,\r\n            entries: json.Entries.map(entry => ({\r\n                timestamp: entry.Timestamp,\r\n                tag: entry.Tag,\r\n                values: entry.Values,\r\n                isRollup: entry.IsRollup,\r\n                nodeValues: entry.NodeValues\r\n            }))\r\n        };\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nexport function reviveTimeSeriesRangeResult(json: ServerResponse<TimeSeriesRangeResult>): TimeSeriesRangeResult {\r\n    const result = new TimeSeriesRangeResult();\r\n\r\n    const { to, from, entries, ...restProps } = json;\r\n\r\n    const entryMapper = (rawEntry: ServerResponse<TimeSeriesEntry>) => {\r\n        const result = new TimeSeriesEntry();\r\n        result.timestamp = DateUtil.utc.parse(rawEntry.timestamp);\r\n        result.isRollup = rawEntry.isRollup;\r\n        result.tag = rawEntry.tag;\r\n        result.values = rawEntry.values;\r\n        result.nodeValues = rawEntry.nodeValues;\r\n\r\n        return result;\r\n    };\r\n\r\n    const overrides: Partial<TimeSeriesRangeResult> = {\r\n        ...restProps,\r\n        to: DateUtil.utc.parse(to),\r\n        from: DateUtil.utc.parse(from),\r\n        entries: entries.map(entryMapper),\r\n    }\r\n\r\n    return Object.assign(result, overrides);\r\n}\r\n"]}