{"version":3,"file":"PatchOperation.js","sourceRoot":"","sources":["../../../../src/Documents/Operations/PatchOperation.ts"],"names":[],"mappings":"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","sourcesContent":["import { HttpRequestParameters } from \"../../Primitives/Http.js\";\r\nimport { PatchRequest } from \"./PatchRequest.js\";\r\nimport { IOperation, OperationResultType } from \"./OperationAbstractions.js\";\r\nimport { PatchStatus } from \"./PatchStatus.js\";\r\nimport { RavenCommand } from \"../../Http/RavenCommand.js\";\r\nimport { throwError } from \"../../Exceptions/index.js\";\r\nimport { IDocumentStore } from \"../IDocumentStore.js\";\r\nimport { DocumentConventions } from \"../Conventions/DocumentConventions.js\";\r\nimport { HttpCache } from \"../../Http/HttpCache.js\";\r\nimport { ServerNode } from \"../../Http/ServerNode.js\";\r\nimport { PatchResult } from \"./PatchResult.js\";\r\nimport { Stream } from \"node:stream\";\r\nimport { ObjectUtil } from \"../../Utility/ObjectUtil.js\";\r\nimport { ServerCasing, ServerResponse } from \"../../Types/index.js\";\r\nimport { DateUtil } from \"../../Utility/DateUtil.js\";\r\n\r\nexport interface Payload {\r\n    patch: PatchRequest;\r\n    patchIfMissing: PatchRequest;\r\n}\r\n\r\nexport class PatchOperationResult<TEntity> {\r\n    public status: PatchStatus;\r\n    public document: TEntity;\r\n}\r\n\r\nexport class PatchOperation implements IOperation<PatchResult> {\r\n\r\n    private readonly _id: string;\r\n    private readonly _changeVector: string;\r\n    private readonly _patch: PatchRequest;\r\n    private readonly _patchIfMissing: PatchRequest;\r\n    private readonly _skipPatchIfChangeVectorMismatch: boolean;\r\n\r\n    public get resultType(): OperationResultType {\r\n        return \"PatchResult\";\r\n    }\r\n\r\n    public constructor(\r\n        id: string, changeVector: string, patch: PatchRequest);\r\n    public constructor(\r\n        id: string,\r\n        changeVector: string,\r\n        patch: PatchRequest,\r\n        patchIfMissing: PatchRequest,\r\n        skipPatchIfChangeVectorMismatch: boolean);\r\n    public constructor(\r\n        id: string,\r\n        changeVector: string,\r\n        patch: PatchRequest,\r\n        patchIfMissing: PatchRequest = null,\r\n        skipPatchIfChangeVectorMismatch: boolean = false) {\r\n\r\n        if (!patch) {\r\n            throwError(\"InvalidArgumentException\", \"Patch cannot be null\");\r\n        }\r\n\r\n        if (!patch.script || !patch.script.trim()) {\r\n            throwError(\"InvalidArgumentException\", \"Patch script cannot be null\");\r\n        }\r\n\r\n        if (patchIfMissing && !patchIfMissing.script.trim()) {\r\n            throwError(\"InvalidArgumentException\", \"PatchIfMissing script cannot be null\");\r\n        }\r\n\r\n        this._id = id;\r\n        this._changeVector = changeVector;\r\n        this._patch = patch;\r\n        this._patchIfMissing = patchIfMissing;\r\n        this._skipPatchIfChangeVectorMismatch = skipPatchIfChangeVectorMismatch;\r\n\r\n    }\r\n\r\n    public getCommand(\r\n        store: IDocumentStore, conventions: DocumentConventions, cache: HttpCache,\r\n        returnDebugInformation: boolean = false, test: boolean = false): RavenCommand<PatchResult> {\r\n        return new PatchCommand(\r\n            conventions,\r\n            this._id,\r\n            this._changeVector,\r\n            this._patch,\r\n            this._patchIfMissing,\r\n            this._skipPatchIfChangeVectorMismatch,\r\n            returnDebugInformation,\r\n            test);\r\n    }\r\n}\r\n\r\nexport class PatchCommand extends RavenCommand<PatchResult> {\r\n    private readonly _id: string;\r\n    private readonly _changeVector: string;\r\n    private readonly _patch: object;\r\n    private readonly _skipPatchIfChangeVectorMismatch: boolean;\r\n    private readonly _returnDebugInformation: boolean;\r\n    private readonly _test: boolean;\r\n    private _conventions: DocumentConventions;\r\n\r\n    public constructor(\r\n        conventions: DocumentConventions, id: string, changeVector: string,\r\n        patch: PatchRequest, patchIfMissing: PatchRequest, skipPatchIfChangeVectorMismatch: boolean,\r\n        returnDebugInformation: boolean, test: boolean) {\r\n        super();\r\n\r\n        if (!conventions) {\r\n            throwError(\"InvalidArgumentException\", \"Conventions cannot be null\");\r\n        }\r\n\r\n        if (!patch) {\r\n            throwError(\"InvalidArgumentException\", \"Patch cannot be null\");\r\n        }\r\n\r\n        if (!patch.script.trim()) {\r\n            throwError(\"InvalidArgumentException\", \"Patch.Script cannot be null\");\r\n        }\r\n\r\n        if (patchIfMissing && !patchIfMissing.script.trim()) {\r\n            throwError(\"InvalidArgumentException\", \"PatchIfMissing.Script cannot be null\");\r\n        }\r\n\r\n        if (!id) {\r\n            throwError(\"InvalidArgumentException\", \"Id cannot be null\");\r\n        }\r\n\r\n        this._id = id;\r\n        this._changeVector = changeVector;\r\n        this._patch = ObjectUtil.transformObjectKeys(\r\n            conventions.objectMapper.toObjectLiteral({ patch, patchIfMissing }),\r\n            {\r\n                defaultTransform: ObjectUtil.pascal,\r\n                paths: [\r\n                    {\r\n                        transform: conventions.localToServerFieldNameConverter,\r\n                        path: /Values/i\r\n                    }\r\n                ]\r\n            });\r\n        this._skipPatchIfChangeVectorMismatch = skipPatchIfChangeVectorMismatch;\r\n        this._returnDebugInformation = returnDebugInformation;\r\n        this._test = test;\r\n        this._conventions = conventions;\r\n    }\r\n\r\n    public get isReadRequest(): boolean {\r\n        return false;\r\n    }\r\n\r\n    public createRequest(node: ServerNode): HttpRequestParameters {\r\n        let uri = node.url + \"/databases/\" + node.database + \"/docs?id=\" + encodeURIComponent(this._id);\r\n\r\n        if (this._skipPatchIfChangeVectorMismatch) {\r\n            uri += \"&skipPatchIfChangeVectorMismatch=true\";\r\n        }\r\n\r\n        if (this._returnDebugInformation) {\r\n            uri += \"&debug=true\";\r\n        }\r\n\r\n        if (this._test) {\r\n            uri += \"&test=true\";\r\n        }\r\n\r\n        const body = JSON.stringify(this._patch);\r\n        const req = {\r\n            method: \"PATCH\",\r\n            uri,\r\n            headers: this._headers().typeAppJson().build(),\r\n            body\r\n        };\r\n\r\n        this._addChangeVectorIfNotNull(this._changeVector, req);\r\n        return req;\r\n    }\r\n\r\n    public async setResponseAsync(bodyStream: Stream, fromCache: boolean): Promise<string> {\r\n        if (!bodyStream) {\r\n            return;\r\n        }\r\n\r\n        let body;\r\n        const results= await this._pipeline<ServerCasing<ServerResponse<PatchResult>>>()\r\n            .collectBody(_ => body = _)\r\n            .parseJsonSync()\r\n            .process(bodyStream);\r\n\r\n        this.result = PatchCommand._mapToLocalObject(results, this._conventions);\r\n\r\n        return body;\r\n    }\r\n\r\n    private static _mapToLocalObject(json: ServerCasing<ServerResponse<PatchResult>>, conventions: DocumentConventions): PatchResult {\r\n        return {\r\n            changeVector: json.ChangeVector,\r\n            collection: json.Collection,\r\n            debug: json.Debug,\r\n            lastModified: DateUtil.utc.parse(json.LastModified),\r\n            status: json.Status,\r\n            modifiedDocument: ObjectUtil.transformDocumentKeys(json.ModifiedDocument, conventions),\r\n            originalDocument: ObjectUtil.transformDocumentKeys(json.OriginalDocument, conventions)\r\n        }\r\n    }\r\n}\r\n"]}