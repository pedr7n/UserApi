import { StringUtil } from "../../../Utility/StringUtil.js";
import { throwError } from "../../../Exceptions/index.js";
import { SeedIdentityForCommand } from "../../Commands/SeedIdentityForCommand.js";
export class SeedIdentityForOperation {
    _identityName;
    _identityValue;
    _forceUpdate;
    constructor(name, value, forceUpdate = false) {
        if (StringUtil.isNullOrWhitespace(name)) {
            throwError("InvalidArgumentException", "The field name cannot be null or whitespace.");
        }
        this._identityName = name;
        this._identityValue = value;
        this._forceUpdate = forceUpdate;
    }
    getCommand(conventions) {
        return new SeedIdentityForCommand(this._identityName, this._identityValue, this._forceUpdate);
    }
    get resultType() {
        return "CommandResult";
    }
}
//# sourceMappingURL=SeedIdentityForOperation.js.map