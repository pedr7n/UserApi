import { CaseInsensitiveKeysMap } from "../../Primitives/CaseInsensitiveKeysMap.js";
export class DocumentsById {
    _inner;
    constructor() {
        this._inner = CaseInsensitiveKeysMap.create();
    }
    getValue(id) {
        return this._inner.get(id);
    }
    add(info) {
        if (this._inner.has(info.id)) {
            return;
        }
        this._inner.set(info.id, info);
    }
    remove(id) {
        return this._inner.delete(id);
    }
    clear() {
        this._inner.clear();
    }
    getCount() {
        return this._inner.size;
    }
    entries() {
        return this._inner.entries();
    }
    getTrackedEntities(session) {
        const result = CaseInsensitiveKeysMap.create();
        for (const keyValue of this._inner.entries()) {
            const entityInfo = new EntityInfo();
            entityInfo.id = keyValue[0];
            entityInfo.entity = keyValue[1].entity;
            entityInfo.isDeleted = session.isDeleted(keyValue[0]);
            result[keyValue[0]] = entityInfo;
        }
        return result;
    }
}
export class EntityInfo {
    id;
    entity;
    isDeleted;
}
//# sourceMappingURL=DocumentsById.js.map