import { DocumentSessionAttachmentsBase } from "./DocumentSessionAttachmentsBase.js";
import { HeadAttachmentCommand } from "../Commands/HeadAttachmentCommand.js";
import { GetAttachmentOperation } from "../Operations/Attachments/GetAttachmentOperation.js";
export class DocumentSessionAttachments extends DocumentSessionAttachmentsBase {
    constructor(session) {
        super(session);
    }
    async exists(documentId, name) {
        const command = new HeadAttachmentCommand(documentId, name, null);
        this._session.incrementRequestCount();
        await this._requestExecutor.execute(command, this._sessionInfo);
        return !!command.result;
    }
    async get(idOrEntity, name) {
        let docId;
        if (typeof idOrEntity !== "string") {
            const document = this._session.documentsByEntity.get(idOrEntity);
            if (!document) {
                this._throwEntityNotInSessionOrMissingId(idOrEntity);
            }
            docId = document.id;
        }
        else {
            docId = idOrEntity;
        }
        const operation = new GetAttachmentOperation(docId, name, "Document", null);
        this._session.incrementRequestCount();
        return await this._session.operations.send(operation, this._sessionInfo);
    }
    async getRevision(documentId, name, changeVector) {
        const operation = new GetAttachmentOperation(documentId, name, "Revision", changeVector);
        this._session.incrementRequestCount();
        return this._session.operations.send(operation, this._sessionInfo);
    }
}
//# sourceMappingURL=DocumentSessionAttachments.js.map