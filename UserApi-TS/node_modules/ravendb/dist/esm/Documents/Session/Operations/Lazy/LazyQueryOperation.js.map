{"version":3,"file":"LazyQueryOperation.js","sourceRoot":"","sources":["../../../../../../src/Documents/Session/Operations/Lazy/LazyQueryOperation.ts"],"names":[],"mappings":"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","sourcesContent":["import { ILazyOperation } from \"./ILazyOperation.js\";\r\nimport { ObjectTypeDescriptor } from \"../../../../Types/index.js\";\r\nimport { QueryResult } from \"../../../Queries/QueryResult.js\";\r\nimport { QueryOperation } from \"../QueryOperation.js\";\r\nimport { GetRequest } from \"../../../Commands/MultiGet/GetRequest.js\";\r\nimport { writeIndexQuery } from \"../../../Queries/IndexQuery.js\";\r\nimport { GetResponse } from \"../../../Commands/MultiGet/GetResponse.js\";\r\nimport { QueryCommand } from \"../../../Commands/QueryCommand.js\";\r\nimport { stringToReadable } from \"../../../../Utility/StreamUtil.js\";\r\nimport { QueryEventsEmitter } from \"../../QueryEvents.js\";\r\nimport { InMemoryDocumentSessionOperations } from \"../../InMemoryDocumentSessionOperations.js\";\r\n\r\nexport class LazyQueryOperation<T extends object> implements ILazyOperation {\r\n    private readonly _clazz: ObjectTypeDescriptor<T>;\r\n    private readonly _session: InMemoryDocumentSessionOperations;\r\n    private readonly _queryOperation: QueryOperation;\r\n    private readonly _parent: QueryEventsEmitter;\r\n\r\n    public constructor(\r\n        session: InMemoryDocumentSessionOperations,\r\n        queryOperation: QueryOperation,\r\n        parent: QueryEventsEmitter,\r\n        clazz: ObjectTypeDescriptor<T>) {\r\n\r\n        this._clazz = clazz;\r\n        this._session = session;\r\n        this._queryOperation = queryOperation;\r\n        this._parent = parent;\r\n    }\r\n\r\n    public createRequest(): GetRequest {\r\n        const request = new GetRequest();\r\n        request.canCacheAggressively = !this._queryOperation.indexQuery.disableCaching && !this._queryOperation.indexQuery.waitForNonStaleResults;\r\n        request.url = \"/queries\";\r\n        request.method = \"POST\";\r\n        request.query = \"?queryHash=\" + this._queryOperation.indexQuery.getQueryHash(this._session.conventions.objectMapper);\r\n        request.body = writeIndexQuery(this._session.conventions, this._queryOperation.indexQuery);\r\n        return request;\r\n    }\r\n\r\n    private _result: object;\r\n    private _queryResult: QueryResult;\r\n    private _requiresRetry: boolean;\r\n\r\n    public get result(): any {\r\n        return this._result;\r\n    }\r\n\r\n    public set result(result) {\r\n        this._result = result;\r\n    }\r\n\r\n    public get queryResult(): QueryResult {\r\n        return this._queryResult;\r\n    }\r\n\r\n    public set queryResult(queryResult) {\r\n        this._queryResult = queryResult;\r\n    }\r\n\r\n    public get requiresRetry() {\r\n        return this._requiresRetry;\r\n    }\r\n\r\n    public set requiresRetry(result) {\r\n        this._requiresRetry = result;\r\n    }\r\n\r\n    public async handleResponseAsync(response: GetResponse): Promise<void> {\r\n        if (response.forceRetry) {\r\n            this._result = null;\r\n            this._requiresRetry = true;\r\n            return;\r\n        }\r\n\r\n        let queryResult: QueryResult;\r\n        if (response.result) {\r\n            queryResult = await QueryCommand.parseQueryResultResponseAsync(\r\n                stringToReadable(response.result), this._session.conventions, false);\r\n        }\r\n        this._handleResponse(queryResult, response.elapsed);\r\n    }\r\n\r\n    private _handleResponse(queryResult: QueryResult, duration: number): void {\r\n        this._queryOperation.ensureIsAcceptableAndSaveResult(queryResult, duration);\r\n        this._parent.emit(\"afterQueryExecuted\", queryResult);\r\n        this.result = this._queryOperation.complete(this._clazz);\r\n        this.queryResult = queryResult;\r\n    }\r\n}\r\n"]}