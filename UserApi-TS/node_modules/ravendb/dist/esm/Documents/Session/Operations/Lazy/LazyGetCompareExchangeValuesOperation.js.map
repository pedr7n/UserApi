{"version":3,"file":"LazyGetCompareExchangeValuesOperation.js","sourceRoot":"","sources":["../../../../../../src/Documents/Session/Operations/Lazy/LazyGetCompareExchangeValuesOperation.ts"],"names":[],"mappings":"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","sourcesContent":["import { ILazyOperation } from \"./ILazyOperation.js\";\r\nimport { ClusterTransactionOperationsBase } from \"../../ClusterTransactionOperationsBase.js\";\r\nimport { CompareExchangeResultClass, ServerCasing, ServerResponse } from \"../../../../Types/index.js\";\r\nimport { throwError } from \"../../../../Exceptions/index.js\";\r\nimport { TypeUtil } from \"../../../../Utility/TypeUtil.js\";\r\nimport { GetRequest } from \"../../../Commands/MultiGet/GetRequest.js\";\r\nimport { GetResponse } from \"../../../Commands/MultiGet/GetResponse.js\";\r\nimport { StringUtil } from \"../../../../Utility/StringUtil.js\";\r\nimport {\r\n    CompareExchangeValueResultParser,\r\n    GetCompareExchangeValuesResponse\r\n} from \"../../../Operations/CompareExchange/CompareExchangeValueResultParser.js\";\r\nimport { DocumentConventions } from \"../../../Conventions/DocumentConventions.js\";\r\nimport { QueryResult } from \"../../../Queries/QueryResult.js\";\r\nimport { CompareExchangeValue } from \"../../../Operations/CompareExchange/CompareExchangeValue.js\";\r\nimport { StringBuilder } from \"../../../../Utility/StringBuilder.js\";\r\nimport { GetCompareExchangeValuesCommand } from \"../../../Operations/CompareExchange/GetCompareExchangeValuesOperation.js\";\r\n\r\nexport class LazyGetCompareExchangeValuesOperation<T> implements ILazyOperation {\r\n    private readonly _clusterSession: ClusterTransactionOperationsBase;\r\n    private readonly _clazz: CompareExchangeResultClass<T>;\r\n    private readonly _conventions: DocumentConventions;\r\n    private readonly _startsWith: string;\r\n    private readonly _start: number\r\n    private readonly _pageSize: number;\r\n    private readonly _keys: string[];\r\n    private _result: object;\r\n    private _requiresRetry: boolean;\r\n\r\n\r\n    public constructor(clusterSession: ClusterTransactionOperationsBase,\r\n                       clazz: CompareExchangeResultClass<T>,\r\n                       conventions: DocumentConventions,\r\n                       keys: string[]);\r\n    public constructor(clusterSession: ClusterTransactionOperationsBase,\r\n                       clazz: CompareExchangeResultClass<T>,\r\n                       conventions: DocumentConventions,\r\n                       startsWith: string,\r\n                       start: number,\r\n                       pageSize: number);\r\n    public constructor(clusterSession: ClusterTransactionOperationsBase,\r\n                       clazz: CompareExchangeResultClass<T>,\r\n                       conventions: DocumentConventions,\r\n                       keysOrStartsWith: string | string[],\r\n                       start?: number,\r\n                       pageSize?: number) {\r\n        if (!clusterSession) {\r\n            throwError(\"InvalidArgumentException\", \"ClusterSession cannot be null\");\r\n        }\r\n        if (!conventions) {\r\n            throwError(\"InvalidArgumentException\", \"Conventions cannot be null\");\r\n        }\r\n\r\n        this._clusterSession = clusterSession;\r\n        this._clazz = clazz;\r\n        this._conventions = conventions;\r\n\r\n        if (TypeUtil.isArray<string>(keysOrStartsWith)) {\r\n            this._keys = keysOrStartsWith;\r\n\r\n            this._start = 0;\r\n            this._pageSize = 0;\r\n            this._startsWith = null;\r\n        } else {\r\n            this._startsWith = keysOrStartsWith;\r\n            this._start = start;\r\n            this._pageSize = pageSize;\r\n\r\n            this._keys = null;\r\n        }\r\n    }\r\n\r\n    get result() {\r\n        return this._result;\r\n    }\r\n\r\n    get queryResult(): QueryResult {\r\n        throwError(\"NotImplementedException\");\r\n        return null;\r\n    }\r\n\r\n    get requiresRetry() {\r\n        return this._requiresRetry;\r\n    }\r\n\r\n    createRequest(): GetRequest {\r\n        let pathBuilder: StringBuilder;\r\n\r\n        if (this._keys) {\r\n            for (const key of this._keys) {\r\n                if (this._clusterSession.isTracked(key)) {\r\n                    continue;\r\n                }\r\n\r\n                if (!pathBuilder) {\r\n                    pathBuilder = new StringBuilder(\"?\");\r\n                }\r\n\r\n                pathBuilder.append(\"&key=\").append(encodeURIComponent(key));\r\n            }\r\n        } else {\r\n            pathBuilder = new StringBuilder(\"?\");\r\n\r\n            if (StringUtil.isNullOrEmpty(this._startsWith)) {\r\n                pathBuilder.append(\"&startsWith=\").append(encodeURIComponent(this._startsWith));\r\n            }\r\n\r\n            pathBuilder.append(\"&start=\").append((this._start || 0).toString());\r\n            pathBuilder.append(\"&pageSize=\").append((this._pageSize || 0).toString());\r\n        }\r\n\r\n        if (!pathBuilder) {\r\n            this._result = this._clusterSession.getCompareExchangeValuesFromSessionInternal(this._keys, TypeUtil.NOOP, this._clazz);\r\n            return null;\r\n        }\r\n\r\n        const request = new GetRequest();\r\n        request.url = \"/cmpxchg\";\r\n        request.method = \"GET\";\r\n        request.query = pathBuilder.toString();\r\n\r\n        return request;\r\n    }\r\n\r\n    async handleResponseAsync(response: GetResponse): Promise<void> {\r\n        if (response.forceRetry) {\r\n            this._result = null;\r\n            this._requiresRetry = true;\r\n            return;\r\n        }\r\n\r\n        if (response.result) {\r\n            const results = JSON.parse(response.result) as ServerCasing<ServerResponse<GetCompareExchangeValuesResponse>>;\r\n\r\n            const localObject = GetCompareExchangeValuesCommand.mapToLocalObject(results);\r\n\r\n            if (this._clusterSession.session.noTracking) {\r\n                const result: { [key: string]: CompareExchangeValue<T> } = {};\r\n                for (const kvp of Object.entries(CompareExchangeValueResultParser.getValues(localObject, false, this._conventions))) {\r\n                    if (!kvp[1].value) {\r\n                        result[kvp[0]] = this._clusterSession.registerMissingCompareExchangeValue(kvp[0]).getValue(this._clazz, this._conventions);\r\n                        continue;\r\n                    }\r\n\r\n                    result[kvp[0]] = this._clusterSession.registerCompareExchangeValue(kvp[1]).getValue(this._clazz, this._conventions);\r\n                }\r\n\r\n                this._result = result;\r\n                return;\r\n            }\r\n\r\n            for (const kvp of Object.entries(CompareExchangeValueResultParser.getValues(localObject, false, this._conventions))) {\r\n                if (!kvp[1]) {\r\n                    continue;\r\n                }\r\n\r\n                this._clusterSession.registerCompareExchangeValue(kvp[1]);\r\n            }\r\n        }\r\n\r\n        if (this._keys) {\r\n            for (const key of this._keys) {\r\n                if (this._clusterSession.isTracked(key)) {\r\n                    continue;\r\n                }\r\n\r\n                this._clusterSession.registerMissingCompareExchangeValue(key);\r\n            }\r\n        }\r\n\r\n        this._result = this._clusterSession.getCompareExchangeValuesFromSessionInternal(this._keys, TypeUtil.NOOP, this._clazz);\r\n    }\r\n}\r\n\r\n"]}