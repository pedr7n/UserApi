{"version":3,"file":"LazyRevisionOperation.js","sourceRoot":"","sources":["../../../../../../src/Documents/Session/Operations/Lazy/LazyRevisionOperation.ts"],"names":[],"mappings":"AAIA,OAAO,EAAE,UAAU,EAAE,MAAM,0CAA0C,CAAC;AAGtE,OAAO,EAAE,UAAU,EAAE,MAAM,iCAAiC,CAAC;AAI7D,MAAM,OAAO,qBAAqB;IACb,MAAM,CAAkB;IACxB,qBAAqB,CAAuB;IACrD,KAAK,CAAO;IAEZ,OAAO,CAAS;IAChB,YAAY,CAAc;IAC1B,cAAc,CAAU;IAGhC,YAAmB,KAAsB,EAAE,oBAA0C,EAAE,IAAU;QAC7F,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,qBAAqB,GAAG,oBAAoB,CAAC;QAClD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;IACtB,CAAC;IAED,IAAW,MAAM;QACb,OAAO,IAAI,CAAC,OAAO,CAAC;IACxB,CAAC;IAED,IAAW,MAAM,CAAC,MAAM;QACpB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;IAC1B,CAAC;IAED,IAAW,WAAW;QAClB,OAAO,IAAI,CAAC,YAAY,CAAC;IAC7B,CAAC;IAED,IAAW,WAAW,CAAC,WAAW;QAC9B,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;IACpC,CAAC;IAED,IAAW,aAAa;QACpB,OAAO,IAAI,CAAC,cAAc,CAAC;IAC/B,CAAC;IAED,IAAW,aAAa,CAAC,MAAM;QAC3B,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC;IACjC,CAAC;IAGD,aAAa;QACT,MAAM,mBAAmB,GAAG,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC;QAC/D,MAAM,UAAU,GAAG,IAAI,UAAU,EAAE,CAAC;QACpC,UAAU,CAAC,MAAM,GAAG,KAAK,CAAC;QAC1B,UAAU,CAAC,GAAG,GAAG,YAAY,CAAC;QAC9B,UAAU,CAAC,KAAK,GAAG,GAAG,GAAG,mBAAmB,CAAC,qBAAqB,EAAE,CAAC;QAErE,OAAO,UAAU,CAAC;IACtB,CAAC;IAED,KAAK,CAAC,mBAAmB,CAAC,QAAqB;QAC3C,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;YACnB,OAAO;QACX,CAAC;QAED,MAAM,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAEnD,MAAM,eAAe,GAAsB;YACvC,OAAO,EAAE,cAAc,CAAC,OAAO;SAClC,CAAC;QAEF,IAAI,CAAC,qBAAqB,CAAC,MAAM,GAAG,eAAe,CAAC;QAEpD,QAAQ,IAAI,CAAC,KAAK,EAAE,CAAC;YACjB,KAAK,QAAQ,CAAC,CAAC,CAAC;gBACZ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,qBAAqB,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACnE,MAAM;YACV,CAAC;YACD,KAAK,OAAO,CAAC,CAAC,CAAC;gBACX,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,qBAAqB,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACvE,MAAM;YACV,CAAC;YACD,KAAK,KAAK,CAAC,CAAC,CAAC;gBACT,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,qBAAqB,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACpE,MAAM;YACV,CAAC;YACD,KAAK,gBAAgB,CAAC,CAAC,CAAC;gBACpB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,qBAAqB,CAAC,uBAAuB,EAAE,CAAC;gBACpE,MAAM;YACV,CAAC;YACD,OAAO,CAAC,CAAC,CAAC;gBACN,UAAU,CAAC,0BAA0B,EAAE,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;YAC1E,CAAC;QACL,CAAC;IACL,CAAC;CACJ","sourcesContent":["import { ILazyOperation } from \"./ILazyOperation.js\";\r\nimport { IRavenArrayResult } from \"../../../../Types/index.js\";\r\nimport { GetRevisionOperation } from \"../GetRevisionOperation.js\";\r\nimport { QueryResult } from \"../../../Queries/QueryResult.js\";\r\nimport { GetRequest } from \"../../../Commands/MultiGet/GetRequest.js\";\r\nimport { GetResponse } from \"../../../Commands/MultiGet/GetResponse.js\";\r\nimport { DocumentType } from \"../../../DocumentAbstractions.js\";\r\nimport { throwError } from \"../../../../Exceptions/index.js\";\r\n\r\nexport type Mode = \"Single\" | \"Multi\" | \"Map\" | \"ListOfMetadata\";\r\n\r\nexport class LazyRevisionOperation<T extends object> implements ILazyOperation {\r\n    private readonly _clazz: DocumentType<T>;\r\n    private readonly _getRevisionOperation: GetRevisionOperation;\r\n    private _mode: Mode;\r\n\r\n    private _result: object;\r\n    private _queryResult: QueryResult;\r\n    private _requiresRetry: boolean;\r\n\r\n\r\n    public constructor(clazz: DocumentType<T>, getRevisionOperation: GetRevisionOperation, mode: Mode) {\r\n        this._clazz = clazz;\r\n        this._getRevisionOperation = getRevisionOperation;\r\n        this._mode = mode;\r\n    }\r\n\r\n    public get result(): any {\r\n        return this._result;\r\n    }\r\n\r\n    public set result(result) {\r\n        this._result = result;\r\n    }\r\n\r\n    public get queryResult(): QueryResult {\r\n        return this._queryResult;\r\n    }\r\n\r\n    public set queryResult(queryResult) {\r\n        this._queryResult = queryResult;\r\n    }\r\n\r\n    public get requiresRetry() {\r\n        return this._requiresRetry;\r\n    }\r\n\r\n    public set requiresRetry(result) {\r\n        this._requiresRetry = result;\r\n    }\r\n\r\n\r\n    createRequest(): GetRequest {\r\n        const getRevisionsCommand = this._getRevisionOperation.command;\r\n        const getRequest = new GetRequest();\r\n        getRequest.method = \"GET\";\r\n        getRequest.url = \"/revisions\";\r\n        getRequest.query = \"?\" + getRevisionsCommand.getRequestQueryString();\r\n\r\n        return getRequest;\r\n    }\r\n\r\n    async handleResponseAsync(response: GetResponse): Promise<void> {\r\n        if (!response.result) {\r\n            return;\r\n        }\r\n\r\n        const responseAsNode = JSON.parse(response.result);\r\n\r\n        const jsonArrayResult: IRavenArrayResult = {\r\n            results: responseAsNode.Results\r\n        };\r\n\r\n        this._getRevisionOperation.result = jsonArrayResult;\r\n\r\n        switch (this._mode) {\r\n            case \"Single\": {\r\n                this._result = this._getRevisionOperation.getRevision(this._clazz);\r\n                break;\r\n            }\r\n            case \"Multi\": {\r\n                this._result = this._getRevisionOperation.getRevisionsFor(this._clazz);\r\n                break;\r\n            }\r\n            case \"Map\": {\r\n                this._result = this._getRevisionOperation.getRevisions(this._clazz);\r\n                break;\r\n            }\r\n            case \"ListOfMetadata\": {\r\n                this._result = this._getRevisionOperation.getRevisionsMetadataFor();\r\n                break;\r\n            }\r\n            default: {\r\n                throwError(\"InvalidArgumentException\", \"Invalid mode: \" + this._mode);\r\n            }\r\n        }\r\n    }\r\n}\r\n"]}