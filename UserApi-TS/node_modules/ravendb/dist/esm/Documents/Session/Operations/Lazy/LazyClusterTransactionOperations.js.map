{"version":3,"file":"LazyClusterTransactionOperations.js","sourceRoot":"","sources":["../../../../../../src/Documents/Session/Operations/Lazy/LazyClusterTransactionOperations.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,gCAAgC,EAAE,MAAM,2CAA2C,CAAC;AAE7F,OAAO,EAAE,oCAAoC,EAAE,MAAM,2CAA2C,CAAC;AACjG,OAAO,EAAE,qCAAqC,EAAE,MAAM,4CAA4C,CAAC;AAKnG,MAAM,OAAO,gCAAiC,SAAQ,gCAAgC;IAIlF,uBAAuB,CAAI,GAAW,EAAE,IAAoC;QACxE,OAAO,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,IAAI,oCAAoC,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC,CAAC;IAChI,CAAC;IAMD,wBAAwB,CACpB,IAAc,EAAE,IAAoC;QACpD,OAAO,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,IAAI,qCAAqC,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC,CAAC;IAClI,CAAC;CACJ","sourcesContent":["import { ClusterTransactionOperationsBase } from \"../../ClusterTransactionOperationsBase.js\";\r\nimport { ILazyClusterTransactionOperations } from \"../../ILazyClusterTransactionOperations.js\";\r\nimport { LazyGetCompareExchangeValueOperation } from \"./LazyGetCompareExchangeValueOperation.js\";\r\nimport { LazyGetCompareExchangeValuesOperation } from \"./LazyGetCompareExchangeValuesOperation.js\";\r\nimport { Lazy } from \"../../../Lazy.js\";\r\nimport { CompareExchangeValue } from \"../../../Operations/CompareExchange/CompareExchangeValue.js\";\r\nimport { CompareExchangeResultClass } from \"../../../../Types/index.js\";\r\n\r\nexport class LazyClusterTransactionOperations extends ClusterTransactionOperationsBase implements ILazyClusterTransactionOperations {\r\n\r\n    getCompareExchangeValue<T>(key: string): Lazy<CompareExchangeValue<T> | null>;\r\n    getCompareExchangeValue<T>(key: string, type: CompareExchangeResultClass<T>): Lazy<CompareExchangeValue<T> | null>;\r\n    getCompareExchangeValue<T>(key: string, type?: CompareExchangeResultClass<T>): Lazy<CompareExchangeValue<T> | null> {\r\n        return this._session.addLazyOperation(new LazyGetCompareExchangeValueOperation(this, type, this._session.conventions, key));\r\n    }\r\n\r\n    getCompareExchangeValues<T>(\r\n        keys: string[]): Lazy<{ [key: string]: CompareExchangeValue<T> | null }>;\r\n    getCompareExchangeValues<T>(\r\n        keys: string[], type: CompareExchangeResultClass<T>): Lazy<{ [key: string]: CompareExchangeValue<T> | null }>\r\n    getCompareExchangeValues<T>(\r\n        keys: string[], type?: CompareExchangeResultClass<T>): Lazy<{ [key: string]: CompareExchangeValue<T> | null }> {\r\n        return this._session.addLazyOperation(new LazyGetCompareExchangeValuesOperation(this, type, this._session.conventions, keys));\r\n    }\r\n}\r\n"]}