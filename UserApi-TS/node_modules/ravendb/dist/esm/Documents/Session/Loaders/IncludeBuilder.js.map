{"version":3,"file":"IncludeBuilder.js","sourceRoot":"","sources":["../../../../../src/Documents/Session/Loaders/IncludeBuilder.ts"],"names":[],"mappings":"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","sourcesContent":["import { DocumentConventions } from \"../../Conventions/DocumentConventions.js\";\r\nimport { IncludeBuilderBase } from \"./IncludeBuilderBase.js\";\r\nimport { IIncludeBuilder } from \"./IIncludeBuilder.js\";\r\nimport { TimeSeriesRangeType } from \"../../Operations/TimeSeries/TimeSeriesRangeType.js\";\r\nimport { TimeValue } from \"../../../Primitives/TimeValue.js\";\r\nimport { TypeUtil } from \"../../../Utility/TypeUtil.js\";\r\nimport { TIME_SERIES } from \"../../../Constants.js\";\r\n\r\nexport class IncludeBuilder extends IncludeBuilderBase implements IIncludeBuilder {\r\n    public constructor(conventions: DocumentConventions) {\r\n        super(conventions);\r\n    }\r\n\r\n    public includeDocuments(path: string): IIncludeBuilder {\r\n        this._includeDocuments(path);\r\n        return this;\r\n    }\r\n\r\n    public includeCounter(name: string): IIncludeBuilder;\r\n    public includeCounter(path: string, name: string): IIncludeBuilder;\r\n    public includeCounter(pathOrName: string, name?: string): IIncludeBuilder {\r\n        if (arguments.length === 1) {\r\n            this._includeCounter(\"\", pathOrName);\r\n        } else {\r\n            this._includeCounterWithAlias(pathOrName, name);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    public includeCounters(names: string[]): IIncludeBuilder;\r\n    public includeCounters(path: string, names: string[]): IIncludeBuilder;\r\n    public includeCounters(pathOrNames: string | string[], names?: string[]): IIncludeBuilder {\r\n        if (arguments.length === 1) {\r\n            this._includeCounters(\"\", pathOrNames as string[]);\r\n        } else {\r\n            this._includeCounterWithAlias(pathOrNames as string, names);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    public includeAllCounters(): IIncludeBuilder {\r\n        this._includeAllCounters(\"\");\r\n        return this;\r\n    }\r\n\r\n    public includeTimeSeries(name: string);\r\n    public includeTimeSeries(name: string, from: Date, to: Date);\r\n    public includeTimeSeries(name: string, type: TimeSeriesRangeType, time: TimeValue): IIncludeBuilder;\r\n    public includeTimeSeries(name: string, type: TimeSeriesRangeType, count: number): IIncludeBuilder;\r\n    public includeTimeSeries(names: string[], type: TimeSeriesRangeType, time: TimeValue): IIncludeBuilder;\r\n    public includeTimeSeries(names: string[], type: TimeSeriesRangeType, count: number): IIncludeBuilder;\r\n    public includeTimeSeries(nameOrNames: string | string[], fromOrType?: Date | TimeSeriesRangeType, toOrTimeOrCount?: Date | number | TimeValue) {\r\n        if (!fromOrType || fromOrType instanceof Date) {\r\n            this._includeTimeSeriesFromTo(\"\", nameOrNames as string, fromOrType as Date, toOrTimeOrCount as Date);\r\n        } else {\r\n            if (TypeUtil.isArray(nameOrNames)) {\r\n                if (TypeUtil.isNumber(toOrTimeOrCount)) {\r\n                    this._includeArrayOfTimeSeriesByRangeTypeAndCount(nameOrNames, fromOrType, toOrTimeOrCount);\r\n                } else { // names + time\r\n                    this._includeArrayOfTimeSeriesByRangeTypeAndTime(nameOrNames, fromOrType, toOrTimeOrCount as TimeValue);\r\n                }\r\n            } else { // name\r\n                if (TypeUtil.isNumber(toOrTimeOrCount)) {\r\n                    this._includeTimeSeriesByRangeTypeAndCount(\"\", nameOrNames, fromOrType, toOrTimeOrCount);\r\n                } else { // name + time\r\n                    this._includeTimeSeriesByRangeTypeAndTime(\"\", nameOrNames, fromOrType, toOrTimeOrCount as TimeValue);\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    public includeCompareExchangeValue(path: string) {\r\n        this._includeCompareExchangeValue(path);\r\n        return this;\r\n    }\r\n\r\n    public includeAllTimeSeries(type: TimeSeriesRangeType, time: TimeValue): IIncludeBuilder;\r\n    public includeAllTimeSeries(type: TimeSeriesRangeType, count: number): IIncludeBuilder;\r\n    public includeAllTimeSeries(type: TimeSeriesRangeType, timeOrCount: number | TimeValue): IIncludeBuilder {\r\n        if (TypeUtil.isNumber(timeOrCount)) {\r\n            this._includeTimeSeriesByRangeTypeAndCount(\"\", TIME_SERIES.ALL, type, timeOrCount);\r\n        } else {\r\n            this._includeTimeSeriesByRangeTypeAndTime(\"\", TIME_SERIES.ALL, type, timeOrCount);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    includeRevisions(path: string): IIncludeBuilder;\r\n    includeRevisions(before: Date): IIncludeBuilder;\r\n    includeRevisions(pathOrDate: string | Date): IIncludeBuilder {\r\n        if (TypeUtil.isString(pathOrDate)) {\r\n            this._withAlias();\r\n            this._includeRevisionsByChangeVectors(pathOrDate);\r\n            return this;\r\n        } else {\r\n            this._includeRevisionsBefore(pathOrDate);\r\n            return this;\r\n        }\r\n    }\r\n}\r\n"]}