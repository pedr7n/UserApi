{"version":3,"file":"SuggestToken.js","sourceRoot":"","sources":["../../../../../src/Documents/Session/Tokens/SuggestToken.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,iBAAiB,CAAC;AAC7C,OAAO,EAAE,UAAU,EAAE,MAAM,8BAA8B,CAAC;AAC1D,OAAO,EAAE,UAAU,EAAE,MAAM,gCAAgC,CAAC;AAC5D,OAAO,EAAE,cAAc,EAAE,MAAM,iCAAiC,CAAC;AAEjE,MAAM,OAAO,YAAa,SAAQ,UAAU;IAEvB,UAAU,CAAS;IACnB,MAAM,CAAS;IACf,kBAAkB,CAAS;IAC3B,qBAAqB,CAAS;IAE/C,YAAoB,SAAiB,EAAE,KAAa,EAAE,iBAAyB,EAAE,oBAA4B;QACzG,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,SAAS,EAAE,CAAC;YACb,UAAU,CAAC,0BAA0B,EAAE,0BAA0B,CAAC,CAAC;QACvE,CAAC;QAED,IAAI,CAAC,iBAAiB,EAAE,CAAC;YACrB,UAAU,CAAC,0BAA0B,EAAE,kCAAkC,CAAC,CAAC;QAC/E,CAAC;QAED,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,kBAAkB,GAAG,iBAAiB,CAAC;QAC5C,IAAI,CAAC,qBAAqB,GAAG,oBAAoB,CAAC;IACtD,CAAC;IAEM,MAAM,CAAC,MAAM,CAAC,SAAiB,EAAE,KAAa,EAAE,iBAAyB,EAAE,oBAA4B;QAC1G,OAAO,IAAI,YAAY,CAAC,SAAS,EAAE,cAAc,CAAC,iBAAiB,CAAC,KAAK,CAAC,EAAE,iBAAiB,EAAE,oBAAoB,CAAC,CAAC;IACzH,CAAC;IAED,IAAW,SAAS;QAChB,OAAO,IAAI,CAAC,UAAU,CAAC;IAC3B,CAAC;IAEM,OAAO,CAAC,MAAM;QACjB,MAAM;aACD,MAAM,CAAC,UAAU,CAAC;aAClB,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;aACvB,MAAM,CAAC,KAAK,CAAC;aACb,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAErC,IAAI,IAAI,CAAC,qBAAqB,EAAE,CAAC;YAC7B,MAAM;iBACD,MAAM,CAAC,KAAK,CAAC;iBACb,MAAM,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;QAC5C,CAAC;QAED,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAEnB,IAAI,UAAU,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,SAAS,KAAK,IAAI,CAAC,MAAM,EAAE,CAAC;YAC/E,OAAO;QACX,CAAC;QAED,MAAM;aACD,MAAM,CAAC,MAAM,CAAC;aACd,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC7B,CAAC;CACJ","sourcesContent":["import { QueryToken } from \"./QueryToken.js\";\r\nimport { throwError } from \"../../../Exceptions/index.js\";\r\nimport { StringUtil } from \"../../../Utility/StringUtil.js\";\r\nimport { QueryFieldUtil } from \"../../Queries/QueryFieldUtil.js\";\r\n\r\nexport class SuggestToken extends QueryToken {\r\n\r\n    private readonly _fieldName: string;\r\n    private readonly _alias: string;\r\n    private readonly _termParameterName: string;\r\n    private readonly _optionsParameterName: string;\r\n\r\n    private constructor(fieldName: string, alias: string, termParameterName: string, optionsParameterName: string) {\r\n        super();\r\n\r\n        if (!fieldName) {\r\n            throwError(\"InvalidArgumentException\", \"fieldName cannot be null\");\r\n        }\r\n\r\n        if (!termParameterName) {\r\n            throwError(\"InvalidArgumentException\", \"termParameterName cannot be null\");\r\n        }\r\n\r\n        this._fieldName = fieldName;\r\n        this._alias = alias;\r\n        this._termParameterName = termParameterName;\r\n        this._optionsParameterName = optionsParameterName;\r\n    }\r\n\r\n    public static create(fieldName: string, alias: string, termParameterName: string, optionsParameterName: string) {\r\n        return new SuggestToken(fieldName, QueryFieldUtil.escapeIfNecessary(alias), termParameterName, optionsParameterName);\r\n    }\r\n\r\n    public get fieldName() {\r\n        return this._fieldName;\r\n    }\r\n\r\n    public writeTo(writer): void {\r\n        writer\r\n            .append(\"suggest(\")\r\n            .append(this._fieldName)\r\n            .append(\", $\")\r\n            .append(this._termParameterName);\r\n\r\n        if (this._optionsParameterName) {\r\n            writer\r\n                .append(\", $\")\r\n                .append(this._optionsParameterName);\r\n        }\r\n\r\n        writer.append(\")\");\r\n\r\n        if (StringUtil.isNullOrWhitespace(this._alias) || this.fieldName === this._alias) {\r\n            return;\r\n        }\r\n\r\n        writer\r\n            .append(\" as \")\r\n            .append(this._alias);\r\n    }\r\n}\r\n"]}