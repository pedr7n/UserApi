{"version":3,"file":"CompareExchangeValueIncludesToken.js","sourceRoot":"","sources":["../../../../../src/Documents/Session/Tokens/CompareExchangeValueIncludesToken.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,iBAAiB,CAAC;AAC7C,OAAO,EAAE,UAAU,EAAE,MAAM,8BAA8B,CAAC;AAG1D,MAAM,OAAO,iCAAkC,SAAQ,UAAU;IAC5C,KAAK,CAAS;IAE/B,YAAoB,IAAY;QAC5B,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,IAAI,EAAE,CAAC;YACR,UAAU,CAAC,0BAA0B,EAAE,qBAAqB,CAAC,CAAC;QAClE,CAAC;QAED,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;IACtB,CAAC;IAEM,MAAM,CAAC,MAAM,CAAC,IAAY;QAC7B,OAAO,IAAI,iCAAiC,CAAC,IAAI,CAAC,CAAC;IACvD,CAAC;IAED,OAAO,CAAC,MAAqB;QACzB,MAAM;aACD,MAAM,CAAC,WAAW,CAAC;aACnB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;aAClB,MAAM,CAAC,IAAI,CAAC,CAAC;IACtB,CAAC;CACJ","sourcesContent":["import { QueryToken } from \"./QueryToken.js\";\r\nimport { throwError } from \"../../../Exceptions/index.js\";\r\nimport { StringBuilder } from \"../../../Utility/StringBuilder.js\";\r\n\r\nexport class CompareExchangeValueIncludesToken extends QueryToken {\r\n    private readonly _path: string;\r\n\r\n    private constructor(path: string) {\r\n        super();\r\n\r\n        if (!path) {\r\n            throwError(\"InvalidArgumentException\", \"Path cannot be null\");\r\n        }\r\n\r\n        this._path = path;\r\n    }\r\n\r\n    public static create(path: string) {\r\n        return new CompareExchangeValueIncludesToken(path);\r\n    }\r\n\r\n    writeTo(writer: StringBuilder) {\r\n        writer\r\n            .append(\"cmpxchg('\")\r\n            .append(this._path)\r\n            .append(\"')\");\r\n    }\r\n}\r\n"]}