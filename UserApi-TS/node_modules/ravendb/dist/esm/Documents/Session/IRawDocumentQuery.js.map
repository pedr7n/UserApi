{"version":3,"file":"IRawDocumentQuery.js","sourceRoot":"","sources":["../../../../src/Documents/Session/IRawDocumentQuery.ts"],"names":[],"mappings":"","sourcesContent":["import { IQueryBase } from \"./IQueryBase.js\";\r\nimport { IDocumentQueryBaseSingle } from \"./IDocumentQueryBaseSingle.js\";\r\nimport { IEnumerableQuery } from \"./IEnumerableQuery.js\";\r\nimport { FacetResult } from \"../Queries/Facets/index.js\";\r\nimport { ProjectionBehavior } from \"../Queries/ProjectionBehavior.js\";\r\nimport { IPagingDocumentQueryBase } from \"./IPagingDocumentQueryBase.js\";\r\n\r\nexport interface IRawDocumentQuery<T extends object>\r\n    extends IQueryBase<T, IRawDocumentQuery<T>>, IPagingDocumentQueryBase<T, IRawDocumentQuery<T>>, IDocumentQueryBaseSingle<T>, IEnumerableQuery<T> {\r\n\r\n    /**\r\n     * Add a named parameter to the query\r\n     */\r\n    addParameter(name: string, value: any): IRawDocumentQuery<T>;\r\n\r\n    projection(projectionBehavior: ProjectionBehavior): IRawDocumentQuery<T>;\r\n\r\n    /**\r\n     * Execute raw query aggregated by facet\r\n     */\r\n    executeAggregation(): Promise<Record<string, FacetResult>>;\r\n}\r\n"]}