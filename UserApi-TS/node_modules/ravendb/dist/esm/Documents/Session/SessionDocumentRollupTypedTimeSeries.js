import { SessionTimeSeriesBase } from "./SessionTimeSeriesBase.js";
import { TypedTimeSeriesRollupEntry } from "./TimeSeries/TypedTimeSeriesRollupEntry.js";
import { TypeUtil } from "../../Utility/TypeUtil.js";
export class SessionDocumentRollupTypedTimeSeries extends SessionTimeSeriesBase {
    _clazz;
    constructor(session, documentIdOrEntity, name, clazz) {
        super(session, documentIdOrEntity, name);
        this._clazz = clazz;
    }
    async get(from, to, start = 0, pageSize = TypeUtil.MAX_INT32) {
        if (this._notInCache(from, to)) {
            const results = await this.getTimeSeriesAndIncludes(from, to, null, start, pageSize);
            return results.map(x => TypedTimeSeriesRollupEntry.fromEntry(x, this._clazz));
        }
        const results = await this._getFromCache(from, to, null, start, pageSize);
        return results
            .map(x => TypedTimeSeriesRollupEntry.fromEntry(x, this._clazz));
    }
    append(entry) {
        const values = entry.getValuesFromMembers();
        this._appendInternal(entry.timestamp, values, entry.tag);
    }
}
//# sourceMappingURL=SessionDocumentRollupTypedTimeSeries.js.map