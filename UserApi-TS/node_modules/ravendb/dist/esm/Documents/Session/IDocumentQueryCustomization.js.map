{"version":3,"file":"IDocumentQueryCustomization.js","sourceRoot":"","sources":["../../../../src/Documents/Session/IDocumentQueryCustomization.ts"],"names":[],"mappings":"","sourcesContent":["import { QueryOperation } from \"./Operations/QueryOperation.js\";\r\nimport { IndexQuery } from \"../Queries/IndexQuery.js\";\r\nimport { QueryResult } from \"../Queries/QueryResult.js\";\r\nimport { ValueCallback } from \"../../Types/Callbacks.js\";\r\nimport { QueryTimings } from \"../Queries/Timings/QueryTimings.js\";\r\nimport { ProjectionBehavior } from \"../Queries/ProjectionBehavior.js\";\r\nimport { AbstractDocumentQuery } from \"./AbstractDocumentQuery.js\";\r\nimport { IQueryShardedContextBuilder } from \"./Querying/Sharding/IQueryShardedContextBuilder.js\";\r\n\r\nexport interface IDocumentQueryCustomization {\r\n\r\n    /**\r\n     * Get the raw query operation that will be sent to the server\r\n     */\r\n    getQueryOperation(): QueryOperation;\r\n\r\n    /**\r\n     * Get current query\r\n     */\r\n    getQuery(): AbstractDocumentQuery<any, any>;\r\n\r\n    /**\r\n     * Allow you to modify the index query before it is executed\r\n     */\r\n    on(eventName: \"beforeQueryExecuted\", eventHandler: (eventArgs: IndexQuery) => void): IDocumentQueryCustomization;\r\n\r\n    /**\r\n     * Callback to get the results of the query\r\n     */\r\n    on(eventName: \"afterQueryExecuted\", eventHandler: (eventArgs: QueryResult) => void): IDocumentQueryCustomization;\r\n\r\n    once(eventName: \"beforeQueryExecuted\", eventHandler: (eventArgs: IndexQuery) => void): IDocumentQueryCustomization;\r\n\r\n    once(eventName: \"afterQueryExecuted\", eventHandler: (eventArgs: QueryResult) => void): IDocumentQueryCustomization;\r\n\r\n    /**\r\n     * Allow you to modify the index query before it is executed\r\n     */\r\n    removeListener(\r\n        eventName: \"beforeQueryExecuted\", eventHandler: (eventArgs: IndexQuery) => void): IDocumentQueryCustomization;\r\n\r\n    /**\r\n     * Callback to get the results of the query\r\n     */\r\n    removeListener(\r\n        eventName: \"afterQueryExecuted\", eventHandler: (eventArgs: QueryResult) => void): IDocumentQueryCustomization;\r\n\r\n    //TBD IDocumentQueryCustomization AfterStreamExecutedCallback\r\n\r\n    /**\r\n     * Disables caching for query results.\r\n     */\r\n    noCaching(): IDocumentQueryCustomization;\r\n\r\n    /**\r\n     * Disables tracking for queried entities by Raven's Unit of Work.\r\n     * Usage of this option will prevent holding query results in memory.\r\n     */\r\n    noTracking(): IDocumentQueryCustomization;\r\n\r\n    /**\r\n     * Disables tracking for queried entities by Raven's Unit of Work.\r\n     * Usage of this option will prevent holding query results in memory.\r\n     */\r\n    randomOrdering(): IDocumentQueryCustomization;\r\n\r\n    /**\r\n     *  Order the search results randomly using the specified seed\r\n     *  this is useful if you want to have repeatable random queries\r\n     */\r\n    randomOrdering(seed: string): IDocumentQueryCustomization;\r\n\r\n    //TBD IDocumentQueryCustomization CustomSortUsing(string typeName);\r\n    //TBD IDocumentQueryCustomization CustomSortUsing(string typeName, bool descending);\r\n    //TBD IDocumentQueryCustomization ShowTimings();\r\n\r\n    /**\r\n     * Instruct the query to wait for non stale results.\r\n     * This shouldn't be used outside of unit tests unless you are well aware of the implications\r\n     */\r\n    waitForNonStaleResults(): IDocumentQueryCustomization;\r\n\r\n    /**\r\n     * Instruct the query to wait for non stale results.\r\n     * This shouldn't be used outside of unit tests unless you are well aware of the implications\r\n     */\r\n    waitForNonStaleResults(waitTimeout: number): IDocumentQueryCustomization;\r\n\r\n    projection(projectionBehavior: ProjectionBehavior): IDocumentQueryCustomization;\r\n\r\n    timings(timings: ValueCallback<QueryTimings>): IDocumentQueryCustomization;\r\n\r\n    shardContext(action: (builder: IQueryShardedContextBuilder) => void): IDocumentQueryCustomization;\r\n}\r\n"]}