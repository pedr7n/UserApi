{"version":3,"file":"Timer.js","sourceRoot":"","sources":["../../../src/Primitives/Timer.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,SAAS,EAAE,MAAM,uBAAuB,CAAC;AAElD,MAAM,GAAG,GAAG,SAAS,CAAC,EAAE,MAAM,EAAE,OAAO,EAAE,CAAC,CAAC;AAE3C,MAAM,OAAO,KAAK;IAEN,OAAO,CAAqB;IAE5B,uBAAuB,CAAe;IAEtC,iBAAiB,CAAiC;IAClD,WAAW,CAAiC;IAE5C,gBAAgB,CAAiC;IAEzD,6BAA6B;IACrB,WAAW,CAAS;IAE5B,YAAY,MAA0B,EAAE,WAAmB,EAAE,UAAmB;QAC5E,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;QAC9B,IAAI,WAAW,IAAI,IAAI,EAAE,CAAC;YACtB,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;QAChC,CAAC;IACL,CAAC;IAEM,MAAM,CAAC,WAAmB,EAAE,MAAe;QAC9C,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC;QAC1B,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;IAChC,CAAC;IAEO,SAAS,CAAC,WAAmB;QACjC,IAAI,CAAC,iBAAiB,GAAG,UAAU,CAAC,GAAG,EAAE;YAErC,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC;gBACnB,IAAI,CAAC,WAAW,GAAG,WAAW,CAC1B,GAAG,EAAE,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;YACrD,CAAC;YAED,IAAI,CAAC,YAAY,EAAE,CAAC;QAExB,CAAC,EAAE,WAAW,CAAC,CAAC;IACpB,CAAC;IAEO,YAAY;QAChB,GAAG,CAAC,IAAI,CAAC,sBAAsB,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC;QAEpD,MAAM,aAAa,GAAG,KAAK,IAAI,EAAE;YAC7B,IAAI,CAAC;gBACD,OAAO,MAAM,IAAI,CAAC,OAAO,EAAE,CAAC;YAChC,CAAC;YAAC,OAAO,CAAC,EAAE,CAAC;gBACT,GAAG,CAAC,IAAI,CAAC,gCAAgC,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC;gBAClE,MAAM,CAAC,CAAC;YACZ,CAAC;oBAAS,CAAC;gBACP,GAAG,CAAC,IAAI,CAAC,uBAAuB,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,CAAC,CAAA;YACzD,CAAC;QACL,CAAC,CAAA;QACD,IAAI,CAAC,uBAAuB,GAAG,aAAa,EAAE,CAAC;IACnD,CAAC;IAEO,YAAY;QAChB,YAAY,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QACrC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACpC,CAAC;IAEM,OAAO;QACV,GAAG,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,CAAC,CAAC;QAC1C,IAAI,CAAC,YAAY,EAAE,CAAC;IACxB,CAAC;CACJ","sourcesContent":["import { IDisposable } from \"../Types/Contracts.js\";\r\nimport { getLogger } from \"../Utility/LogUtil.js\";\r\n\r\nconst log = getLogger({ module: \"Timer\" });\r\n\r\nexport class Timer implements IDisposable {\r\n\r\n    private _action: () => Promise<any>;\r\n\r\n    private _scheduledActionPromise: Promise<any>;\r\n\r\n    private _firstTimeDelayId: ReturnType<typeof setInterval>;\r\n    private _intervalId: ReturnType<typeof setInterval>;\r\n\r\n    private _intervalTimerId: ReturnType<typeof setInterval>;\r\n\r\n    /** period in milliseconds */\r\n    private _periodInMs: number;\r\n\r\n    constructor(action: () => Promise<any>, dueTimeInMs: number, periodInMs?: number) {\r\n        this._action = action;\r\n        this._periodInMs = periodInMs;\r\n        if (dueTimeInMs != null) {\r\n            this._schedule(dueTimeInMs);\r\n        }\r\n    }\r\n\r\n    public change(dueTimeInMs: number, period?: number) {\r\n        this._periodInMs = period;\r\n        this._clearTimers();\r\n        this._schedule(dueTimeInMs);\r\n    }\r\n\r\n    private _schedule(dueTimeInMs: number) {\r\n        this._firstTimeDelayId = setTimeout(() => {\r\n\r\n            if (this._periodInMs) {\r\n                this._intervalId = setInterval(\r\n                    () => this._timerAction(), this._periodInMs);\r\n            }\r\n\r\n            this._timerAction();\r\n\r\n        }, dueTimeInMs);\r\n    }\r\n\r\n    private _timerAction() {\r\n        log.info(`Start timer action ${this._action.name}`);\r\n\r\n        const actionPromise = async () => {\r\n            try {\r\n                return await this._action();\r\n            } catch (e) {\r\n                log.warn(`Error executing timer action ${this._action.name}.`, e);\r\n                throw e;\r\n            } finally {\r\n                log.info(`Finish timer action ${this._action.name}.`)\r\n            }\r\n        }\r\n        this._scheduledActionPromise = actionPromise();\r\n    }\r\n\r\n    private _clearTimers() {\r\n        clearTimeout(this._firstTimeDelayId);\r\n        clearInterval(this._intervalId);\r\n    }\r\n\r\n    public dispose(): void {\r\n        log.info(`Dispose ${this._action.name}.`);\r\n        this._clearTimers();\r\n    }\r\n}\r\n"]}