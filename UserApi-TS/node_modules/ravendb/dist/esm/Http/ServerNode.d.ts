import { ClusterTopology } from "./ClusterTopology.js";
import { Topology } from "./Topology.js";
export type ServerNodeRole = "None" | "Promotable" | "Member" | "Rehab";
export declare class ServerNode {
    database: string;
    url: string;
    clusterTag?: string;
    serverRole: ServerNodeRole;
    supportsAtomicClusterWrites: boolean;
    private _lastServerVersionCheck;
    private _lastServerVersion;
    constructor(opts?: {
        database?: string;
        url?: string;
        clusterTag?: string;
        serverRole?: ServerNodeRole;
    });
    shouldUpdateServerVersion(): boolean;
    updateServerVersion(serverVersion: string): void;
    discardServerVersion(): void;
    static createFrom(topology: ClusterTopology, etag: number): Topology;
    get lastServerVersion(): string;
    get isSecure(): boolean;
    fromJson(json: object): void;
    static fromJson(json: object): ServerNode;
}
//# sourceMappingURL=ServerNode.d.ts.map