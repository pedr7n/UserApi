{"version":3,"file":"Constants.js","sourceRoot":"","sources":["../../src/Constants.ts"],"names":[],"mappings":"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","sourcesContent":["import { MetadataObject } from \"./Documents/Session/MetadataObject.js\";\r\n\r\nexport const CONSTANTS = {\r\n    Documents: {\r\n        Indexing: {\r\n            Fields: {\r\n                ALL_FIELDS: \"__all_fields\",\r\n                DOCUMENT_ID_FIELD_NAME: \"id()\",\r\n                SOURCE_DOCUMENT_ID_FIELD_NAME: \"sourceDocId()\",\r\n                REDUCE_KEY_HASH_FIELD_NAME: \"hash(key())\",\r\n                REDUCE_KEY_KEY_VALUE_FIELD_NAME: \"key()\",\r\n                VALUE_FIELD_NAME: \"value()\",\r\n                SPATIAL_SHAPE_FIELD_NAME: \"spatial(shape)\",\r\n                // TBD 4.1 CUSTOM_SORT_FIELD_NAME: \"__customSort\",\r\n            },\r\n            Spatial: {\r\n                DEFAULT_DISTANCE_ERROR_PCT: 0.025,\r\n            },\r\n            SIDE_BY_SIDE_INDEX_NAME_PREFIX: \"ReplacementOf/\",\r\n        },\r\n        Metadata: {\r\n            COLLECTION: \"@collection\",\r\n            PROJECTION: \"@projection\",\r\n            KEY: \"@metadata\",\r\n            ID: \"@id\",\r\n            CONFLICT: \"@conflict\",\r\n            ID_PROPERTY: \"id\",\r\n            FLAGS: \"@flags\",\r\n            ATTACHMENTS: \"@attachments\",\r\n            INDEX_SCORE: \"@index-score\",\r\n            LAST_MODIFIED: \"@last-modified\",\r\n            RAVEN_JS_TYPE: \"Raven-Node-Type\" as keyof MetadataObject & \"Raven-Node-Type\",\r\n            CHANGE_VECTOR: \"@change-vector\",\r\n            EXPIRES: \"@expires\",\r\n            REFRESH: \"@refresh\",\r\n            ARCHIVE_AT: \"@archive-at\",\r\n            ARCHIVED: \"@archived\",\r\n            ALL_DOCUMENTS_COLLECTION: \"@all_docs\",\r\n            EMPTY_COLLECTION: \"@empty\",\r\n            NESTED_OBJECT_TYPES: \"@nested-object-types\",\r\n            NESTED_OBJECT_TYPES_PROJECTION_FIELD: \"__PROJECTED_NESTED_OBJECT_TYPES__\",\r\n            COUNTERS: \"@counters\",\r\n            TIME_SERIES: \"@timeseries\",\r\n            REVISION_COUNTERS: \"@counters-snapshot\",\r\n            REVISION_TIME_SERIES: \"@timeseries-snapshot\",\r\n            IGNORE_CASE_TRANSFORM_REGEX:\r\n                /^@metadata(\\.(@collection|@projection|@id|@conflict|@flags|Raven-Node-Type|@index-score|@last-modified|@change-vector|@expires|@nested-object-types(\\.\\w+)?))?$/\r\n        },\r\n\r\n        Querying: {\r\n            SHARD_CONTEXT_PARAMETER_NAME: \"__shardContext\",\r\n        },\r\n\r\n        PeriodicBackup: {\r\n            FULL_BACKUP_EXTENSION: \"ravendb-full-backup\",\r\n            SNAPSHOT_EXTENSION: \"ravendb-snapshot\",\r\n            ENCRYPTED_FULL_BACKUP_EXTENSION: \".ravendb-encrypted-full-backup\",\r\n            ENCRYPTED_SNAPSHOT_EXTENSION: \".ravendb-encrypted-snapshot\",\r\n            INCREMENTAL_BACKUP_EXTENSION: \"ravendb-incremental-backup\",\r\n            ENCRYPTED_INCREMENTAL_BACKUP_EXTENSION: \".ravendb-encrypted-incremental-backup\",\r\n\r\n            Folders: {\r\n                INDEXES: \"Indexes\",\r\n                DOCUMENTS: \"Documents\",\r\n                CONFIGURATION: \"Configuration\"\r\n            }\r\n        }\r\n    }\r\n} as const;\r\n\r\nexport const QUERY_STRING = {\r\n    NODE_TAG: \"nodeTag\",\r\n    SHARD_NUMBER: \"shardNumber\"\r\n} as const;\r\n\r\nexport const HEADERS = {\r\n    REQUEST_TIME: \"Raven-Request-Time\",\r\n    REFRESH_TOPOLOGY: \"Refresh-Topology\",\r\n    TOPOLOGY_ETAG: \"Topology-Etag\",\r\n    CLUSTER_TOPOLOGY_ETAG: \"Cluster-Topology-Etag\",\r\n    LAST_KNOWN_CLUSTER_TRANSACTION_INDEX: \"Known-Raft-Index\",\r\n    CLIENT_CONFIGURATION_ETAG: \"Client-Configuration-Etag\",\r\n    REFRESH_CLIENT_CONFIGURATION: \"Refresh-Client-Configuration\",\r\n    CLIENT_VERSION: \"Raven-Client-Version\",\r\n    SERVER_VERSION: \"Raven-Server-Version\",\r\n    ETAG: \"ETag\",\r\n    IF_MATCH: \"If-Match\",\r\n    IF_NONE_MATCH: \"If-None-Match\",\r\n    TRANSFER_ENCODING: \"Transfer-Encoding\",\r\n    CONTENT_ENCODING: \"Content-Encoding\",\r\n    ACCEPT_ENCODING: \"Accept-Encoding\",\r\n    CONTENT_DISPOSITION: \"Content-Disposition\",\r\n    CONTENT_TYPE: \"Content-Type\",\r\n    CONTENT_LENGTH: \"Content-Length\",\r\n    INCREMENTAL_TIME_SERIES_PREFIX: \"INC:\",\r\n    ORIGIN: \"Origin\",\r\n    SHARDED: \"Sharded\",\r\n    ATTACHMENT_HASH: \"Attachment-Hash\",\r\n    ATTACHMENT_SIZE: \"Attachment-Size\",\r\n    DATABASE_MISSING: \"Database-Missing\"\r\n} as const;\r\n\r\nexport const ENCODINGS = {\r\n    GZIP: \"gzip\",\r\n    ZSTD: \"zstd\"\r\n} as const;\r\n\r\nexport const COUNTERS = {\r\n    ALL: \"@all_counters\"\r\n} as const;\r\n\r\n\r\nexport const TIME_SERIES = {\r\n    SELECT_FIELD_NAME: \"timeseries\",\r\n    QUERY_FUNCTION: \"__timeSeriesQueryFunction\",\r\n    ALL: \"@all_timeseries\"\r\n} as const;\r\n\r\n\r\nexport const COMPARE_EXCHANGE = {\r\n    RVN_ATOMIC_PREFIX: \"rvn-atomic/\",\r\n    OBJECT_FIELD_NAME: \"Object\"\r\n} as const;\r\n\r\nexport const INDEXES = {\r\n    INDEXING_STATIC_SEARCH_ENGINE_TYPE: \"Indexing.Static.SearchEngineType\",\r\n    INDEXING_AUTO_SEARCH_ENGINE_TYPE: \"Indexing.Auto.SearchEngineType\"\r\n} as const;\r\n\r\nexport const IDENTITIES = {\r\n    DEFAULT_SEPARATOR: \"/\"\r\n} as const;\r\n\r\n"]}