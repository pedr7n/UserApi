{"version":3,"file":"TypeUtil.js","sourceRoot":"","sources":["../../../src/Utility/TypeUtil.ts"],"names":[],"mappings":"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","sourcesContent":["import { DocumentType } from \"../Documents/DocumentAbstractions.js\";\r\nimport { ObjectLiteralDescriptor, ObjectTypeDescriptor, ClassConstructor, EntityConstructor } from \"../Types/index.js\";\r\n\r\nexport class TypeUtil {\r\n    public static readonly MAX_INT32 = 2147483647;\r\n    public static readonly MIN_INT32 = -2147483648;\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n    public static NOOP: (...args: any[]) => any = () => {\r\n        // empty by design\r\n    };\r\n\r\n    public static ASYNC_NOOP: (...args: any[]) => Promise<any> = () => Promise.resolve(undefined);\r\n\r\n    public static isNullOrUndefined(value: any): boolean {\r\n        return (\"undefined\" === (typeof value)) || value === null;\r\n    }\r\n\r\n    public static isUndefined(value: any): boolean {\r\n        return typeof value === \"undefined\";\r\n    }\r\n\r\n    public static isString(value: any): value is string {\r\n        return typeof(value) === \"string\";\r\n    }\r\n\r\n    public static isNumber(value: any): value is number {\r\n        return typeof(value) === \"number\";\r\n    }\r\n\r\n    public static isPrimitive(value: any): value is number | string | boolean {\r\n        return TypeUtil.isNumber(value)\r\n            || TypeUtil.isString(value)\r\n            || TypeUtil.isBool(value);\r\n    }\r\n\r\n    public static isPrimitiveType(type: any): boolean {\r\n        return type === Number ||\r\n            type === String ||\r\n            type === Boolean;\r\n    }\r\n\r\n    public static isArray<T = any>(value: any): value is T[] {\r\n        return Array.isArray(value);\r\n    }\r\n\r\n    public static isObject(value: any): value is object {\r\n        return value\r\n            && typeof(value) === \"object\"\r\n            && !this.isArray(value);\r\n    }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/ban-types\r\n    public static isFunction(value: any): value is Function {\r\n        return typeof(value) === \"function\";\r\n    }\r\n\r\n    public static isDate(value: any): value is Date {\r\n        return value && value.constructor && value.constructor.name === \"Date\";\r\n    }\r\n\r\n    public static isBool(value: any): value is boolean {\r\n        return value === true || value === false;\r\n    }\r\n\r\n    public static isClass(value: any): value is ClassConstructor {\r\n        return this.isFunction(value) && (\"name\" in value) && value.name !== \"\"\r\n            && (\"Object\" !== value.name)\r\n            && (!!value.prototype && !!value.prototype.constructor.name);\r\n    }\r\n\r\n    public static isObjectTypeDescriptor(value: any): value is ObjectTypeDescriptor {\r\n        return !!value\r\n            && typeof value !== \"string\"\r\n            && (this.isClass(value) || this.isObjectLiteralTypeDescriptor(value));\r\n\r\n    }\r\n\r\n    public static isType(obj: object, typeDescriptor: DocumentType) {\r\n        if (!typeDescriptor) {\r\n            return false;\r\n        }\r\n\r\n        return obj\r\n            && ((typeDescriptor as ObjectLiteralDescriptor).isType\r\n                && (typeDescriptor as ObjectLiteralDescriptor).isType(obj))\r\n            || (obj && obj.constructor.name === (typeDescriptor as EntityConstructor).name);\r\n    }\r\n\r\n    public static isObjectLiteralTypeDescriptor(typeDescriptor: ObjectTypeDescriptor) {\r\n        return typeDescriptor\r\n            && !this.isClass(typeDescriptor)\r\n            && typeof (typeDescriptor as ObjectLiteralDescriptor).isType === \"function\";\r\n    }\r\n\r\n    public static findType(obj: object, typeDescriptors: ObjectTypeDescriptor[]): ObjectTypeDescriptor {\r\n        if (!obj) {\r\n            return null;\r\n        }\r\n\r\n        if (TypeUtil.isClass(obj.constructor)) {\r\n            return obj.constructor as ClassConstructor;\r\n        }\r\n\r\n        for (const typeDescriptor of typeDescriptors) {\r\n            if (!TypeUtil.isObjectLiteralTypeDescriptor(typeDescriptor)) {\r\n                return;\r\n            }\r\n\r\n            if (TypeUtil.isType(obj, typeDescriptor as ObjectLiteralDescriptor)) {\r\n                return typeDescriptor;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    public static isInstanceOf(type: ObjectTypeDescriptor, typeToCheck: ObjectTypeDescriptor) {\r\n        return TypeUtil.isClass(type)\r\n            && TypeUtil.isClass(typeToCheck)\r\n            && type instanceof (typeToCheck as ClassConstructor);\r\n    }\r\n\r\n    public static isSet(obj: any) {\r\n        return obj\r\n            && obj.constructor\r\n            && obj.constructor.name === \"Set\";\r\n    }\r\n\r\n    public static isMap(obj: any) {\r\n        return obj\r\n            && obj.constructor\r\n            && obj.constructor.name === \"Map\";\r\n    }\r\n\r\n    public static isDocumentType<TEntity>(obj: any) {\r\n        return obj && (this.isString(obj) ||\r\n            this.isObjectTypeDescriptor(obj));\r\n    }\r\n}\r\n"]}