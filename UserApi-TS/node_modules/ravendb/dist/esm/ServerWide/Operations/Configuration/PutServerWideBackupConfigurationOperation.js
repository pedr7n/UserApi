import { throwError } from "../../../Exceptions/index.js";
import { RavenCommand } from "../../../Http/RavenCommand.js";
import { RaftIdGenerator } from "../../../Utility/RaftIdGenerator.js";
export class PutServerWideBackupConfigurationOperation {
    _configuration;
    constructor(configuration) {
        if (!configuration) {
            throwError("InvalidArgumentException", "Configuration cannot be null");
        }
        this._configuration = configuration;
    }
    getCommand(conventions) {
        return new PutServerWideBackupConfigurationCommand(this._configuration);
    }
    get resultType() {
        return "CommandResult";
    }
}
class PutServerWideBackupConfigurationCommand extends RavenCommand {
    _configuration;
    constructor(configuration) {
        super();
        if (!configuration) {
            throwError("InvalidArgumentException", "Configuration cannot be null");
        }
        this._configuration = configuration;
    }
    get isReadRequest() {
        return false;
    }
    getRaftUniqueRequestId() {
        return RaftIdGenerator.newId();
    }
    createRequest(node) {
        const uri = node.url + "/admin/configuration/server-wide/backup";
        const body = this._serializer.serialize(this._configuration);
        return {
            uri,
            method: "PUT",
            headers: this._headers().typeAppJson().build(),
            body
        };
    }
    async setResponseAsync(bodyStream, fromCache) {
        return this._parseResponseDefaultAsync(bodyStream);
    }
}
//# sourceMappingURL=PutServerWideBackupConfigurationOperation.js.map