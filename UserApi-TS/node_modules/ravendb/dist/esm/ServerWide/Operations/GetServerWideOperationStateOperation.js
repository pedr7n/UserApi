import { RavenCommand } from "../../Http/RavenCommand.js";
export class GetServerWideOperationStateOperation {
    get resultType() {
        return "CommandResult";
    }
    _id;
    constructor(id) {
        this._id = id;
    }
    getCommand(conventions) {
        return new GetServerWideOperationStateCommand(this._id);
    }
}
export class GetServerWideOperationStateCommand extends RavenCommand {
    _id;
    constructor(id, nodeTag) {
        super();
        this._id = id;
        this._selectedNodeTag = nodeTag;
    }
    createRequest(node) {
        const uri = node.url + "/operations/state?id=" + this._id;
        return {
            uri,
            method: "GET"
        };
    }
    get isReadRequest() {
        return true;
    }
    async setResponseAsync(bodyStream, fromCache) {
        if (!bodyStream) {
            this._throwInvalidResponse();
        }
        return this._parseResponseDefaultAsync(bodyStream);
    }
}
//# sourceMappingURL=GetServerWideOperationStateOperation.js.map