import { EventEmitter } from "node:events";
export declare class Assembler extends EventEmitter {
    static connectTo(stream: any, options: any): Assembler;
    stack: any;
    current: any;
    done: any;
    key: any;
    reviver: any;
    constructor(options: any);
    connectTo(stream: any): this;
    get depth(): number;
    get path(): any[];
    dropToLevel(level: any): this;
    consume(chunk: any): this;
    keyValue(value: any): void;
    numberValue(value: any): void;
    nullValue(): void;
    trueValue(): void;
    falseValue(): void;
    endObject(): void;
    _saveValue(value: any): void;
    _saveValueWithReviver(value: any): void;
    stringValue: (value: any) => void;
    startObject: () => void;
    startArray: () => void;
    endArray: () => void;
}
//# sourceMappingURL=Assembler.d.ts.map