{"version":3,"file":"HttpUtil.js","sourceRoot":"","sources":["../../../src/Utility/HttpUtil.ts"],"names":[],"mappings":";;;AAIA,sDAWC;AAED,sCAaC;AAED,4DAUC;AAED,4CAUC;AAED,gCAEC;AAED,8CAEC;AA9DD,kDAA0C;AAC1C,qDAAoD;AAGpD,SAAgB,qBAAqB,CAAC,QAAsB;IACxD,IAAI,UAAU,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,sBAAO,CAAC,IAAI,CAAC,CAAC;IACpD,IAAI,CAAC,UAAU,EAAE,CAAC;QACd,IAAA,qBAAU,EAAC,2BAA2B,EAAE,mCAAmC,CAAC,CAAC;IACjF,CAAC;IAED,IAAI,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC;QAC5B,UAAU,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;IAC/B,CAAC;IAED,OAAO,wBAAwB,CAAC,UAAU,CAAC,CAAC;AAChD,CAAC;AAED,SAAgB,aAAa,CAAC,iBAAwC;IAClE,IAAI,WAA8B,CAAC;IACnC,IAAI,SAAS,IAAI,iBAAiB,EAAE,CAAC;QACjC,WAAW,GAAI,iBAAkC,CAAC,OAAO,CAAC,GAAG,CAAC,sBAAO,CAAC,IAAI,CAAC,CAAC;IAChF,CAAC;SAAM,IAAI,sBAAO,CAAC,IAAI,IAAI,iBAAiB,EAAE,CAAC;QAC3C,WAAW,GAAG,iBAAiB,CAAC,sBAAO,CAAC,IAAI,CAAW,CAAC;IAC5D,CAAC;SAAM,CAAC;QACJ,WAAW,GAAG,IAAI,CAAC;IACvB,CAAC;IAED,MAAM,YAAY,GAAG,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,IAAI,IAAI,CAAC,CAAC;IAEzF,OAAO,YAAY,CAAC,CAAC,CAAC,wBAAwB,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;AACxE,CAAC;AAED,SAAgB,wBAAwB,CAAC,cAAsB;IAC3D,IAAI,CAAC,cAAc,EAAE,CAAC;QAClB,IAAA,qBAAU,EAAC,2BAA2B,EAAE,mCAAmC,CAAC,CAAC;IACjF,CAAC;IAED,IAAI,cAAc,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,CAAC;QACjC,OAAO,cAAc,CAAC,SAAS,CAAC,CAAC,EAAE,cAAc,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IAClE,CAAC;IAED,OAAO,cAAc,CAAC;AAC1B,CAAC;AAED,SAAgB,gBAAgB,CAAC,QAAsB,EAAE,MAAc;IACnE,MAAM,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC;IACjC,IAAI,SAAS,GAAsB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IACvD,IAAI,SAAS,IAAI,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,CAAC;QACxC,SAAS,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC;IACvC,CAAC;IAED,OAAO,SAAS;QACZ,CAAC,CAAE,SAAoB,CAAC,WAAW,EAAE,KAAK,MAAM;QAChD,CAAC,CAAC,IAAI,CAAC;AACf,CAAC;AAED,SAAgB,UAAU;IACtB,OAAO,cAAc,CAAC,MAAM,EAAE,CAAC;AACnC,CAAC;AAED,SAAgB,iBAAiB,CAAC,QAAsB;IACpD,4DAA4D;AAChE,CAAC;AAED,MAAa,cAAc;IAEf,OAAO,GAA8B,EAAE,CAAC;IAEzC,MAAM,CAAC,MAAM;QAChB,OAAO,IAAI,cAAc,EAAE,CAAC;IAChC,CAAC;IAEM,WAAW;QACd,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,GAAG,kBAAkB,CAAC;QAClD,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,IAAI,CAAC,IAAY,EAAE,GAAW;QACjC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC;QACzB,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,KAAK;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;IACxB,CAAC;CACJ;AArBD,wCAqBC","sourcesContent":["import { HEADERS } from \"../Constants.js\";\r\nimport { throwError } from \"../Exceptions/index.js\";\r\nimport { HttpResponse } from \"../Primitives/Http.js\";\r\n\r\nexport function getRequiredEtagHeader(response: HttpResponse) {\r\n    let etagHeader = response.headers.get(HEADERS.ETAG);\r\n    if (!etagHeader) {\r\n        throwError(\"InvalidOperationException\", \"Response did't had an ETag header\");\r\n    }\r\n\r\n    if (Array.isArray(etagHeader)) {\r\n        etagHeader = etagHeader[0];\r\n    }\r\n\r\n    return etagHeaderToChangeVector(etagHeader);\r\n}\r\n\r\nexport function getEtagHeader(responseOrHeaders: HttpResponse | object): string {\r\n    let etagHeaders: string[] | string;\r\n    if (\"headers\" in responseOrHeaders) {\r\n        etagHeaders = (responseOrHeaders as HttpResponse).headers.get(HEADERS.ETAG);\r\n    } else if (HEADERS.ETAG in responseOrHeaders) {\r\n        etagHeaders = responseOrHeaders[HEADERS.ETAG] as string;\r\n    } else {\r\n        etagHeaders = null;\r\n    }\r\n\r\n    const singleHeader = Array.isArray(etagHeaders) ? etagHeaders[0] : (etagHeaders || null);\r\n\r\n    return singleHeader ? etagHeaderToChangeVector(singleHeader) : null;\r\n}\r\n\r\nexport function etagHeaderToChangeVector(responseHeader: string) {\r\n    if (!responseHeader) {\r\n        throwError(\"InvalidOperationException\", \"Response did't had an ETag header\");\r\n    }\r\n\r\n    if (responseHeader.startsWith(`\"`)) {\r\n        return responseHeader.substring(1, responseHeader.length - 1);\r\n    }\r\n\r\n    return responseHeader;\r\n}\r\n\r\nexport function getBooleanHeader(response: HttpResponse, header: string): boolean {\r\n    const headers = response.headers;\r\n    let headerVal: string | string[] = headers.get(header);\r\n    if (headerVal && Array.isArray(headerVal)) {\r\n        headerVal = (headerVal[0] || null);\r\n    }\r\n\r\n    return headerVal\r\n        ? (headerVal as string).toLowerCase() === \"true\"\r\n        : null;\r\n}\r\n\r\nexport function getHeaders() {\r\n    return HeadersBuilder.create();\r\n}\r\n\r\nexport function closeHttpResponse(response: HttpResponse) {\r\n    // node-fetch closes response for us - no action is required\r\n}\r\n\r\nexport class HeadersBuilder {\r\n\r\n    private _result: { [key: string]: string } = {};\r\n\r\n    public static create() {\r\n        return new HeadersBuilder();\r\n    }\r\n\r\n    public typeAppJson() {\r\n        this._result[\"content-type\"] = \"application/json\";\r\n        return this;\r\n    }\r\n\r\n    public with(name: string, val: string) {\r\n        this._result[name] = val;\r\n        return this;\r\n    }\r\n\r\n    public build() {\r\n        return this._result;\r\n    }\r\n}\r\n"]}