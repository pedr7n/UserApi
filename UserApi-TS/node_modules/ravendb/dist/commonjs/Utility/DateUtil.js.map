{"version":3,"file":"DateUtil.js","sourceRoot":"","sources":["../../../src/Utility/DateUtil.ts"],"names":[],"mappings":"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","sourcesContent":["import { throwError } from \"../Exceptions/index.js\";\r\nimport { format, parse, parseISO } from \"date-fns\";\r\n\r\nexport interface DateUtilOpts {\r\n    withTimezone?: boolean;\r\n    useUtcDates?: boolean;\r\n}\r\n\r\nexport class DateUtil {\r\n\r\n    public static DEFAULT_DATE_FORMAT = \"yyyy-MM-dd'T'HH:mm:ss.SSS'0000'\";\r\n    public static DEFAULT_DATE_TZ_FORMAT = \"yyyy-MM-dd'T'HH:mm:ss.SSS'0000'xxx\";\r\n\r\n    public static default: DateUtil = new DateUtil({});\r\n\r\n    public static utc: DateUtil = new DateUtil({ useUtcDates: true });\r\n    public static tz: DateUtil = new DateUtil({ withTimezone: true });\r\n\r\n    public constructor(protected opts: DateUtilOpts) {}\r\n\r\n    public static timestamp(): number {\r\n        return Math.floor(new Date().getTime() / 1000);\r\n    }\r\n\r\n    public static timestampMs(): number {\r\n        return new Date().getTime();\r\n    }\r\n\r\n    public static zeroDate(): Date {\r\n        return new Date(0);\r\n    }\r\n\r\n    public parse(dateString: string): Date {\r\n        if (!dateString) {\r\n            return null;\r\n        }\r\n\r\n        dateString = DateUtil.alignPrecision(dateString);\r\n        let parsed: Date;\r\n        if (this.opts.withTimezone) {\r\n            parsed = parse(dateString, DateUtil.DEFAULT_DATE_TZ_FORMAT, new Date());\r\n        } else if (this.opts.useUtcDates || dateString.endsWith(\"Z\")) {\r\n            if (!dateString.endsWith(\"Z\")) {\r\n                dateString += \"Z\";\r\n            }\r\n            parsed = parseISO(dateString);\r\n        } else {\r\n            parsed = parse(dateString, DateUtil.DEFAULT_DATE_FORMAT, new Date());\r\n        }\r\n\r\n        if (isNaN(parsed.getTime())) {\r\n            throwError(\"InvalidArgumentException\", `Could not parse date string '${dateString}'.`);\r\n        }\r\n\r\n        return parsed;\r\n    }\r\n\r\n    private static alignPrecision(date: string) {\r\n        const hasZ = date.endsWith(\"Z\");\r\n        if (hasZ) {\r\n            date = date.slice(0, -1);\r\n        }\r\n        const lastDot = date.lastIndexOf(\".\");\r\n        const tzPlusIndex = date.indexOf(\"+\", lastDot);\r\n        const tzMinusIndex = date.indexOf(\"-\", lastDot);\r\n        const tzIndex = Math.max(tzPlusIndex, tzMinusIndex);\r\n        let tzSuffix = \"\";\r\n        if (tzIndex !== -1) {\r\n            tzSuffix = date.substring(tzIndex);\r\n            date = date.slice(0, tzIndex - 1);\r\n        }\r\n\r\n        const suffix = \"0000\" + tzSuffix + (hasZ ? \"Z\" : \"\");\r\n\r\n        if (lastDot === -1 || lastDot < date.length - 3) {\r\n            return date.slice(0, lastDot + 4) + suffix;\r\n        }\r\n        return date + suffix;\r\n    }\r\n\r\n    public stringify(date: Date): string {\r\n        if (this.opts.useUtcDates) {\r\n            const utcString = date.toISOString().slice(0, -1);\r\n\r\n            return this.opts.withTimezone ? utcString + \"0000+00:00\" : utcString + \"0000Z\";\r\n        }\r\n        const dateFormat = this.opts.withTimezone\r\n            ? DateUtil.DEFAULT_DATE_TZ_FORMAT\r\n            : DateUtil.DEFAULT_DATE_FORMAT;\r\n        return format(date, dateFormat);\r\n    }\r\n\r\n}\r\n"]}