{"version":3,"file":"TimeUtil.js","sourceRoot":"","sources":["../../../src/Utility/TimeUtil.ts"],"names":[],"mappings":"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","sourcesContent":["import { StringUtil } from \"./StringUtil.js\";\r\nimport { throwError } from \"../Exceptions/index.js\";\r\nimport { StringBuilder } from \"./StringBuilder.js\";\r\n\r\nexport class TimeUtil {\r\n\r\n    private static _parseMiddlePart(input: string) {\r\n        const tokens = input.split(\":\");\r\n        const hours = Number.parseInt(tokens[0], 10);\r\n        const minutes = Number.parseInt(tokens[1], 10);\r\n        const seconds = Number.parseInt(tokens[2], 10);\r\n\r\n        if (tokens.length !== 3) {\r\n            throwError(\"InvalidArgumentException\", \"Unexpected duration format: \" + input);\r\n        }\r\n\r\n        const totalSeconds = seconds + minutes * 60 + hours * 3600;\r\n        return totalSeconds * 1000;\r\n    }\r\n\r\n    public static readonly MILLIS_IN_DAY = 24 * 3600 * 1000;\r\n\r\n    public static durationToTimeSpan(duration: number) {\r\n        let time = duration;\r\n        const millis = time % 1000;\r\n        time -= millis;\r\n        time = time / 1000; // seconds\r\n        const seconds = time % 60;\r\n        time -= seconds;\r\n        time = time / 60; // in minutes\r\n        const minutes = time % 60;\r\n        time -= minutes;\r\n        time = time / 60; // in hours\r\n        const hours = time % 24;\r\n        time -= hours;\r\n        time = time / 24; // in days\r\n        const days = time;\r\n\r\n        const sb = new StringBuilder();\r\n        if (days) {\r\n            sb.append(days).append(\".\");\r\n        }\r\n        sb.append(hours.toString().padStart(2, \"0\")).append(\":\");\r\n        sb.append(minutes.toString().padStart(2, \"0\")).append(\":\");\r\n        sb.append(seconds.toString().padStart(2, \"0\"));\r\n\r\n        if (millis) {\r\n            sb.append(\".\");\r\n            sb.append(millis.toString().padStart(3, \"0\"))\r\n                .append(\"0000\");\r\n        }\r\n\r\n        return sb.toString();\r\n    }\r\n\r\n    public static timeSpanToDuration(text: string) {\r\n        const hasDays = !!/^\\d+\\./.test(text);\r\n        const hasMillis = !!/.*\\.\\d+/.test(text);\r\n\r\n        if (hasDays && hasMillis) {\r\n            const tokens = text.split(\".\");\r\n\r\n            const days = Number.parseInt(tokens[0], 10);\r\n            const millis = tokens[2] ? Number.parseInt(tokens[2], 10) : 0;\r\n            return this._parseMiddlePart(tokens[1]) + millis + days * TimeUtil.MILLIS_IN_DAY;\r\n        } else if (hasDays) {\r\n            const tokens = text.split(\".\");\r\n            const days = Number.parseInt(tokens[0], 10);\r\n            return this._parseMiddlePart(tokens[1]) + days * TimeUtil.MILLIS_IN_DAY;\r\n        } else if (hasMillis) {\r\n            const tokens = text.split(\".\");\r\n            let fractionString = tokens[1];\r\n            fractionString = fractionString.padEnd(7, \"0\");\r\n            const value = Number.parseInt(fractionString, 10) / 10_000;\r\n            return this._parseMiddlePart(tokens[0]) + value;\r\n        } else {\r\n            return this._parseMiddlePart(text);\r\n        }\r\n    }\r\n\r\n    public static millisToTimeSpan(value: number): string {\r\n        let time = value;\r\n        const millis = time % 1000;\r\n        time = (time - millis) / 1000; // seconds\r\n        const seconds = time % 60;\r\n        time = (time - seconds) / 60; // in minutes\r\n        const minutes = time % 60;\r\n        time = (time - minutes) / 60; // in hours\r\n        const hours = time % 24;\r\n        time = (time - hours) / 24;\r\n        const days = time;\r\n\r\n        let result = \"\";\r\n        if (days) {\r\n            result += days + \".\";\r\n        }\r\n\r\n        result += StringUtil.leftPad(hours.toString(), 2, \"0\")\r\n            + \":\"\r\n            + StringUtil.leftPad(minutes.toString(), 2, \"0\")\r\n            + \":\"\r\n            + StringUtil.leftPad(seconds.toString(), 2, \"0\");\r\n\r\n        if (millis) {\r\n            result += \".\" + StringUtil.leftPad(millis.toString(), 3, \"0\") + \"000\";\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n"]}