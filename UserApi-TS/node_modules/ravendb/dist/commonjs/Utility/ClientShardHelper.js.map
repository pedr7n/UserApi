{"version":3,"file":"ClientShardHelper.js","sourceRoot":"","sources":["../../../src/Utility/ClientShardHelper.ts"],"names":[],"mappings":";;;AACA,MAAa,iBAAiB;IACnB,MAAM,CAAC,WAAW,CAAC,QAAgB,EAAE,WAAmB;QAC3D,IAAI,iBAAiB,CAAC,WAAW,CAAC,QAAQ,CAAC,EAAE,CAAC;YAC1C,MAAM,IAAI,KAAK,CAAC,oCAAoC,GAAG,QAAQ,CAAC,CAAC;QACrE,CAAC;QAED,IAAI,WAAW,GAAG,CAAC,EAAE,CAAC;YAClB,MAAM,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAC;QACzD,CAAC;QAED,OAAO,QAAQ,GAAG,GAAG,GAAG,WAAW,CAAC;IACxC,CAAC;IAEM,MAAM,CAAC,cAAc,CAAC,SAAiB;QAC1C,MAAM,mBAAmB,GAAG,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACnD,IAAI,mBAAmB,KAAK,CAAC,CAAC,EAAE,CAAC;YAC7B,OAAO,SAAS,CAAC;QACrB,CAAC;QAED,OAAO,SAAS,CAAC,SAAS,CAAC,CAAC,EAAE,mBAAmB,CAAC,CAAC;IACvD,CAAC;IAEM,MAAM,CAAC,gCAAgC,CAAC,YAAoB;QAC/D,MAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACxC,IAAI,WAAW,GAAG,CAAC,CAAC,CAAC;QACrB,IAAI,mBAA2B,CAAC;QAEhC,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE,CAAC;YACf,MAAM,KAAK,GAAG,YAAY,CAAC,SAAS,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;YAChD,mBAAmB,GAAG,YAAY,CAAC,SAAS,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;YACvD,WAAW,GAAG,QAAQ,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YAElC,OAAO,CAAC,mBAAmB,EAAE,WAAW,CAAC,CAAC;QAC9C,CAAC;QAED,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,MAAM,CAAC,8BAA8B,CAAC,YAAoB;QAC7D,MAAM,MAAM,GAAG,iBAAiB,CAAC,gCAAgC,CAAC,YAAY,CAAC,CAAC;QAChF,OAAO,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IACrC,CAAC;IAEM,MAAM,CAAC,WAAW,CAAC,SAAiB;QACvC,OAAO,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;IACnC,CAAC;CACJ;AA9CD,8CA8CC","sourcesContent":["\r\nexport class ClientShardHelper {\r\n    public static toShardName(database: string, shardNumber: number): string {\r\n        if (ClientShardHelper.isShardName(database)) {\r\n            throw new Error(\"Expected a non shard name but got \" + database);\r\n        }\r\n\r\n        if (shardNumber < 0) {\r\n            throw new Error(\"Shard number must be non-negative\");\r\n        }\r\n\r\n        return database + \"$\" + shardNumber;\r\n    }\r\n\r\n    public static toDatabaseName(shardName: string): string {\r\n        const shardNumberPosition = shardName.indexOf(\"$\");\r\n        if (shardNumberPosition === -1) {\r\n            return shardName;\r\n        }\r\n\r\n        return shardName.substring(0, shardNumberPosition);\r\n    }\r\n\r\n    public static tryGetShardNumberAndDatabaseName(databaseName: string): [string, number] | null {\r\n        const index = databaseName.indexOf(\"$\");\r\n        let shardNumber = -1;\r\n        let shardedDatabaseName: string;\r\n\r\n        if (index !== -1) {\r\n            const slice = databaseName.substring(index + 1);\r\n            shardedDatabaseName = databaseName.substring(0, index);\r\n            shardNumber = parseInt(slice, 10);\r\n\r\n            return [shardedDatabaseName, shardNumber];\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    public static getShardNumberFromDatabaseName(databaseName: string): number {\r\n        const result = ClientShardHelper.tryGetShardNumberAndDatabaseName(databaseName);\r\n        return result ? result[1] : null;\r\n    }\r\n\r\n    public static isShardName(shardName: string): boolean {\r\n        return shardName.includes(\"$\");\r\n    }\r\n}\r\n"]}