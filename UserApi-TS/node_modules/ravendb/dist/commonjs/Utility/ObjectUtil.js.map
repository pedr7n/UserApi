{"version":3,"file":"ObjectUtil.js","sourceRoot":"","sources":["../../../src/Utility/ObjectUtil.ts"],"names":[],"mappings":"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","sourcesContent":["import { TypeUtil } from \"./TypeUtil.js\";\r\nimport { DocumentConventions } from \"../Documents/Conventions/DocumentConventions.js\";\r\nimport { CONSTANTS } from \"../Constants.js\";\r\nimport { MetadataObject } from \"../Documents/Session/MetadataObject.js\";\r\nimport { CompareExchangeResultItem } from \"../Documents/Operations/CompareExchange/CompareExchangeValueResultParser.js\";\r\nimport { ServerCasing, ServerResponse } from \"../Types/index.js\";\r\nimport { TimeSeriesRangeResult } from \"../Documents/Operations/TimeSeries/TimeSeriesRangeResult.js\";\r\nimport { TimeSeriesEntry } from \"../Documents/Session/TimeSeries/TimeSeriesEntry.js\";\r\nimport { CounterDetail } from \"../Documents/Operations/Counters/CounterDetail.js\";\r\nimport { AttachmentDetails } from \"../Documents/Attachments/index.js\";\r\n\r\nfunction iden(x, locale) {\r\n    return x;\r\n}\r\n\r\nexport class ObjectUtil {\r\n\r\n    // WARNING: some methods are assigned below dynamically\r\n\r\n    static camelCase = (input: string, locale?: string) => locale ? input[0].toLocaleUpperCase(locale)  + input.slice(1) : input[0].toLowerCase() + input.slice(1);\r\n    static camel = ObjectUtil.camelCase;\r\n    static pascalCase = (input: string, locale?: string) => locale ? input[0].toLocaleLowerCase(locale) + input.slice(1) : input[0].toUpperCase() + input.slice(1);\r\n    static pascal = ObjectUtil.pascalCase;\r\n\r\n\r\n    /**\r\n     * @deprecated Use deepJsonClone or deepLiteralClone for better performance\r\n     * @param o Object to clone\r\n     */\r\n    public static clone(o) {\r\n        // eslint-disable-next-line unicorn/prefer-structured-clone\r\n        return JSON.parse(JSON.stringify(o));\r\n    }\r\n\r\n    public static deepJsonClone(o) {\r\n        // eslint-disable-next-line unicorn/prefer-structured-clone\r\n        return JSON.parse(JSON.stringify(o));\r\n    }\r\n\r\n    public static deepLiteralClone(item) {\r\n        if (!item) {\r\n            return item;\r\n        }\r\n\r\n        let result;\r\n\r\n        if (Array.isArray(item)) {\r\n            result = [];\r\n            for (let index = 0; index < item.length; index++) {\r\n                result[index] = ObjectUtil.deepLiteralClone(item[index]);\r\n            }\r\n        } else if (TypeUtil.isObject(item)) {\r\n            result = {};\r\n            for (const prop in item) {\r\n                result[prop] = ObjectUtil.deepLiteralClone(item[prop]);\r\n            }\r\n        } else {\r\n            result = item;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    public static mapToLiteral<TValue>(input: Map<string, TValue>): { [key: string]: TValue };\r\n    public static mapToLiteral<TValue, TResult>(\r\n        input: Map<string, TValue>,\r\n        valueTransformFunc: (value: string, key: TValue) => TResult): { [key: string]: TResult };\r\n    public static mapToLiteral<TValue, TResult>(\r\n        input: Map<string, TValue>,\r\n        valueTransformFunc?: (value: string, key: TValue) => TResult)\r\n        : { [key: string]: TResult } {\r\n        return Array.from(input.entries())\r\n            .reduce((obj, [key, value]) => (\r\n                Object.assign(obj, {\r\n                    [key]: valueTransformFunc\r\n                        ? valueTransformFunc(key, value)\r\n                        : value\r\n                })\r\n            ), {});\r\n    }\r\n\r\n    public static transformObjectKeys(\r\n        obj: object, opts?: ObjectChangeCaseOptions): object {\r\n        const options: any = setDefaults(opts, DEFAULT_CHANGE_CASE_OPTIONS);\r\n        return transformObjectKeys(obj, options, []);\r\n    }\r\n\r\n    public static transformDocumentKeys(obj: any, conventions: DocumentConventions) {\r\n        if (!obj) {\r\n            return obj;\r\n        }\r\n        const metadata = obj[CONSTANTS.Documents.Metadata.KEY];\r\n        const hasMetadata = CONSTANTS.Documents.Metadata.KEY in obj;\r\n        const transformedMetadata = hasMetadata ? ObjectUtil.transformMetadataKeys(metadata, conventions) : null;\r\n\r\n        if (!conventions.serverToLocalFieldNameConverter) {\r\n            // fast path - no need to transform entity - transform metadata only\r\n            if (hasMetadata) {\r\n                return {\r\n                    ...obj,\r\n                    [CONSTANTS.Documents.Metadata.KEY]: transformedMetadata\r\n                };\r\n            } else {\r\n                return obj;\r\n            }\r\n        }\r\n\r\n        const transformed = ObjectUtil.transformObjectKeys(obj, {\r\n            defaultTransform: conventions.serverToLocalFieldNameConverter\r\n        });\r\n\r\n        if (hasMetadata) {\r\n            transformed[CONSTANTS.Documents.Metadata.KEY] = transformedMetadata;\r\n        }\r\n\r\n        return transformed;\r\n    }\r\n\r\n    public static transformMetadataKeys(metadata: MetadataObject, conventions: DocumentConventions) {\r\n        if (!metadata) {\r\n            return metadata;\r\n        }\r\n\r\n        let result: MetadataObject = {};\r\n\r\n        const userMetadataFieldsToTransform: any = {};\r\n        const needsCaseTransformation = !!conventions.serverToLocalFieldNameConverter;\r\n\r\n        for (const [key, value] of Object.entries(metadata)) {\r\n            if (key === CONSTANTS.Documents.Metadata.ATTACHMENTS) {\r\n                result[CONSTANTS.Documents.Metadata.ATTACHMENTS] = value ? value.map(x => ObjectUtil.mapAttachmentDetailsToLocalObject(x)) : null\r\n            } else if (key[0] === \"@\" || key === \"Raven-Node-Type\") {\r\n                result[key] = value;\r\n            } else {\r\n                if (needsCaseTransformation) {\r\n                    userMetadataFieldsToTransform[key] = value;\r\n                } else {\r\n                    result[key] = value;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (Object.keys(userMetadataFieldsToTransform)) {\r\n            const transformedUserFields = ObjectUtil.transformObjectKeys(userMetadataFieldsToTransform, {\r\n                defaultTransform: conventions.serverToLocalFieldNameConverter\r\n            });\r\n\r\n            result = Object.assign(result, transformedUserFields);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    public static mapAttachmentDetailsToLocalObject(json: any): AttachmentDetails {\r\n        return {\r\n            changeVector: json.ChangeVector,\r\n            contentType: json.ContentType,\r\n            documentId: json.DocumentId,\r\n            hash: json.Hash,\r\n            name: json.Name,\r\n            size: json.Size\r\n        };\r\n    }\r\n\r\n    public static mapIncludesToLocalObject(json: any, conventions: DocumentConventions) {\r\n        const mappedIncludes: Record<string, any> = {};\r\n        if (json) {\r\n            for (const [key, value] of Object.entries(json)) {\r\n                mappedIncludes[key] = ObjectUtil.transformDocumentKeys(value, conventions);\r\n            }\r\n        }\r\n        return mappedIncludes;\r\n    }\r\n\r\n    public static mapCompareExchangeToLocalObject(json: Record<string, any>) {\r\n        if (!json) {\r\n            return undefined;\r\n        }\r\n\r\n        const result: Record<string, CompareExchangeResultItem> = {};\r\n\r\n        for (const [key, value] of Object.entries(json)) {\r\n            result[key] = {\r\n                index: value.Index,\r\n                key: value.Key,\r\n                changeVector: value.ChangeVector,\r\n                value: {\r\n                    Object: value.Value?.Object\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    public static mapTimeSeriesIncludesToLocalObject(json: ServerCasing<ServerResponse<TimeSeriesRangeResult>>) {\r\n        if (!json) {\r\n            return undefined;\r\n        }\r\n\r\n        const result: Record<string, Record<string, ServerResponse<TimeSeriesRangeResult>[]>> = {};\r\n\r\n        for (const [docId, perDocumentTimeSeries] of Object.entries(json)) {\r\n            const perDocumentResult: Record<string, ServerResponse<TimeSeriesRangeResult>[]> = {};\r\n\r\n            for (const [tsName, tsData] of Object.entries(perDocumentTimeSeries)) {\r\n                perDocumentResult[tsName] = (tsData as any).map(ts => {\r\n                    return {\r\n                        from: ts.From,\r\n                        to: ts.To,\r\n                        includes: ts.Includes,\r\n                        totalResults: ts.TotalResults,\r\n                        entries: ts.Entries.map(entry => ({\r\n                            timestamp: entry.Timestamp,\r\n                            isRollup: entry.IsRollup,\r\n                            tag: entry.Tag,\r\n                            values: entry.Values,\r\n                        } as ServerResponse<TimeSeriesEntry>))\r\n                    };\r\n                })\r\n            }\r\n\r\n            result[docId] = perDocumentResult;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    public static mapCounterIncludesToLocalObject(json: object) {\r\n        const result: Record<string, CounterDetail[]> = json ? {} : undefined;\r\n\r\n        if (json) {\r\n            for (const [key, value] of Object.entries(json)) {\r\n                result[key] = value.map(c => {\r\n                    return c ? {\r\n                        changeVector: c.ChangeVector,\r\n                        counterName: c.CounterName,\r\n                        counterValues: c.CounterValues,\r\n                        documentId: c.DocumentId,\r\n                        etag: c.Etag,\r\n                        totalValue: c.TotalValue\r\n                    } : null;\r\n                });\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    public static isEmpty(object: Record<string, unknown>) {\r\n        return Object.keys(object ?? {}).length === 0;\r\n    }\r\n}\r\n\r\n/*\r\n    This code is a modified version of https://github.com/claudetech/js-change-object-case\r\n*/\r\n\r\n//TODO: review those methods\r\n\r\nexport type FieldNameConversion = (fieldName: string) => string;\r\n\r\nexport interface ObjectChangeCaseOptionsBase {\r\n    recursive?: boolean;\r\n    arrayRecursive?: boolean;\r\n    ignoreKeys?: (string | RegExp)[];\r\n    ignorePaths?: (string | RegExp)[];\r\n    paths?: { transform: FieldNameConversion, path?: RegExp }[];\r\n}\r\n\r\nexport interface ObjectChangeCaseOptions extends ObjectChangeCaseOptionsBase {\r\n    defaultTransform: FieldNameConversion;\r\n}\r\n\r\ninterface InternalObjectChangeCaseOptions extends ObjectChangeCaseOptions {\r\n    throwOnDuplicate: boolean;\r\n    locale: string;\r\n}\r\n\r\nconst DEFAULT_CHANGE_CASE_OPTIONS = {\r\n    recursive: true,\r\n    arrayRecursive: true,\r\n    throwOnDuplicate: false,\r\n    locale: null,\r\n    ignoreKeys: [],\r\n    ignorePaths: [],\r\n};\r\n\r\nfunction setDefaults(object, defaults) {\r\n    object = object || {};\r\n    for (const i in defaults) {\r\n        // eslint-disable-next-line no-prototype-builtins\r\n        if (defaults.hasOwnProperty(i) && typeof object[i] === \"undefined\") {\r\n            object[i] = defaults[i];\r\n        }\r\n    }\r\n    return object;\r\n}\r\n\r\nfunction isObject(value: any) {\r\n    if (!value) {\r\n        return false;\r\n    }\r\n    return typeof value === \"object\" || typeof value === \"function\";\r\n}\r\n\r\nfunction isArray(value: any): value is Array<any> {\r\n    return Array.isArray(value);\r\n}\r\n\r\nfunction computeNewValue(value, options, forceRecurse: boolean, stack: string[]) {\r\n    const valueIsArray = isArray(value);\r\n    if (valueIsArray && options.arrayRecursive) {\r\n        return transformArray(value, options, stack);\r\n    } else if (isObject(value) && !valueIsArray && (options.recursive || forceRecurse)) {\r\n        return transformObjectKeys(value, options, stack);\r\n    } else {\r\n        return value;\r\n    }\r\n}\r\n\r\nfunction transformArray(array: any[], options: ObjectChangeCaseOptions, stack) {\r\n    if (!isArray(array)) {\r\n        throw new Error(\"transformArray expects an array\");\r\n    }\r\n    const result = [];\r\n    stack = [...stack, \"[]\"];\r\n\r\n    for (const value of array) {\r\n        const newValue = computeNewValue(value, options, true, stack);\r\n        result.push(newValue);\r\n    }\r\n    stack.pop();\r\n    return result;\r\n}\r\n\r\nfunction makeKeyPath(keyStack: string[]) {\r\n    return keyStack.join(\".\");\r\n}\r\n\r\nfunction shouldTransformKey(currentKey: string, currentPath: string, opts) {\r\n    for (const x of opts.ignoreKeys) {\r\n        if (\"test\" in x ? x.test(currentKey) : x === currentKey) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    if (opts.ignorePaths) {\r\n        const currentPathPlusKey = currentPath ? currentPath + \".\" + currentKey : currentKey;\r\n\r\n        for (const x of opts.ignorePaths) {\r\n            if (\"test\" in x ? x.test(currentPathPlusKey) : x === currentPathPlusKey) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nfunction getTransformFunc(key, currentPath, opts: InternalObjectChangeCaseOptions) {\r\n    if (opts.paths) {\r\n        for (const p of opts.paths) {\r\n            if (!p.path) {\r\n                return p.transform;\r\n            } else if (p.path.test(currentPath)) {\r\n                return p.transform ?? iden;\r\n            }\r\n        }\r\n    }\r\n\r\n    return opts.defaultTransform ?? iden;\r\n}\r\n\r\nfunction transformObjectKeys(object: any, options: InternalObjectChangeCaseOptions, stack: string[]) {\r\n    if (!object) {\r\n        return object;\r\n    }\r\n\r\n    const result = {};\r\n    for (const key in object) {\r\n        // eslint-disable-next-line no-prototype-builtins\r\n        if (object.hasOwnProperty(key)) {\r\n            const value = object[key];\r\n            let newKey = key;\r\n            const currentPath = makeKeyPath(stack);\r\n            if (shouldTransformKey(key, currentPath, options)) {\r\n                const f = getTransformFunc(key, currentPath, options);\r\n                newKey = f(key, options.locale ?? undefined);\r\n            }\r\n\r\n            // eslint-disable-next-line no-prototype-builtins\r\n            if (result.hasOwnProperty(newKey) && options.throwOnDuplicate) {\r\n                throw new Error(\"duplicated key \" + newKey);\r\n            }\r\n\r\n            stack = [...stack, newKey];\r\n            result[newKey] = computeNewValue(value, options, false, stack);\r\n            stack.pop();\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\n"]}