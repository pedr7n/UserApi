{"version":3,"file":"HttpCache.js","sourceRoot":"","sources":["../../../src/Http/HttpCache.ts"],"names":[],"mappings":"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","sourcesContent":["import { safeMemoryCache } from \"safe-memory-cache\";\r\nimport { IDisposable } from \"../Types/Contracts.js\";\r\n\r\nexport interface CachedItemMetadata {\r\n    changeVector: string;\r\n    response: string;\r\n}\r\n\r\nconst NOT_FOUND_RESPONSE = \"404 Response\";\r\n\r\nexport class HttpCache implements IDisposable {\r\n\r\n    private _items: safeMemoryCache;\r\n\r\n    constructor(maxKeysSize: number = 500) {\r\n        this._items = safeMemoryCache({\r\n            limit: maxKeysSize\r\n        });\r\n    }\r\n\r\n    public dispose(): void {\r\n        this._items.clear();\r\n        this._items = null;\r\n    }\r\n\r\n    public clear() {\r\n        this._items.clear();\r\n    }\r\n\r\n    public set(url: string, changeVector: string, result: string) {\r\n        const httpCacheItem = new HttpCacheItem();\r\n        httpCacheItem.changeVector = changeVector;\r\n        httpCacheItem.payload = result;\r\n        httpCacheItem.cache = this;\r\n\r\n        this._items.set(url, httpCacheItem);\r\n    }\r\n\r\n    public get<TResult>(\r\n        url: string,\r\n        itemInfoCallback?: ({ changeVector, response }: CachedItemMetadata) => void): ReleaseCacheItem {\r\n        const item: HttpCacheItem = this._items.get(url);\r\n        if (item) {\r\n            if (itemInfoCallback) {\r\n                itemInfoCallback({\r\n                    changeVector: item.changeVector,\r\n                    response: item.payload\r\n                });\r\n            }\r\n\r\n            return new ReleaseCacheItem(item);\r\n        }\r\n\r\n        if (itemInfoCallback) {\r\n            itemInfoCallback({\r\n                changeVector: null,\r\n                response: null\r\n            });\r\n        }\r\n\r\n        return new ReleaseCacheItem(null);\r\n    }\r\n\r\n    public setNotFound(url: string) {\r\n        const httpCacheItem = new HttpCacheItem();\r\n        httpCacheItem.changeVector = NOT_FOUND_RESPONSE;\r\n        httpCacheItem.cache = this;\r\n\r\n        this._items.set(url, httpCacheItem);\r\n    }\r\n\r\n    public get numberOfItems(): number {\r\n        return this._items[\"_get_buckets\"]().reduce((result, next: Map<string, string>) => {\r\n            return result + next.size;\r\n        }, 0);\r\n    }\r\n\r\n    public getMightHaveBeenModified(): boolean {\r\n        return false; // TBD\r\n    }\r\n}\r\n\r\nexport class ReleaseCacheItem {\r\n    public item: HttpCacheItem;\r\n\r\n    constructor(item: HttpCacheItem) {\r\n        this.item = item;\r\n    }\r\n\r\n    public notModified(): void {\r\n        if (this.item) {\r\n            this.item.lastServerUpdate = new Date();\r\n        }\r\n    }\r\n\r\n    // returns millis\r\n    public get age(): number {\r\n        if (!this.item) {\r\n            return Number.MAX_VALUE;\r\n        }\r\n\r\n        return Date.now() - this.item.lastServerUpdate.valueOf();\r\n    }\r\n\r\n    public get mightHaveBeenModified() {\r\n        return false; // TBD\r\n    }\r\n}\r\n\r\nexport class HttpCacheItem {\r\n    public changeVector: string;\r\n    public payload: string;\r\n    public lastServerUpdate: Date;\r\n    public flags: ItemFlags;\r\n\r\n    public cache: HttpCache;\r\n\r\n    public constructor() {\r\n        this.lastServerUpdate = new Date();\r\n    }\r\n}\r\n\r\nexport type ItemFlags =\r\n    \"None\"\r\n    | \"NotFound\";"]}