{"version":3,"file":"AbstractCommandResponseBehavior.js","sourceRoot":"","sources":["../../../../src/Http/Behaviors/AbstractCommandResponseBehavior.ts"],"names":[],"mappings":";;;AAIA,MAAsB,+BAA+B;CAQpD;AARD,0EAQC","sourcesContent":["import { RavenCommand } from \"../RavenCommand.js\";\r\nimport { HttpResponse } from \"../../Primitives/Http.js\";\r\n\r\n\r\nexport abstract class AbstractCommandResponseBehavior {\r\n    public abstract handleNotModified<TResult>(command: RavenCommand<TResult>, response: Response, cachedValue: string): Promise<void>;\r\n\r\n    public abstract tryHandleNotFound<TResult>(command: RavenCommand<TResult>, response: Response): Promise<boolean>;\r\n\r\n    public abstract tryHandleConflict<TResult>(response: HttpResponse, body: string): boolean;\r\n\r\n    public abstract tryHandleUnsuccessfulResponse<TResult>(command: RavenCommand<TResult>, response: Response, body: string): boolean;\r\n}\r\n"]}