{"version":3,"file":"CollectResultStream.js","sourceRoot":"","sources":["../../../../../src/Mapping/Json/Streams/CollectResultStream.ts"],"names":[],"mappings":";;;AAAA,6CAAuC;AAEvC,MAAa,mBAAsC,SAAQ,sBAAQ;IAEvD,OAAO,CAAU;IACR,cAAc,CAAmB;IAElD,IAAI,OAAO;QACP,OAAO,IAAI,CAAC,cAAkC,CAAC;IACnD,CAAC;IAED;QACI,KAAK,CAAC,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC;QAE5B,IAAI,CAAC,cAAc,GAAG,IAAI,OAAO,CAAU,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YAC3D,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;QACrD,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,MAAM,CAAC,KAAK,EAAE,GAAG,EAAE,QAAQ;QAC9B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,QAAQ,EAAE,CAAC;IACf,CAAC;CACJ;AArBD,kDAqBC","sourcesContent":["import { Writable } from \"node:stream\";\r\n\r\nexport class CollectResultStream<TResult = object> extends Writable {\r\n\r\n    private _result: TResult;\r\n    private readonly _resultPromise: Promise<TResult>;\r\n\r\n    get promise(): Promise<TResult> {\r\n        return this._resultPromise as Promise<TResult>;\r\n    }\r\n\r\n    constructor() {\r\n        super({ objectMode: true });\r\n\r\n        this._resultPromise = new Promise<TResult>((resolve, reject) => {\r\n            this.once(\"finish\", () => resolve(this._result));\r\n        });\r\n    }\r\n    \r\n    public _write(chunk, enc, callback) {\r\n        this._result = chunk;\r\n        callback();\r\n    }\r\n}\r\n"]}