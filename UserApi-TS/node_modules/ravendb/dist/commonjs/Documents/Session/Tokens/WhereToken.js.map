{"version":3,"file":"WhereToken.js","sourceRoot":"","sources":["../../../../../src/Documents/Session/Tokens/WhereToken.ts"],"names":[],"mappings":"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","sourcesContent":["import { ShapeToken } from \"./ShapeToken.js\";\r\nimport { QueryToken } from \"./QueryToken.js\";\r\nimport { SearchOperator } from \"../../Queries/SearchOperator.js\";\r\nimport { throwError } from \"../../../Exceptions/index.js\";\r\nimport { TypeUtil } from \"../../../Utility/TypeUtil.js\";\r\nimport { WhereOperator } from \"./WhereOperator.js\";\r\nimport { CONSTANTS } from \"../../../Constants.js\";\r\nimport { IVectorOptions } from \"../../Queries/VectorSearch/VectorSearchOptions.js\";\r\n\r\nexport type MethodsType = \"CmpXchg\";\r\n\r\nexport class WhereMethodCall {\r\n    public methodType: MethodsType;\r\n    public parameters: string[];\r\n    public property: string;\r\n}\r\n\r\nexport interface WhereOptionsShapeRelatedParameters {\r\n    shape: ShapeToken;\r\n    distance: number;\r\n}\r\n\r\nexport interface WhereOptionsSearchRelatedParameters {\r\n    search: SearchOperator;\r\n}\r\n\r\nexport interface WhereOptionsExactFromToRelatedParameters {\r\n    exact: boolean;\r\n    from?: string;\r\n    to?: string;\r\n}\r\n\r\nexport interface WhereOptionsMethodTypeRelatedParameters {\r\n    methodType: MethodsType;\r\n    parameters: string[];\r\n    property: string;\r\n    exact: boolean;\r\n}\r\n\r\nexport interface WhereOptionsVectorSearchRelatedParameters {\r\n    vectorSearch: IVectorOptions;\r\n}\r\n\r\nexport type WhereOptionsParameters =\r\n    WhereOptionsShapeRelatedParameters\r\n    | WhereOptionsExactFromToRelatedParameters\r\n    | WhereOptionsMethodTypeRelatedParameters\r\n    | WhereOptionsSearchRelatedParameters\r\n    | WhereOptionsVectorSearchRelatedParameters;\r\n\r\nexport class WhereOptions {\r\n    public searchOperator: SearchOperator;\r\n    public fromParameterName: string;\r\n    public toParameterName: string;\r\n    public boost: number;\r\n    public fuzzy: number;\r\n    public proximity: number;\r\n    public exact: boolean;\r\n    public method: WhereMethodCall;\r\n    public whereShape: ShapeToken;\r\n    public distanceErrorPct: number;\r\n    public vectorSearch: IVectorOptions;\r\n\r\n    public static defaultOptions() {\r\n        return new WhereOptions();\r\n    }\r\n\r\n    public constructor(parameters?: WhereOptionsParameters) {\r\n        parameters = parameters || {} as WhereOptionsParameters;\r\n        if (parameters[\"methodType\"]) {\r\n            const p = parameters as WhereOptionsMethodTypeRelatedParameters;\r\n            if (TypeUtil.isNullOrUndefined(p.exact)) {\r\n                p.exact = false;\r\n            }\r\n\r\n            this.method = new WhereMethodCall();\r\n            this.method.methodType = p.methodType;\r\n            this.method.parameters = p.parameters;\r\n            this.method.property = p.property;\r\n\r\n            this.exact = p.exact;\r\n        } else if (parameters[\"shape\"]) {\r\n            const p = parameters as WhereOptionsShapeRelatedParameters;\r\n            this.whereShape = p.shape;\r\n            this.distanceErrorPct = p.distance;\r\n        }  else if (parameters[\"vectorSearch\"]) {\r\n            const vectorSearchParameters = parameters[\"vectorSearch\"] as IVectorOptions;\r\n            this.vectorSearch = vectorSearchParameters;\r\n            this.exact = vectorSearchParameters.isExact ?? false;\r\n        } else if (!TypeUtil.isNullOrUndefined(parameters[\"exact\"])\r\n            && !parameters[\"methodType\"]) {\r\n            const p = parameters as WhereOptionsExactFromToRelatedParameters;\r\n            this.exact = p.exact;\r\n            this.fromParameterName = p.from;\r\n            this.toParameterName = p.to;\r\n        } else if (parameters[\"search\"]) {\r\n            this.searchOperator = parameters[\"search\"] as SearchOperator;\r\n        }\r\n    }\r\n}\r\n\r\nexport class WhereToken extends QueryToken {\r\n\r\n    protected constructor() {\r\n        super();\r\n    }\r\n\r\n    public fieldName: string;\r\n    public whereOperator: WhereOperator;\r\n    public parameterName: string;\r\n    public options: WhereOptions;\r\n\r\n    public static create(op: WhereOperator, fieldName: string, parameterName: string): WhereToken;\r\n    public static create(\r\n        op: WhereOperator, fieldName: string, parameterName: string, options: WhereOptions): WhereToken;\r\n    public static create(\r\n        op: WhereOperator, fieldName: string, parameterName: string, options: WhereOptions = null): WhereToken {\r\n        const token = new WhereToken();\r\n        token.fieldName = fieldName;\r\n        token.parameterName = parameterName;\r\n        token.whereOperator = op;\r\n        token.options = options || WhereOptions.defaultOptions();\r\n        return token;\r\n    }\r\n\r\n    public addAlias(alias: string): WhereToken {\r\n        if (CONSTANTS.Documents.Indexing.Fields.DOCUMENT_ID_FIELD_NAME === this.fieldName) {\r\n            return this;\r\n        }\r\n\r\n        this.fieldName = alias + \".\" + this.fieldName;\r\n\r\n        const whereToken = new WhereToken();\r\n        whereToken.fieldName = alias + \".\" + this.fieldName;\r\n        whereToken.parameterName = this.parameterName;\r\n        whereToken.whereOperator = this.whereOperator;\r\n        whereToken.options = this.options;\r\n\r\n        return whereToken;\r\n    }\r\n\r\n    private _writeMethod(writer): boolean {\r\n        if (this.options.method) {\r\n            switch (this.options.method.methodType) {\r\n                case \"CmpXchg\": {\r\n                    writer.append(\"cmpxchg(\");\r\n                    break;\r\n                }\r\n                default: {\r\n                    throwError(\"InvalidArgumentException\",\r\n                        \"Unsupported method: \" + this.options.method.methodType);\r\n                }\r\n            }\r\n\r\n            let first: boolean = true;\r\n            for (const parameter of this.options.method.parameters) {\r\n                if (!first) {\r\n                    writer.append(\",\");\r\n                }\r\n                first = false;\r\n                writer.append(\"$\");\r\n                writer.append(parameter);\r\n            }\r\n            writer.append(\")\");\r\n\r\n            if (this.options.method.property) {\r\n                writer.append(\".\")\r\n                    .append(this.options.method.property);\r\n            }\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public writeTo(writer): void {\r\n        if (this.options.boost != null) {\r\n            writer.append(\"boost(\");\r\n        }\r\n\r\n        if (this.options.fuzzy != null) {\r\n            writer.append(\"fuzzy(\");\r\n        }\r\n\r\n        if (this.options.proximity != null) {\r\n            writer.append(\"proximity(\");\r\n        }\r\n\r\n        if (this.options.exact) {\r\n            writer.append(\"exact(\");\r\n        }\r\n\r\n        switch (this.whereOperator) {\r\n            case \"Search\": {\r\n                writer.append(\"search(\");\r\n                break;\r\n            }\r\n            case \"Lucene\": {\r\n                writer.append(\"lucene(\");\r\n                break;\r\n            }\r\n            case \"StartsWith\": {\r\n                writer.append(\"startsWith(\");\r\n                break;\r\n            }\r\n            case \"EndsWith\": {\r\n                writer.append(\"endsWith(\");\r\n                break;\r\n            }\r\n            case \"Exists\": {\r\n                writer.append(\"exists(\");\r\n                break;\r\n            }\r\n            case \"SpatialWithin\": {\r\n                writer.append(\"spatial.within(\");\r\n                break;\r\n            }\r\n            case \"SpatialContains\": {\r\n                writer.append(\"spatial.contains(\");\r\n                break;\r\n            }\r\n            case \"SpatialDisjoint\": {\r\n                writer.append(\"spatial.disjoint(\");\r\n                break;\r\n            }\r\n            case \"SpatialIntersects\": {\r\n                writer.append(\"spatial.intersects(\");\r\n                break;\r\n            }\r\n            case \"Regex\": {\r\n                writer.append(\"regex(\");\r\n                break;\r\n            }\r\n            case \"VectorSearch\": {\r\n                writer.append(\"vector.search(\")\r\n                break;\r\n            }\r\n        }\r\n\r\n        this._writeInnerWhere(writer);\r\n\r\n        if (this.options.exact) {\r\n            writer.append(\")\");\r\n        }\r\n\r\n        if (this.options.proximity != null) {\r\n            writer\r\n                .append(\", \")\r\n                .append(this.options.proximity)\r\n                .append(\")\");\r\n        }\r\n\r\n        if (this.options.fuzzy != null) {\r\n            writer\r\n                .append(\", \")\r\n                .append(this.options.fuzzy)\r\n                .append(\")\");\r\n        }\r\n\r\n        if (this.options.boost != null) {\r\n            writer\r\n                .append(\", \")\r\n                .append(this.options.boost)\r\n                .append(\")\");\r\n        }\r\n    }\r\n\r\n    private _writeInnerWhere(writer): void {\r\n        QueryToken.writeField(writer, this.fieldName);\r\n\r\n        switch (this.whereOperator) {\r\n            case \"Equals\": {\r\n                writer.append(\" = \");\r\n                break;\r\n            }\r\n\r\n            case \"NotEquals\": {\r\n                writer.append(\" != \");\r\n                break;\r\n            }\r\n            case \"GreaterThan\": {\r\n                writer\r\n                    .append(\" > \");\r\n                break;\r\n            }\r\n            case \"GreaterThanOrEqual\": {\r\n                writer\r\n                    .append(\" >= \");\r\n                break;\r\n            }\r\n            case \"LessThan\": {\r\n                writer\r\n                    .append(\" < \");\r\n                break;\r\n            }\r\n            case \"LessThanOrEqual\": {\r\n                writer\r\n                    .append(\" <= \");\r\n                break;\r\n            }\r\n            default: {\r\n                this._specialOperator(writer);\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (!this._writeMethod(writer)) {\r\n            writer.append(\"$\").append(this.parameterName);\r\n        }\r\n    }\r\n\r\n    private _specialOperator(writer): void {\r\n        switch (this.whereOperator) {\r\n            case \"In\": {\r\n                writer\r\n                    .append(\" in ($\")\r\n                    .append(this.parameterName)\r\n                    .append(\")\");\r\n                break;\r\n            }\r\n            case \"AllIn\": {\r\n                writer\r\n                    .append(\" all in ($\")\r\n                    .append(this.parameterName)\r\n                    .append(\")\");\r\n                break;\r\n            }\r\n            case \"Between\": {\r\n                writer\r\n                    .append(\" between $\")\r\n                    .append(this.options.fromParameterName)\r\n                    .append(\" and $\")\r\n                    .append(this.options.toParameterName);\r\n                break;\r\n            }\r\n\r\n            case \"Search\": {\r\n                writer\r\n                    .append(\", $\")\r\n                    .append(this.parameterName);\r\n                if (this.options.searchOperator === \"AND\") {\r\n                    writer.append(\", and\");\r\n                }\r\n                writer.append(\")\");\r\n                break;\r\n            }\r\n            case \"Lucene\":\r\n            case \"StartsWith\":\r\n            case \"EndsWith\":\r\n            case \"Regex\": {\r\n                writer\r\n                    .append(\", $\")\r\n                    .append(this.parameterName)\r\n                    .append(\")\");\r\n                break;\r\n            }\r\n            case \"Exists\": {\r\n                writer\r\n                    .append(\")\");\r\n                break;\r\n            }\r\n            case \"SpatialWithin\":\r\n            case \"SpatialContains\":\r\n            case \"SpatialDisjoint\":\r\n            case \"SpatialIntersects\": {\r\n                writer\r\n                    .append(\", \");\r\n                this.options.whereShape.writeTo(writer);\r\n\r\n                if (Math.abs(this.options.distanceErrorPct - CONSTANTS.Documents.Indexing.Spatial.DEFAULT_DISTANCE_ERROR_PCT) > 1e-40) {\r\n                    writer.append(\", \");\r\n                    writer.append(this.options.distanceErrorPct);\r\n                }\r\n                writer\r\n                    .append(\")\");\r\n                break;\r\n            }\r\n            case \"VectorSearch\": {\r\n                const {vectorSearch} = this.options\r\n                writer.append(\", $\").append(this.parameterName);\r\n\r\n                writer.append(\", \").append(vectorSearch?.similarity ?? \"null\");\r\n                writer.append(\", \").append(vectorSearch?.numberOfCandidates ?? \"null\");\r\n\r\n                writer.append(\")\");\r\n                break;\r\n            }\r\n            default: {\r\n                throwError(\"InvalidArgumentException\");\r\n            }\r\n        }\r\n    }\r\n}\r\n"]}