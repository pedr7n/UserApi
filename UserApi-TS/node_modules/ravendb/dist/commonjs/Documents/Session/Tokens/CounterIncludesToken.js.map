{"version":3,"file":"CounterIncludesToken.js","sourceRoot":"","sources":["../../../../../src/Documents/Session/Tokens/CounterIncludesToken.ts"],"names":[],"mappings":";;;AAAA,mDAA6C;AAG7C,MAAa,oBAAqB,SAAQ,0BAAU;IACvC,WAAW,CAAS;IACZ,YAAY,CAAS;IACrB,IAAI,CAAU;IAE/B,YACI,UAAkB,EAAE,WAAmB,EAAE,GAAY;QACrD,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;QAChC,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;QAChB,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;IAClC,CAAC;IACO,MAAM,CAAC,MAAM,CAAC,UAAkB,EAAE,WAAmB;QACzD,OAAO,IAAI,oBAAoB,CAAC,UAAU,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;IACpE,CAAC;IACO,MAAM,CAAC,GAAG,CAAC,UAAkB;QACjC,OAAO,IAAI,oBAAoB,CAAC,UAAU,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IAC5D,CAAC;IACO,cAAc,CAAC,KAAa;QAChC,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAC9B,KAAK;YACL,CAAC,CAAC,KAAK,GAAG,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC;IAC7C,CAAC;IAEM,OAAO,CAAC,MAAqB;QAChC,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;QAC3B,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAChC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;gBACb,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YACxB,CAAC;QACL,CAAC;QAED,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;YACb,MAAM;iBACD,MAAM,CAAC,GAAG,CAAC;iBACX,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC;iBACzB,MAAM,CAAC,GAAG,CAAC,CAAC;QACrB,CAAC;QAED,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IACvB,CAAC;CACJ;AA1CD,oDA0CC","sourcesContent":["import { QueryToken } from \"./QueryToken.js\";\r\nimport { StringBuilder } from \"../../../Utility/StringBuilder.js\";\r\n\r\nexport class CounterIncludesToken extends QueryToken {\r\n     private _sourcePath: string;\r\n    private readonly _counterName: string;\r\n    private readonly _all: boolean;\r\n\r\n    private constructor(\r\n        sourcePath: string, counterName: string, all: boolean) {\r\n        super();\r\n        this._counterName = counterName;\r\n        this._all = all;\r\n        this._sourcePath = sourcePath;\r\n    }\r\n     public static create(sourcePath: string, counterName: string): CounterIncludesToken {\r\n        return new CounterIncludesToken(sourcePath, counterName, false);\r\n    }\r\n     public static all(sourcePath: string): CounterIncludesToken {\r\n        return new CounterIncludesToken(sourcePath, null, true);\r\n    }\r\n     public addAliasToPath(alias: string): void {\r\n        this._sourcePath = !this._sourcePath ?\r\n                alias\r\n                : alias + \".\" + this._sourcePath;\r\n    }\r\n\r\n    public writeTo(writer: StringBuilder): void {\r\n        writer.append(\"counters(\");\r\n        if (this._sourcePath) {\r\n            writer.append(this._sourcePath);\r\n            if (!this._all) {\r\n                writer.append(\", \");\r\n            }\r\n        }\r\n        \r\n        if (!this._all) {\r\n            writer\r\n                .append(\"'\")\r\n                .append(this._counterName)\r\n                .append(\"'\");\r\n        }\r\n\r\n        writer.append(\")\");\r\n    }\r\n}\r\n"]}