{"version":3,"file":"TimeSeriesIncludesToken.js","sourceRoot":"","sources":["../../../../../src/Documents/Session/Tokens/TimeSeriesIncludesToken.ts"],"names":[],"mappings":"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","sourcesContent":["import { QueryToken } from \"./QueryToken.js\";\r\nimport { TimeSeriesRange } from \"../../Operations/TimeSeries/TimeSeriesRange.js\";\r\nimport { StringUtil } from \"../../../Utility/StringUtil.js\";\r\nimport { DateUtil } from \"../../../Utility/DateUtil.js\";\r\nimport { StringBuilder } from \"../../../Utility/StringBuilder.js\";\r\nimport { AbstractTimeSeriesRange } from \"../../Operations/TimeSeries/AbstractTimeSeriesRange.js\";\r\nimport { TimeSeriesTimeRange } from \"../../Operations/TimeSeries/TimeSeriesTimeRange.js\";\r\nimport { throwError } from \"../../../Exceptions/index.js\";\r\nimport { TimeSeriesCountRange } from \"../../Operations/TimeSeries/TimeSeriesCountRange.js\";\r\n\r\nexport class TimeSeriesIncludesToken extends QueryToken {\r\n    private _sourcePath: string;\r\n    private readonly _range: AbstractTimeSeriesRange;\r\n\r\n    private constructor(sourcePath: string, range: AbstractTimeSeriesRange) {\r\n        super();\r\n\r\n        this._range = range;\r\n        this._sourcePath = sourcePath;\r\n    }\r\n\r\n    public static create(sourcePath: string, range: AbstractTimeSeriesRange) {\r\n        return new TimeSeriesIncludesToken(sourcePath, range);\r\n    }\r\n\r\n    public addAliasToPath(alias: string) {\r\n        this._sourcePath = StringUtil.isNullOrEmpty(this._sourcePath)\r\n            ? alias\r\n            : alias + \".\" + this._sourcePath;\r\n    }\r\n\r\n    writeTo(writer: StringBuilder) {\r\n        writer\r\n            .append(\"timeseries(\");\r\n\r\n        if (!StringUtil.isNullOrEmpty(this._sourcePath)) {\r\n            writer\r\n                .append(this._sourcePath)\r\n                .append(\", \");\r\n        }\r\n\r\n        if (!StringUtil.isNullOrEmpty(this._range.name)) {\r\n            writer\r\n                .append(\"'\")\r\n                .append(this._range.name)\r\n                .append(\"'\")\r\n                .append(\", \");\r\n        }\r\n\r\n        if (\"count\" in this._range) {\r\n            TimeSeriesIncludesToken._writeCountRangeTo(writer, this._range as TimeSeriesCountRange);\r\n        } else if (\"time\" in this._range) {\r\n            TimeSeriesIncludesToken._writeTimeRangeTo(writer, this._range as TimeSeriesTimeRange);\r\n        } else if (\"from\" in this._range && \"to\" in this._range) {\r\n            TimeSeriesIncludesToken._writeRangeTo(writer, this._range as TimeSeriesRange);\r\n        } else {\r\n            throwError(\"InvalidArgumentException\", \"Not supported time range type: \" + this._range);\r\n        }\r\n\r\n        writer\r\n            .append(\")\");\r\n    }\r\n\r\n    private static _writeTimeRangeTo(writer: StringBuilder, range: TimeSeriesTimeRange) {\r\n        switch (range.type) {\r\n            case \"Last\": {\r\n                writer\r\n                    .append(\"last(\");\r\n                break;\r\n            }\r\n            default: {\r\n                throwError(\"InvalidArgumentException\", \"Not supported time range type: \" + range.type);\r\n            }\r\n        }\r\n\r\n        writer\r\n            .append(range.time.value)\r\n            .append(\", '\")\r\n            .append(range.time.unit)\r\n            .append(\"')\");\r\n    }\r\n\r\n    private static _writeCountRangeTo(writer: StringBuilder, range: TimeSeriesCountRange) {\r\n        switch (range.type) {\r\n            case \"Last\": {\r\n                writer\r\n                    .append(\"last(\");\r\n                break;\r\n            }\r\n            default: {\r\n                throwError(\"InvalidArgumentException\", \"Not supported time range type: \" + range.type);\r\n            }\r\n        }\r\n\r\n        writer\r\n            .append(range.count)\r\n            .append(\")\");\r\n    }\r\n\r\n    private static _writeRangeTo(writer: StringBuilder, range: TimeSeriesRange) {\r\n        if (range.from) {\r\n            writer\r\n                .append(\"'\")\r\n                .append(DateUtil.utc.stringify(range.from))\r\n                .append(\"'\")\r\n                .append(\", \");\r\n        } else {\r\n            writer\r\n                .append(\"null,\");\r\n        }\r\n\r\n        if (range.to) {\r\n            writer\r\n                .append(\"'\")\r\n                .append(DateUtil.utc.stringify(range.to))\r\n                .append(\"'\");\r\n        } else {\r\n            writer\r\n                .append(\"null\");\r\n        }\r\n    }\r\n}\r\n"]}