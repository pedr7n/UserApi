{"version":3,"file":"QueryToken.js","sourceRoot":"","sources":["../../../../../src/Documents/Session/Tokens/QueryToken.ts"],"names":[],"mappings":";;;AAEA,MAAsB,UAAU;IAIrB,MAAM,CAAC,UAAU,CAAC,MAAqB,EAAE,KAAa;QACzD,MAAM,OAAO,GAAG,UAAU,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QAC5C,IAAI,OAAO,EAAE,CAAC;YACV,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QACvB,CAAC;QACD,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAErB,IAAI,OAAO,EAAE,CAAC;YACV,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QACvB,CAAC;IACL,CAAC;IAEM,MAAM,CAAC,SAAS,CAAC,KAAa;QACjC,OAAO,UAAU,CAAC,YAAY,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IAC9C,CAAC;IAEO,MAAM,CAAC,YAAY,GAAgB,IAAI,GAAG,CAAC;QAC/C,IAAI;QACJ,QAAQ;QACR,OAAO;QACP,MAAM;QACN,OAAO;QACP,OAAO;QACP,SAAS;QACT,QAAQ;KACX,CAAC,CAAC;;AA7BP,gCA8BC","sourcesContent":["import { StringBuilder } from \"../../../Utility/StringBuilder.js\";\r\n\r\nexport abstract class QueryToken {\r\n\r\n    public abstract writeTo(writer: StringBuilder);\r\n\r\n    public static writeField(writer: StringBuilder, field: string) {\r\n        const keyWord = QueryToken.isKeyword(field);\r\n        if (keyWord) {\r\n            writer.append(\"'\");\r\n        }\r\n        writer.append(field);\r\n\r\n        if (keyWord) {\r\n            writer.append(\"'\");\r\n        }\r\n    }\r\n\r\n    public static isKeyword(field: string): boolean {\r\n        return QueryToken.RQL_KEYWORDS.has(field);\r\n    }\r\n\r\n    private static RQL_KEYWORDS: Set<string> = new Set([\r\n        \"as\",\r\n        \"select\",\r\n        \"where\",\r\n        \"load\",\r\n        \"group\",\r\n        \"order\",\r\n        \"include\",\r\n        \"filter\"\r\n    ]);\r\n}\r\n"]}