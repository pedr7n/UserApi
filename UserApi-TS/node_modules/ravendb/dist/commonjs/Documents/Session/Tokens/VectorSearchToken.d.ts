import { WhereToken } from "./WhereToken.js";
import { VectorEmbeddingType } from "../../Queries/VectorSearch/VectorEmbeddingType.js";
import { StringBuilder } from "../../../Utility/StringBuilder.js";
import { IVectorEmbeddingFieldFactoryAccessor } from "../VectorFieldFactory.js";
export declare class VectorSearchToken extends WhereToken {
    static readonly EMBEDDING_PREFIX = "embedding.";
    static readonly EMBEDDING_FOR_DOCUMENT: string;
    static readonly EMBEDDING_FOR_RAW: string;
    static readonly EMBEDDING_TEXT: string;
    static readonly EMBEDDING_TEXT_INT8: string;
    static readonly EMBEDDING_TEXT_INT1: string;
    static readonly EMBEDDING_SINGLE: string;
    static readonly EMBEDDING_SINGLE_INT8: string;
    static readonly EMBEDDING_SINGLE_INT1: string;
    static readonly EMBEDDING_INT8: string;
    static readonly EMBEDDING_INT1: string;
    static readonly DEFAULT_EMBEDDING_TYPE: VectorEmbeddingType;
    static readonly DEFAULT_IS_EXACT = false;
    private static readonly AI_TASK_METHOD_NAME;
    private readonly _similarityThreshold;
    private readonly _sourceQuantizationType;
    private readonly _targetQuantizationType;
    private readonly _numberOfCandidatesForQuerying;
    private readonly _isDocumentId;
    private readonly _embeddingsGenerationTaskIdentifier;
    constructor(fieldName: string, parameterName: string, sourceQuantizationType: VectorEmbeddingType, targetQuantizationType: VectorEmbeddingType, similarityThreshold: number | null, numberOfCandidatesForQuerying: number | null, isExact: boolean, isDocumentId: boolean, embeddingsGenerationTaskIdentifier: string | null);
    static getTaskIdentifier<T>(fieldAccessor: IVectorEmbeddingFieldFactoryAccessor<T>): string | null;
    static getSourceQuantizationType<T>(fieldAccessor: IVectorEmbeddingFieldFactoryAccessor<T>): VectorEmbeddingType;
    static getTargetQuantizationType<T>(fieldAccessor: IVectorEmbeddingFieldFactoryAccessor<T>): VectorEmbeddingType;
    writeTo(writer: StringBuilder): void;
}
//# sourceMappingURL=VectorSearchToken.d.ts.map