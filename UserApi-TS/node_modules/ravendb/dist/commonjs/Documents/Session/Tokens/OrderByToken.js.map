{"version":3,"file":"OrderByToken.js","sourceRoot":"","sources":["../../../../../src/Documents/Session/Tokens/OrderByToken.ts"],"names":[],"mappings":"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","sourcesContent":["import { QueryToken } from \"./QueryToken.js\";\r\nimport { OrderingType } from \"../OrderingType.js\";\r\nimport { throwError } from \"../../../Exceptions/index.js\";\r\nimport { CONSTANTS } from \"../../../Constants.js\";\r\n\r\ntype OrderByTokenOptions = {\r\n    ordering?: OrderingType;\r\n    sorterName?: string;\r\n}\r\n\r\nexport class OrderByToken extends QueryToken {\r\n\r\n    private readonly _fieldName: string;\r\n    private readonly _descending: boolean;\r\n    private readonly _sorterName: string;\r\n    private readonly _ordering: OrderingType;\r\n    private readonly _isMethodField: boolean;\r\n\r\n    private constructor(fieldName: string, descending: boolean, options: OrderByTokenOptions, isMethodField: boolean) {\r\n        super();\r\n        this._fieldName = fieldName;\r\n        this._descending = descending;\r\n        this._ordering = options.ordering;\r\n        this._sorterName = options.sorterName;\r\n        this._isMethodField = isMethodField;\r\n    }\r\n\r\n    public static random: OrderByToken = new OrderByToken(\"random()\", false, { ordering: \"String\" }, true);\r\n\r\n    public static scoreAscending = new OrderByToken(\"score()\", false, { ordering: \"String\" }, true);\r\n\r\n    public static scoreDescending = new OrderByToken(\"score()\", true, { ordering: \"String\" }, true);\r\n\r\n    public static createDistanceAscending(\r\n        fieldName: string, latitudeParameterName: string, longitudeParameterName: string, roundFactorParameterName: string): OrderByToken;\r\n    public static createDistanceAscending(fieldName: string, shapeWktParameterName: string, roundFactorParameterName: string): OrderByToken;\r\n    public static createDistanceAscending(\r\n        fieldName: string, shapeWktOrLatitudeParameterName: string, longitudeParameterName?: string, roundFactorParameterName?: string): OrderByToken {\r\n        if (longitudeParameterName) {\r\n            return this._createDistanceAscendingLatLng(\r\n                fieldName, shapeWktOrLatitudeParameterName, longitudeParameterName, roundFactorParameterName);\r\n        } else {\r\n            return this._createDistanceAscendingWkt(fieldName, shapeWktOrLatitudeParameterName, roundFactorParameterName);\r\n        }\r\n    }\r\n\r\n    private static _createDistanceAscendingLatLng(\r\n        fieldName: string, latitudeParameterName: string, longitudeParameterName: string, roundFactorParameterName: string): OrderByToken {\r\n        return new OrderByToken(\r\n            \"spatial.distance(\" + fieldName +\r\n            \", spatial.point($\" + latitudeParameterName\r\n            + \", $\" + longitudeParameterName + \")\" + (roundFactorParameterName ? \", $\" + roundFactorParameterName : \"\") + \")\", false, { ordering: \"String\" }, true);\r\n    }\r\n\r\n    private static _createDistanceAscendingWkt(fieldName: string, shapeWktParameterName: string, roundFactorParameterName: string): OrderByToken {\r\n        return new OrderByToken(\r\n            \"spatial.distance(\" + fieldName\r\n            + \", spatial.wkt($\" + shapeWktParameterName + \")\" + (roundFactorParameterName ? \", $\" + roundFactorParameterName : \"\") + \")\", false, { ordering: \"String\" }, true);\r\n    }\r\n\r\n    private static _createDistanceDescendingLatLng(\r\n        fieldName: string, latitudeParameterName: string, longitudeParameterName: string, roundFactorParameterName: string): OrderByToken {\r\n        return new OrderByToken(\r\n            \"spatial.distance(\" + fieldName\r\n            + \", spatial.point($\" + latitudeParameterName\r\n            + \", $\" + longitudeParameterName + \")\" + (roundFactorParameterName ? \", $\" + roundFactorParameterName : \"\") + \")\", true, { ordering: \"String\" }, true);\r\n    }\r\n\r\n    private static _createDistanceDescendingWkt(fieldName: string, shapeWktParameterName: string, roundFactorParameterName: string): OrderByToken {\r\n        return new OrderByToken(\r\n            \"spatial.distance(\" + fieldName\r\n            + \", spatial.wkt($\" + shapeWktParameterName + \")\" + (roundFactorParameterName ? \", $\" + roundFactorParameterName : \"\") + \")\", true, { ordering: \"String\" }, true);\r\n    }\r\n\r\n    public static createDistanceDescending(\r\n        fieldName: string, latitudeParameterName: string, longitudeParameterName: string, roundFactorParameterName: string): OrderByToken;\r\n    public static createDistanceDescending(fieldName: string, shapeWktParameterName: string, roundFactorParameterName: string): OrderByToken;\r\n    public static createDistanceDescending(\r\n        fieldName: string, shapeWktOrLatitudeParameterName: string, longitudeParameterName?: string, roundFactorParameterName?: string): OrderByToken {\r\n        if (longitudeParameterName) {\r\n            return this._createDistanceDescendingLatLng(\r\n                fieldName, shapeWktOrLatitudeParameterName, longitudeParameterName, roundFactorParameterName);\r\n        } else {\r\n            return this._createDistanceDescendingWkt(fieldName, shapeWktOrLatitudeParameterName, roundFactorParameterName);\r\n        }\r\n    }\r\n\r\n    public static createRandom(seed: string): OrderByToken {\r\n        if (!seed) {\r\n            throwError(\"InvalidArgumentException\", \"seed cannot be null\");\r\n        }\r\n\r\n        return new OrderByToken(\"random('\" + seed.replace(/'/g, \"''\") + \"')\", false, { ordering: \"String\" }, true);\r\n    }\r\n\r\n    public static createAscending(fieldName: string, options: OrderByTokenOptions): OrderByToken {\r\n        return new OrderByToken(fieldName, false, options, false);\r\n    }\r\n\r\n    public static createDescending(fieldName: string, options: OrderByTokenOptions): OrderByToken {\r\n        return new OrderByToken(fieldName, true, options, false);\r\n    }\r\n\r\n    public writeTo(writer): void {\r\n        if (this._sorterName) {\r\n            writer\r\n                .append(\"custom(\")\r\n        }\r\n        QueryToken.writeField(writer, this._fieldName);\r\n\r\n        if (this._sorterName) {\r\n            writer\r\n                .append(\", '\")\r\n                .append(this._sorterName)\r\n                .append(\"')\");\r\n        } else {\r\n            switch (this._ordering) {\r\n                case \"Long\": {\r\n                    writer.append(\" as long\");\r\n                    break;\r\n                }\r\n                case \"Double\": {\r\n                    writer.append(\" as double\");\r\n                    break;\r\n                }\r\n                case \"AlphaNumeric\": {\r\n                    writer.append(\" as alphaNumeric\");\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this._descending) { // we only add this if we have to, ASC is the default and reads nicer\r\n            writer.append(\" desc\");\r\n        }\r\n    }\r\n\r\n    public addAlias(alias: string): OrderByToken {\r\n        if (CONSTANTS.Documents.Indexing.Fields.DOCUMENT_ID_FIELD_NAME === this._fieldName) {\r\n            return this;\r\n        }\r\n\r\n        if (this._isMethodField) { // we must not alias RQL methods\r\n            return this;\r\n        }\r\n\r\n        const aliasedName = alias + \".\" + this._fieldName;\r\n\r\n        if (this._sorterName) {\r\n            return new OrderByToken(aliasedName, this._descending, { sorterName: this._sorterName }, false);\r\n        } else {\r\n            return new OrderByToken(aliasedName, this._descending, { ordering: this._ordering }, false);\r\n        }\r\n    }\r\n}\r\n"]}