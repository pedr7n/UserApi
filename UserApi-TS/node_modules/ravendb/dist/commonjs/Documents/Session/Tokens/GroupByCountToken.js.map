{"version":3,"file":"GroupByCountToken.js","sourceRoot":"","sources":["../../../../../src/Documents/Session/Tokens/GroupByCountToken.ts"],"names":[],"mappings":";;;AAAA,mDAA6C;AAE7C,MAAa,iBAAkB,SAAQ,0BAAU;IAE5B,UAAU,CAAS;IAEpC,YAAoB,SAAiB;QACjC,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;IAChC,CAAC;IAEM,MAAM,CAAC,MAAM,CAAC,SAAiB;QAClC,OAAO,IAAI,iBAAiB,CAAC,SAAS,CAAC,CAAC;IAC5C,CAAC;IAEM,OAAO,CAAC,MAAM;QACjB,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QAEzB,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC;YACnB,OAAO;QACX,CAAC;QAED,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC;aAChB,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACjC,CAAC;CACJ;AAvBD,8CAuBC","sourcesContent":["import { QueryToken } from \"./QueryToken.js\";\r\n\r\nexport class GroupByCountToken extends QueryToken {\r\n\r\n    private readonly _fieldName: string;\r\n\r\n    private constructor(fieldName: string) {\r\n        super();\r\n        this._fieldName = fieldName;\r\n    }\r\n\r\n    public static create(fieldName: string): GroupByCountToken {\r\n        return new GroupByCountToken(fieldName);\r\n    }\r\n\r\n    public writeTo(writer): void {\r\n        writer.append(\"count()\");\r\n\r\n        if (!this._fieldName) {\r\n            return;\r\n        }\r\n\r\n        writer.append(\" as \")\r\n            .append(this._fieldName);\r\n    }\r\n}\r\n"]}