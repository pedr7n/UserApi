{"version":3,"file":"DocumentSessionAttachments.js","sourceRoot":"","sources":["../../../../src/Documents/Session/DocumentSessionAttachments.ts"],"names":[],"mappings":";;;AAAA,2FAAqF;AAGrF,mFAA6E;AAE7E,mGAA6F;AAE7F,MAAa,0BACT,SAAQ,kEAA8B;IAEtC,YAAmB,OAA0C;QACzD,KAAK,CAAC,OAAO,CAAC,CAAC;IACnB,CAAC;IAEM,KAAK,CAAC,MAAM,CAAC,UAAkB,EAAE,IAAY;QAChD,MAAM,OAAO,GAAG,IAAI,gDAAqB,CAAC,UAAU,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QAClE,IAAI,CAAC,QAAQ,CAAC,qBAAqB,EAAE,CAAC;QACtC,MAAM,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;QAChE,OAAO,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC;IAC5B,CAAC;IAIM,KAAK,CAAC,GAAG,CACZ,UAA2B,EAC3B,IAAY;QACZ,IAAI,KAAK,CAAC;QACV,IAAI,OAAO,UAAU,KAAK,QAAQ,EAAE,CAAC;YACjC,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YACjE,IAAI,CAAC,QAAQ,EAAE,CAAC;gBACZ,IAAI,CAAC,mCAAmC,CAAC,UAAU,CAAC,CAAC;YACzD,CAAC;YAED,KAAK,GAAG,QAAQ,CAAC,EAAE,CAAC;QACxB,CAAC;aAAM,CAAC;YACJ,KAAK,GAAG,UAAU,CAAC;QACvB,CAAC;QAED,MAAM,SAAS,GACX,IAAI,kDAAsB,CAAC,KAAK,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,CAAC,CAAC;QAC9D,IAAI,CAAC,QAAQ,CAAC,qBAAqB,EAAE,CAAC;QACtC,OAAO,MAAM,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;IAC7E,CAAC;IAEM,KAAK,CAAC,WAAW,CAAC,UAAkB,EAAE,IAAY,EAAE,YAAoB;QAC3E,MAAM,SAAS,GAAG,IAAI,kDAAsB,CAAC,UAAU,EAAE,IAAI,EAAE,UAAU,EAAE,YAAY,CAAC,CAAC;QACzF,IAAI,CAAC,QAAQ,CAAC,qBAAqB,EAAE,CAAC;QACtC,OAAO,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;IACvE,CAAC;CACJ;AA1CD,gEA0CC","sourcesContent":["import { DocumentSessionAttachmentsBase } from \"./DocumentSessionAttachmentsBase.js\";\r\nimport { IAttachmentsSessionOperations } from \"./IAttachmentsSessionOperations.js\";\r\nimport { InMemoryDocumentSessionOperations } from \"./InMemoryDocumentSessionOperations.js\";\r\nimport { HeadAttachmentCommand } from \"../Commands/HeadAttachmentCommand.js\";\r\nimport { AttachmentResult } from \"../Attachments/index.js\";\r\nimport { GetAttachmentOperation } from \"../Operations/Attachments/GetAttachmentOperation.js\";\r\n\r\nexport class DocumentSessionAttachments\r\n    extends DocumentSessionAttachmentsBase implements IAttachmentsSessionOperations {\r\n\r\n    public constructor(session: InMemoryDocumentSessionOperations) {\r\n        super(session);\r\n    }\r\n\r\n    public async exists(documentId: string, name: string): Promise<boolean> {\r\n        const command = new HeadAttachmentCommand(documentId, name, null);\r\n        this._session.incrementRequestCount();\r\n        await this._requestExecutor.execute(command, this._sessionInfo);\r\n        return !!command.result;\r\n    }\r\n\r\n    public async get(entity: object, name: string): Promise<AttachmentResult>;\r\n    public async get(documentId: string, name: string): Promise<AttachmentResult>;\r\n    public async get(\r\n        idOrEntity: string | object,\r\n        name: string): Promise<AttachmentResult> {\r\n        let docId;\r\n        if (typeof idOrEntity !== \"string\") {\r\n            const document = this._session.documentsByEntity.get(idOrEntity);\r\n            if (!document) {\r\n                this._throwEntityNotInSessionOrMissingId(idOrEntity);\r\n            }\r\n\r\n            docId = document.id;\r\n        } else {\r\n            docId = idOrEntity;\r\n        }\r\n\r\n        const operation: GetAttachmentOperation =\r\n            new GetAttachmentOperation(docId, name, \"Document\", null);\r\n        this._session.incrementRequestCount();\r\n        return await this._session.operations.send(operation, this._sessionInfo);\r\n    }\r\n\r\n    public async getRevision(documentId: string, name: string, changeVector: string): Promise<AttachmentResult> {\r\n        const operation = new GetAttachmentOperation(documentId, name, \"Revision\", changeVector);\r\n        this._session.incrementRequestCount();\r\n        return this._session.operations.send(operation, this._sessionInfo);\r\n    }\r\n}\r\n"]}