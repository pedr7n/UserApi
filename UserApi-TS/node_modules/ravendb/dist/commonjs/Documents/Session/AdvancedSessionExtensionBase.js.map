{"version":3,"file":"AdvancedSessionExtensionBase.js","sourceRoot":"","sources":["../../../../src/Documents/Session/AdvancedSessionExtensionBase.ts"],"names":[],"mappings":";;;AAOA,MAAsB,4BAA4B;IACpC,QAAQ,CAAoC;IAC5C,gBAAgB,CAAkB;IAClC,YAAY,CAAc;IAC1B,cAAc,CAAiB;IAEzC,8DAA8D;IACpD,oBAAoB,CAA4B;IAChD,cAAc,CAAgB;IAExC,YAAsB,OAA0C;QAC5D,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QACxB,IAAI,CAAC,gBAAgB,GAAG,OAAO,CAAC,eAAe,CAAC;QAChD,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC,WAAW,CAAC;QACxC,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC,aAAa,CAAC;QAC5C,IAAI,CAAC,oBAAoB,GAAG,OAAO,CAAC,mBAAmB,CAAC;QACxD,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC,aAAa,CAAC;IAChD,CAAC;IAEM,KAAK,CAAC,OAAqB,EAAE,GAAG,QAAwB;QAC3D,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,EAAE,GAAG,QAAQ,CAAC,CAAC;IAC9C,CAAC;CACJ;AAtBD,oEAsBC","sourcesContent":["import { ICommandData } from \"../Commands/CommandData.js\";\r\nimport { InMemoryDocumentSessionOperations } from \"./InMemoryDocumentSessionOperations.js\";\r\nimport { RequestExecutor } from \"../../Http/RequestExecutor.js\";\r\nimport { SessionInfo } from \"./IDocumentSession.js\";\r\nimport { IDocumentStore } from \"../IDocumentStore.js\";\r\nimport { DocumentsById } from \"./DocumentsById.js\";\r\n\r\nexport abstract class AdvancedSessionExtensionBase {\r\n    protected _session: InMemoryDocumentSessionOperations;\r\n    protected _requestExecutor: RequestExecutor;\r\n    protected _sessionInfo: SessionInfo;\r\n    protected _documentStore: IDocumentStore;\r\n\r\n    // keys are produced with CommandIdTypeAndName.keyFor() method\r\n    protected _deferredCommandsMap: Map<string, ICommandData>;\r\n    protected _documentsById: DocumentsById;\r\n\r\n    protected constructor(session: InMemoryDocumentSessionOperations) {\r\n        this._session = session;\r\n        this._requestExecutor = session.requestExecutor;\r\n        this._sessionInfo = session.sessionInfo;\r\n        this._documentStore = session.documentStore;\r\n        this._deferredCommandsMap = session.deferredCommandsMap;\r\n        this._documentsById = session.documentsById;\r\n    }\r\n\r\n    public defer(command: ICommandData, ...commands: ICommandData[]): void {\r\n        this._session.defer(command, ...commands);\r\n    }\r\n}"]}