{"version":3,"file":"ILazyRevisionsOperations.js","sourceRoot":"","sources":["../../../../src/Documents/Session/ILazyRevisionsOperations.ts"],"names":[],"mappings":"","sourcesContent":["import { SessionRevisionsMetadataOptions } from \"./IRevisionsSessionOperations.js\";\r\nimport { DocumentType } from \"../DocumentAbstractions.js\";\r\nimport { Lazy } from \"../Lazy.js\";\r\nimport { MetadataAsDictionary } from \"../../Mapping/MetadataAsDictionary.js\";\r\nimport { RevisionsCollectionObject } from \"../../Types/index.js\";\r\n\r\n/**\r\n * Revisions advanced synchronous Lazy session operations\r\n */\r\nexport interface ILazyRevisionsOperations {\r\n    /**\r\n     * Returns all previous document revisions for specified document\r\n     *  ordered by most recent revisions first.\r\n     */\r\n    getFor<TEntity extends object>(id: string): Lazy<TEntity[]>;\r\n\r\n    /**\r\n     * Returns previous document revisions for specified document (with optional paging)\r\n     *  ordered by most recent revisions first.\r\n     */\r\n    getFor<TEntity extends object>(\r\n        id: string, options: LazySessionRevisionsOptions<TEntity>): Lazy<TEntity[]>;\r\n\r\n    /**\r\n     * Returns metadata of all previous document revisions for specified document\r\n     *  ordered by most recent revisions first.\r\n     */\r\n    getMetadataFor(id: string): Lazy<MetadataAsDictionary[]>;\r\n\r\n    /**\r\n     * Returns metadata of previous document revisions for specified document (with optional paging)\r\n     *  ordered by most recent revisions first.\r\n     */\r\n    getMetadataFor(id: string, options: SessionRevisionsMetadataOptions): Lazy<MetadataAsDictionary[]>;\r\n\r\n    /**\r\n     * Returns a document revision by date.\r\n     */\r\n    get<TEntity extends object>(id: string, date: Date): Lazy<TEntity>;\r\n\r\n    /**\r\n     * Returns a document revision by change vector.\r\n     */\r\n    get<TEntity extends object>(changeVector: string): Lazy<TEntity>;\r\n\r\n    /**\r\n     * Returns a document revision by change vector.\r\n     */\r\n    get<TEntity extends object>(changeVector: string, documentType: DocumentType<TEntity>): Lazy<TEntity>;\r\n\r\n    /**\r\n     * Returns a document revision by change vectors.\r\n     */\r\n    get<TEntity extends object>(changeVectors: string[]): Lazy<RevisionsCollectionObject<TEntity>>;\r\n\r\n    /**\r\n     * Returns a document revision by change vectors.\r\n     */\r\n    get<TEntity extends object>(changeVectors: string[],\r\n                                documentType: DocumentType<TEntity>)\r\n        : Lazy<RevisionsCollectionObject<TEntity>>;\r\n}\r\n\r\n\r\nexport interface LazySessionRevisionsOptions<T extends object> {\r\n    start?: number;\r\n    pageSize?: number;\r\n    documentType?: DocumentType<T>;\r\n}\r\n\r\nexport interface LazySessionRevisionsMetadataOptions {\r\n    start?: number;\r\n    pageSize?: number;\r\n}\r\n"]}