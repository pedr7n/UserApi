{"version":3,"file":"SessionEvents.js","sourceRoot":"","sources":["../../../../src/Documents/Session/SessionEvents.ts"],"names":[],"mappings":"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","sourcesContent":["import { InMemoryDocumentSessionOperations } from \"./InMemoryDocumentSessionOperations.js\";\r\nimport { IMetadataDictionary } from \"./IMetadataDictionary.js\";\r\nimport { IDocumentQueryCustomization } from \"./IDocumentQueryCustomization.js\";\r\nimport { DocumentType } from \"../DocumentAbstractions.js\";\r\nimport { Reference } from \"../../Utility/Reference.js\";\r\nimport { Topology } from \"../../Http/Topology.js\";\r\nimport { HttpRequestParameters, HttpResponse } from \"../../Primitives/Http.js\";\r\nimport { SessionDisposingEventArgs } from \"../IDocumentStore.js\";\r\nimport { BulkInsertProgress } from \"../Operations/BulkInsertProgress.js\";\r\n\r\nexport interface SessionEventsEmitter {\r\n    on(eventName: \"beforeStore\", eventHandler: (eventArgs: SessionBeforeStoreEventArgs) => void): this;\r\n\r\n    on(eventName: \"afterSaveChanges\", eventHandler: (eventArgs: SessionAfterSaveChangesEventArgs) => void): this;\r\n\r\n    on(eventName: \"beforeQuery\", eventHandler: (eventArgs: SessionBeforeQueryEventArgs) => void): this;\r\n\r\n    on(eventName: \"beforeDelete\", eventHandler: (eventArgs: SessionBeforeDeleteEventArgs) => void): this;\r\n\r\n    on(eventName: \"sessionDisposing\", eventHandler: (eventArgs: SessionDisposingEventArgs) => void): this;\r\n\r\n    on(eventName: \"beforeConversionToDocument\", eventHandler: (eventArgs: BeforeConversionToDocumentEventArgs) => void): this;\r\n    on(eventName: \"afterConversionToDocument\", eventHandler: (eventArgs: AfterConversionToDocumentEventArgs) => void): this;\r\n    on(eventName: \"beforeConversionToEntity\", eventHandler: (eventArgs: BeforeConversionToEntityEventArgs) => void): this;\r\n    on(eventName: \"afterConversionToEntity\", eventHandler: (eventArgs: AfterConversionToEntityEventArgs) => void): this;\r\n\r\n\r\n    removeListener(eventName: \"beforeStore\", eventHandler: (eventArgs: SessionBeforeStoreEventArgs) => void): this;\r\n\r\n    removeListener(\r\n        eventName: \"afterSaveChanges\", eventHandler: (eventArgs: SessionAfterSaveChangesEventArgs) => void): this;\r\n\r\n    removeListener(eventName: \"beforeQuery\", eventHandler: (eventArgs: SessionBeforeQueryEventArgs) => void): this;\r\n\r\n    removeListener(eventName: \"beforeDelete\", eventHandler: (eventArgs: SessionBeforeDeleteEventArgs) => void): this;\r\n\r\n    removeListener(eventName: \"sessionDisposing\", eventHandler: (eventArgs: SessionDisposingEventArgs) => void): this;\r\n\r\n    removeListener(eventName: \"beforeConversionToDocument\", eventHandler: (eventArgs: BeforeConversionToDocumentEventArgs) => void): this;\r\n    removeListener(eventName: \"afterConversionToDocument\", eventHandler: (eventArgs: AfterConversionToDocumentEventArgs) => void): this;\r\n    removeListener(eventName: \"beforeConversionToEntity\", eventHandler: (eventArgs: BeforeConversionToEntityEventArgs) => void): this;\r\n    removeListener(eventName: \"afterConversionToEntity\", eventHandler: (eventArgs: AfterConversionToEntityEventArgs) => void): this;\r\n\r\n    emit(eventName: \"beforeStore\", eventArgs: SessionBeforeStoreEventArgs): void;\r\n    emit(eventName: \"afterSaveChanges\", eventArgs: SessionAfterSaveChangesEventArgs): void;\r\n    emit(eventName: \"beforeQuery\", eventArgs: SessionBeforeQueryEventArgs): void;\r\n    emit(eventName: \"beforeDelete\", eventArgs: SessionBeforeDeleteEventArgs): void;\r\n    emit(eventName: \"sessionDisposing\", eventArgs: SessionDisposingEventArgs): void;\r\n\r\n    emit(eventName: \"beforeConversionToDocument\", eventArgs: BeforeConversionToDocumentEventArgs): void;\r\n    emit(eventName: \"afterConversionToDocument\", eventArgs: AfterConversionToDocumentEventArgs): void;\r\n    emit(eventName: \"beforeConversionToEntity\", eventArgs: BeforeConversionToEntityEventArgs): void;\r\n    emit(eventName: \"afterConversionToEntity\", eventArgs: AfterConversionToEntityEventArgs): void;\r\n}\r\n\r\nexport class SessionBeforeStoreEventArgs {\r\n    private _documentMetadata: IMetadataDictionary;\r\n\r\n    private readonly _session: InMemoryDocumentSessionOperations;\r\n    private readonly _documentId: string;\r\n    private readonly _entity: object;\r\n\r\n    public constructor(\r\n        session: InMemoryDocumentSessionOperations, documentId: string, entity: object) {\r\n        this._session = session;\r\n        this._documentId = documentId;\r\n        this._entity = entity;\r\n    }\r\n\r\n    public get session() {\r\n        return this._session;\r\n    }\r\n\r\n    public get documentId() {\r\n        return this._documentId;\r\n    }\r\n\r\n    public getEntity(): object {\r\n        return this._entity;\r\n    }\r\n\r\n    public isMetadataAccessed(): boolean {\r\n        return !!this._documentMetadata;\r\n    }\r\n\r\n    public getDocumentMetadata(): IMetadataDictionary {\r\n        if (!this._documentMetadata) {\r\n            this._documentMetadata = this._session.getMetadataFor(this._entity);\r\n        }\r\n\r\n        return this._documentMetadata;\r\n    }\r\n}\r\n\r\nexport class SessionBeforeQueryEventArgs {\r\n    constructor(\r\n        public session: InMemoryDocumentSessionOperations,\r\n        public queryCustomization: IDocumentQueryCustomization) {\r\n        // empty\r\n    }\r\n}\r\n\r\nexport class SessionBeforeDeleteEventArgs {\r\n\r\n    private _documentMetadata: IMetadataDictionary;\r\n\r\n    private readonly _session: InMemoryDocumentSessionOperations;\r\n    private readonly _documentId: string;\r\n    private readonly _entity: object;\r\n\r\n    public constructor(session: InMemoryDocumentSessionOperations, documentId: string, entity: object) {\r\n        this._session = session;\r\n        this._documentId = documentId;\r\n        this._entity = entity;\r\n    }\r\n\r\n    public get session(): InMemoryDocumentSessionOperations {\r\n        return this._session;\r\n    }\r\n\r\n    public get documentId() {\r\n        return this._documentId;\r\n    }\r\n\r\n    public get entity() {\r\n        return this._entity;\r\n    }\r\n\r\n    public get documentMetadata(): IMetadataDictionary {\r\n        if (!this._documentMetadata) {\r\n            this._documentMetadata = this._session.getMetadataFor(this._entity);\r\n        }\r\n\r\n        return this._documentMetadata;\r\n    }\r\n}\r\n\r\nexport class SessionAfterSaveChangesEventArgs {\r\n\r\n    private _documentMetadata: IMetadataDictionary;\r\n\r\n    public session: InMemoryDocumentSessionOperations;\r\n    public documentId: string;\r\n    public entity: object;\r\n\r\n    public constructor(session: InMemoryDocumentSessionOperations, documentId: string, entity: object) {\r\n        this.session = session;\r\n        this.documentId = documentId;\r\n        this.entity = entity;\r\n    }\r\n\r\n    public get documentMetadata(): IMetadataDictionary {\r\n        if (!this._documentMetadata) {\r\n            this._documentMetadata = this.session.getMetadataFor(this.entity);\r\n        }\r\n\r\n        return this._documentMetadata;\r\n    }\r\n}\r\n\r\nexport class BulkInsertOnProgressEventArgs {\r\n    public readonly progress: BulkInsertProgress;\r\n\r\n\r\n    public constructor(progress: BulkInsertProgress) {\r\n        this.progress = progress;\r\n    }\r\n}\r\n\r\nexport class AfterConversionToDocumentEventArgs {\r\n    public readonly id: string;\r\n    public readonly entity: object;\r\n    public readonly document: Reference<object>;\r\n    public readonly session: InMemoryDocumentSessionOperations;\r\n\r\n    public constructor(session: InMemoryDocumentSessionOperations, id: string, entity: object, document: Reference<object>) {\r\n        this.session = session;\r\n        this.id = id;\r\n        this.entity = entity;\r\n        this.document = document;\r\n    }\r\n}\r\n\r\nexport class AfterConversionToEntityEventArgs {\r\n    public readonly id: string;\r\n    public readonly document: object;\r\n    public readonly entity: object;\r\n    public readonly session: InMemoryDocumentSessionOperations;\r\n\r\n    public constructor(session: InMemoryDocumentSessionOperations, id: string, document: object, entity: object) {\r\n        this.session = session;\r\n        this.id = id;\r\n        this.document = document;\r\n        this.entity = entity;\r\n    }\r\n}\r\n\r\nexport class BeforeConversionToDocumentEventArgs {\r\n    public readonly id: string;\r\n    public readonly entity: object;\r\n    public readonly session: InMemoryDocumentSessionOperations;\r\n\r\n    public constructor(session: InMemoryDocumentSessionOperations, id: string, entity: object) {\r\n        this.session = session;\r\n        this.id = id;\r\n        this.entity = entity;\r\n    }\r\n}\r\n\r\nexport class BeforeConversionToEntityEventArgs {\r\n    public readonly id: string;\r\n    public readonly type: DocumentType;\r\n    public document: object;\r\n    public readonly session: InMemoryDocumentSessionOperations;\r\n\r\n    public constructor(session: InMemoryDocumentSessionOperations, id: string, type: DocumentType, document: object) {\r\n        this.session = session;\r\n        this.id = id;\r\n        this.type = type;\r\n        this.document = document;\r\n    }\r\n}\r\n\r\nexport class FailedRequestEventArgs {\r\n    public readonly database: string;\r\n    public readonly url: string;\r\n    public readonly error: Error;\r\n    public readonly request: HttpRequestParameters;\r\n    public readonly response: HttpResponse;\r\n\r\n    public constructor(database: string, url: string, error: Error, request: HttpRequestParameters, response: HttpResponse) {\r\n        this.database = database;\r\n        this.url = url;\r\n        this.error = error;\r\n        this.request = request;\r\n        this.response = response;\r\n    }\r\n}\r\n\r\nexport class TopologyUpdatedEventArgs {\r\n    public topology: Topology;\r\n    public reason: string;\r\n\r\n    public constructor(topology: Topology, reason: string) {\r\n        this.topology = topology;\r\n        this.reason = reason;\r\n    }\r\n}\r\n\r\nexport class BeforeRequestEventArgs {\r\n    public readonly database: string;\r\n    public readonly url: string;\r\n    public readonly request: HttpRequestParameters;\r\n    public readonly attemptNumber: number;\r\n\r\n    public constructor(database: string, url: string, request: HttpRequestParameters, attemptNumber: number) {\r\n        this.database = database;\r\n        this.url = url;\r\n        this.request = request;\r\n        this.attemptNumber = attemptNumber;\r\n    }\r\n}\r\n\r\nexport class SucceedRequestEventArgs {\r\n    public database: string;\r\n    public url: string;\r\n    public response: HttpResponse;\r\n    public request: HttpRequestParameters;\r\n    public attemptNumber: number;\r\n\r\n    public constructor(database: string, url: string, response: HttpResponse, request: HttpRequestParameters, attemptNumber: number) {\r\n        this.database = database;\r\n        this.url = url;\r\n        this.response = response;\r\n        this.request = request;\r\n        this.attemptNumber = attemptNumber;\r\n    }\r\n}\r\n"]}