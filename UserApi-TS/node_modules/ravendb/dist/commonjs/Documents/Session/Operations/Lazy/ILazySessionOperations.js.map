{"version":3,"file":"ILazySessionOperations.js","sourceRoot":"","sources":["../../../../../../src/Documents/Session/Operations/Lazy/ILazySessionOperations.ts"],"names":[],"mappings":"","sourcesContent":["import { ILazyLoaderWithInclude } from \"../../Loaders/ILazyLoaderWithInclude.js\";\r\nimport { ObjectTypeDescriptor, EntitiesCollectionObject } from \"../../../../Types/index.js\";\r\nimport { Lazy } from \"../../../Lazy.js\";\r\nimport { SessionLoadStartingWithOptions } from \"../../IDocumentSession.js\";\r\nimport { ConditionalLoadResult } from \"../../ConditionalLoadResult.js\";\r\n\r\n/**\r\n * Specify interface for lazy operation for the session\r\n */\r\nexport interface ILazySessionOperations {\r\n\r\n    /**\r\n     * Begin a load while including the specified path\r\n     */\r\n    include(path: string): ILazyLoaderWithInclude;\r\n\r\n    //TBD expr ILazyLoaderWithInclude<TResult> Include<TResult>(Expression<Func<TResult, string>> path);\r\n\r\n    //TBD expr ILazyLoaderWithInclude<TResult> Include<TResult>(Expression<Func<TResult, IEnumerable<string>>> path);\r\n\r\n    /**\r\n     * Loads the specified entities with the specified ids.\r\n     */\r\n    load<TEntity extends object>(\r\n        ids: string[],\r\n        clazz: ObjectTypeDescriptor<TEntity>): Lazy<EntitiesCollectionObject<TEntity>>;\r\n\r\n    /**\r\n     * Loads the specified entities with the specified ids.\r\n     */\r\n    load<TEntity extends object>(ids: string[]): Lazy<EntitiesCollectionObject<TEntity>>;\r\n\r\n    /**\r\n     * Loads the specified entity with the specified id.\r\n     */\r\n    load<TEntity extends object>(id: string): Lazy<TEntity | null>;\r\n\r\n    /**\r\n     * Loads the specified entity with the specified id.\r\n     */\r\n    load<TEntity extends object>(\r\n        id: string,\r\n        clazz: ObjectTypeDescriptor<TEntity>): Lazy<TEntity | null>;\r\n\r\n    /**\r\n     * Loads multiple entities that contain common prefix.\r\n     */\r\n    loadStartingWith<TEntity extends object>(idPrefix: string): Lazy<EntitiesCollectionObject<TEntity>>;\r\n\r\n    /**\r\n     * Loads multiple entities that contain common prefix.\r\n     */\r\n    loadStartingWith<TEntity extends object>(\r\n        idPrefix: string, clazz: ObjectTypeDescriptor<TEntity>): Lazy<EntitiesCollectionObject<TEntity>>;\r\n\r\n    /**\r\n     * Loads multiple entities that contain common prefix.\r\n     */\r\n    loadStartingWith<TEntity extends object>(\r\n        idPrefix: string,\r\n        opts: SessionLoadStartingWithOptions<TEntity>): Lazy<EntitiesCollectionObject<TEntity>>;\r\n\r\n    /**\r\n     * Loads the specified entity with the specified id and changeVector.\r\n     * If the entity is loaded into the session, the tracked entity will be returned otherwise\r\n     * the entity will be loaded only if it is fresher then the provided changeVector.\r\n     * @param id Identifier of a entity that will be conditional loaded.\r\n     * @param changeVector Change vector of a entity that will be conditional loaded.\r\n     * @param clazz Result class\r\n     */\r\n    conditionalLoad<TEntity extends object>(\r\n        id: string, changeVector: string, clazz: ObjectTypeDescriptor<TEntity>\r\n    ): Lazy<ConditionalLoadResult<TEntity>>;\r\n}\r\n"]}