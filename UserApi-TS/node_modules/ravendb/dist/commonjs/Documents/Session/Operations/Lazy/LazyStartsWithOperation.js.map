{"version":3,"file":"LazyStartsWithOperation.js","sourceRoot":"","sources":["../../../../../../src/Documents/Session/Operations/Lazy/LazyStartsWithOperation.ts"],"names":[],"mappings":"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","sourcesContent":["import { ILazyOperation } from \"./ILazyOperation.js\";\r\nimport { ObjectTypeDescriptor } from \"../../../../Types/index.js\";\r\nimport { InMemoryDocumentSessionOperations } from \"../../InMemoryDocumentSessionOperations.js\";\r\nimport { SessionLoadStartingWithOptions } from \"../../IDocumentSession.js\";\r\nimport { GetRequest } from \"../../../Commands/MultiGet/GetRequest.js\";\r\nimport { QueryResult } from \"../../../Queries/QueryResult.js\";\r\nimport { GetResponse } from \"../../../Commands/MultiGet/GetResponse.js\";\r\nimport { GetDocumentsCommand } from \"../../../Commands/GetDocumentsCommand.js\";\r\nimport { stringToReadable } from \"../../../../Utility/StreamUtil.js\";\r\nimport { DocumentInfo } from \"../../DocumentInfo.js\";\r\n\r\nconst enc = encodeURIComponent;\r\n\r\nexport class LazyStartsWithOperation<T extends object> implements ILazyOperation {\r\n\r\n    private readonly _clazz: ObjectTypeDescriptor<T>;\r\n    private readonly _idPrefix: string;\r\n    private readonly _matches: string;\r\n    private readonly _exclude: string;\r\n    private readonly _start: number;\r\n    private readonly _pageSize: number;\r\n    private readonly _sessionOperations: InMemoryDocumentSessionOperations;\r\n    private readonly _startAfter: string;\r\n\r\n    public constructor(\r\n        idPrefix: string,\r\n        opts: SessionLoadStartingWithOptions<T>,\r\n        sessionOperations: InMemoryDocumentSessionOperations) {\r\n\r\n        this._idPrefix = idPrefix;\r\n        this._matches = opts.matches;\r\n        this._exclude = opts.exclude;\r\n        this._start = opts.start;\r\n        this._pageSize = opts.pageSize;\r\n        this._sessionOperations = sessionOperations;\r\n        this._startAfter = opts.startAfter;\r\n        this._clazz = sessionOperations.conventions.getJsTypeByDocumentType(opts.documentType);\r\n    }\r\n\r\n    public createRequest(): GetRequest {\r\n        const request = new GetRequest();\r\n        request.url = \"/docs\";\r\n        request.query =\r\n            `?startsWith=${enc(this._idPrefix)}&matches=${enc(this._matches) || \"\"}&exclude=${enc(this._exclude) || \"\"}&start=${this._start}&pageSize=${this._pageSize}&startAfter=${enc(this._startAfter)}`;\r\n        return request;\r\n    }\r\n\r\n    private _result: object;\r\n    private _queryResult: QueryResult;\r\n    private _requiresRetry: boolean;\r\n\r\n    public get result(): any {\r\n        return this._result;\r\n    }\r\n\r\n    public set result(result) {\r\n        this._result = result;\r\n    }\r\n\r\n    public get queryResult(): QueryResult {\r\n        return this._queryResult;\r\n    }\r\n\r\n    public set queryResult(queryResult) {\r\n        this._queryResult = queryResult;\r\n    }\r\n\r\n    public get requiresRetry() {\r\n        return this._requiresRetry;\r\n    }\r\n\r\n    public set requiresRetry(result) {\r\n        this._requiresRetry = result;\r\n    }\r\n\r\n    public async handleResponseAsync(response: GetResponse): Promise<void> {\r\n\r\n        const { results } = await GetDocumentsCommand.parseDocumentsResultResponseAsync(\r\n            stringToReadable(response.result), this._sessionOperations.conventions);\r\n\r\n        const finalResults = {};\r\n        for (const document of results) {\r\n            const newDocumentInfo = DocumentInfo.getNewDocumentInfo(document);\r\n            this._sessionOperations.documentsById.add(newDocumentInfo);\r\n            if (!newDocumentInfo.id) {\r\n                continue;\r\n            }\r\n\r\n            if (this._sessionOperations.isDeleted(newDocumentInfo.id)) {\r\n                finalResults[newDocumentInfo.id] = null;\r\n                continue;\r\n            }\r\n\r\n            const doc = this._sessionOperations.documentsById.getValue(newDocumentInfo.id);\r\n            if (doc) {\r\n                finalResults[newDocumentInfo.id] = this._sessionOperations.trackEntity(this._clazz, doc);\r\n                continue;\r\n            }\r\n\r\n            finalResults[newDocumentInfo.id] = null;\r\n        }\r\n\r\n        this.result = finalResults;\r\n    }\r\n}\r\n"]}