{"version":3,"file":"LazySessionOperations.js","sourceRoot":"","sources":["../../../../../../src/Documents/Session/Operations/Lazy/LazySessionOperations.ts"],"names":[],"mappings":"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","sourcesContent":["import { ILazySessionOperations } from \"./ILazySessionOperations.js\";\r\nimport { DocumentSession } from \"../../DocumentSession.js\";\r\nimport { ILazyLoaderWithInclude } from \"../../Loaders/ILazyLoaderWithInclude.js\";\r\nimport { LazyMultiLoaderWithInclude } from \"../../Loaders/LazyMultiLoaderWithInclude.js\";\r\nimport { ObjectTypeDescriptor, EntitiesCollectionObject } from \"../../../../Types/index.js\";\r\nimport { Lazy } from \"../../../Lazy.js\";\r\nimport { SessionLoadStartingWithOptions } from \"../../IDocumentSession.js\";\r\nimport { LazyStartsWithOperation } from \"./LazyStartsWithOperation.js\";\r\nimport { LoadStartingWithOperation } from \"../LoadStartingWithOperation.js\";\r\nimport { ConditionalLoadResult } from \"../../ConditionalLoadResult.js\";\r\nimport { StringUtil } from \"../../../../Utility/StringUtil.js\";\r\nimport { throwError } from \"../../../../Exceptions/index.js\";\r\nimport { LazyConditionalLoadOperation } from \"./LazyConditionalLoadOperation.js\";\r\n\r\nexport class LazySessionOperations implements ILazySessionOperations {\r\n\r\n    protected _delegate: DocumentSession;\r\n\r\n    public constructor(delegate: DocumentSession) {\r\n        this._delegate = delegate;\r\n    }\r\n\r\n    public include(path: string): ILazyLoaderWithInclude {\r\n        return new LazyMultiLoaderWithInclude(this._delegate).include(path);\r\n    }\r\n\r\n    public load<TEntity extends object>(\r\n        ids: string[],\r\n        clazz: ObjectTypeDescriptor<TEntity>): Lazy<EntitiesCollectionObject<TEntity>>;\r\n    public load<TEntity extends object>(\r\n        id: string,\r\n        clazz: ObjectTypeDescriptor<TEntity>): Lazy<TEntity | null>;\r\n    public load<TEntity extends object>(ids: string[]): Lazy<EntitiesCollectionObject<TEntity>>;\r\n    public load<TEntity extends object>(id: string): Lazy<TEntity | null>;\r\n    public load<TEntity extends object>(\r\n        idOrIds: string | string[],\r\n        clazz?: ObjectTypeDescriptor<TEntity>): Lazy<TEntity | null> | Lazy<EntitiesCollectionObject<TEntity>> {\r\n        const isMultipleIds = Array.isArray(idOrIds);\r\n        if (!isMultipleIds && this._delegate.isLoaded(idOrIds as string)) {\r\n            return new Lazy(() =>\r\n                this._delegate.load<TEntity>(idOrIds as string, { documentType: clazz }));\r\n\r\n        }\r\n\r\n        const ids: string[] = isMultipleIds ? idOrIds as string[] : [idOrIds as string];\r\n        const result = this._delegate.lazyLoadInternal(ids, [], clazz);\r\n        return isMultipleIds\r\n            ? result\r\n            : new Lazy(async () => (await result.getValue())[idOrIds as string]);\r\n    }\r\n\r\n    public loadStartingWith<TEntity extends object>(\r\n        idPrefix: string,\r\n        opts: SessionLoadStartingWithOptions<TEntity>): Lazy<EntitiesCollectionObject<TEntity>>;\r\n    public loadStartingWith<TEntity extends object>(idPrefix: string): Lazy<EntitiesCollectionObject<TEntity>>;\r\n    public loadStartingWith<TEntity extends object>(\r\n        idPrefix: string,\r\n        opts?: SessionLoadStartingWithOptions<TEntity>):\r\n        Lazy<EntitiesCollectionObject<TEntity>> {\r\n        // eslint-disable-next-line unicorn/prefer-default-parameters\r\n        opts = opts || null;\r\n        opts = Object.assign({}, LoadStartingWithOperation.DEFAULT, opts);\r\n        const operation = new LazyStartsWithOperation<TEntity>(idPrefix, opts, this._delegate);\r\n        return this._delegate.addLazyOperation(operation);\r\n    }\r\n\r\n    public conditionalLoad<TEntity extends object>(id: string, changeVector: string, clazz: ObjectTypeDescriptor<TEntity>): Lazy<ConditionalLoadResult<TEntity>> {\r\n        if (StringUtil.isNullOrEmpty(id)) {\r\n            throwError(\"InvalidArgumentException\", \"Id cannot be null\");\r\n        }\r\n\r\n        if (this._delegate.isLoaded(id)) {\r\n            return new Lazy<ConditionalLoadResult<TEntity>>(async () => {\r\n                const entity = await this._delegate.load(id, clazz);\r\n                if (!entity) {\r\n                    return {\r\n                        entity: null,\r\n                        changeVector: null\r\n                    }\r\n                }\r\n\r\n                const cv = this._delegate.advanced.getChangeVectorFor(entity);\r\n                return {\r\n                    entity,\r\n                    changeVector: cv\r\n                }\r\n            });\r\n        }\r\n\r\n        if (StringUtil.isNullOrEmpty(changeVector)) {\r\n            throwError(\"InvalidArgumentException\", \"The requested document with id '\"\r\n                + id + \"' is not loaded into the session and could not conditional load when changeVector is null or empty.\");\r\n        }\r\n\r\n        const lazyLoadOperation = new LazyConditionalLoadOperation<TEntity>(this._delegate, id, changeVector, clazz);\r\n        return this._delegate.addLazyOperation(lazyLoadOperation);\r\n    }\r\n\r\n    // TBD expr ILazyLoaderWithInclude<T> ILazySessionOperations.Include<T>(\r\n    //     Expression<Func<T, string>> path)\r\n    // TBD expr ILazyLoaderWithInclude<T> ILazySessionOperations.Include<T>(\r\n    //     Expression<Func<T, IEnumerable<string>>> path)\r\n    // TBD Lazy<List<TResult>> ILazySessionOperations.MoreLikeThis<TResult>(\r\n    //     MoreLikeThisQuery query)\r\n}\r\n"]}