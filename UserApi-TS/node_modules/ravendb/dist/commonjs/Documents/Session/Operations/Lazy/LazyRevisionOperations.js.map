{"version":3,"file":"LazyRevisionOperations.js","sourceRoot":"","sources":["../../../../../../src/Documents/Session/Operations/Lazy/LazyRevisionOperations.ts"],"names":[],"mappings":"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","sourcesContent":["import { ILazyRevisionsOperations, LazySessionRevisionsOptions } from \"../../ILazyRevisionsOperations.js\";\r\nimport { DocumentSession } from \"../../DocumentSession.js\";\r\nimport { Lazy } from \"../../../Lazy.js\";\r\nimport { GetRevisionOperation } from \"../GetRevisionOperation.js\";\r\nimport { MetadataAsDictionary, MetadataDictionary } from \"../../../../Mapping/MetadataAsDictionary.js\";\r\nimport { SessionRevisionsMetadataOptions } from \"../../IRevisionsSessionOperations.js\";\r\nimport { DocumentType } from \"../../../DocumentAbstractions.js\";\r\nimport { RevisionsCollectionObject } from \"../../../../Types/index.js\";\r\nimport { LazyRevisionOperation } from \"./LazyRevisionOperation.js\";\r\nimport { TypeUtil } from \"../../../../Utility/TypeUtil.js\";\r\n\r\nexport class LazyRevisionOperations implements ILazyRevisionsOperations {\r\n\r\n    protected readonly delegate: DocumentSession;\r\n\r\n    constructor(delegate: DocumentSession) {\r\n        this.delegate = delegate;\r\n    }\r\n\r\n    getMetadataFor(id: string): Lazy<MetadataAsDictionary[]>;\r\n    getMetadataFor(id: string, options: SessionRevisionsMetadataOptions): Lazy<MetadataAsDictionary[]>;\r\n    getMetadataFor(id: string, options?: SessionRevisionsMetadataOptions): Lazy<MetadataAsDictionary[]> {\r\n        options = Object.assign({\r\n            pageSize: 25,\r\n            start: 0\r\n        } as SessionRevisionsMetadataOptions, options || {});\r\n\r\n        const operation = new GetRevisionOperation(this.delegate, id, options.start, options.pageSize);\r\n        const lazyRevisionOperation = new LazyRevisionOperation(MetadataDictionary, operation, \"ListOfMetadata\");\r\n        return this.delegate.addLazyOperation(lazyRevisionOperation);\r\n    }\r\n\r\n    public get<TEntity extends object>(id: string, date: Date): Lazy<TEntity | null>;\r\n    public get<TEntity extends object>(changeVector: string): Lazy<TEntity | null>;\r\n    public get<TEntity extends object>(changeVector: string,\r\n                                             documentType: DocumentType<TEntity>): Lazy<TEntity | null>;\r\n    public get<TEntity extends object>(changeVectors: string[])\r\n        : Lazy<RevisionsCollectionObject<TEntity>>;\r\n    public get<TEntity extends object>(changeVectors: string[], documentType: DocumentType<TEntity>)\r\n        : Lazy<RevisionsCollectionObject<TEntity>>;\r\n    public get<TEntity extends object>(\r\n        changeVectorOrVectorsOrId: string | string[],\r\n        documentTypeOrDate?: DocumentType<TEntity> | Date)\r\n        : Lazy<RevisionsCollectionObject<TEntity> | TEntity | null> {\r\n        const documentType = TypeUtil.isDocumentType(documentTypeOrDate)\r\n            ? documentTypeOrDate as DocumentType<TEntity>\r\n            : undefined;\r\n\r\n        if (TypeUtil.isDate(documentTypeOrDate)) {\r\n            return this._getByIdAndDate(\r\n                changeVectorOrVectorsOrId as string, documentTypeOrDate);\r\n        } else {\r\n            return this._get(changeVectorOrVectorsOrId, documentType);\r\n        }\r\n    }\r\n\r\n    private _get<TEntity extends object>(changeVectorOrVectors: string | string[],\r\n                                               documentType?: DocumentType<TEntity>)\r\n        : Lazy<RevisionsCollectionObject<TEntity> | TEntity> {\r\n        if (TypeUtil.isArray(changeVectorOrVectors)) {\r\n            const operation = new GetRevisionOperation(this.delegate, changeVectorOrVectors);\r\n            const lazyRevisionOperation = new LazyRevisionOperation(documentType, operation, \"Map\");\r\n            return this.delegate.addLazyOperation(lazyRevisionOperation);\r\n        } else {\r\n            const operation = new GetRevisionOperation(this.delegate, changeVectorOrVectors);\r\n            const lazyRevisionOperation = new LazyRevisionOperation(documentType, operation, \"Single\");\r\n            return this.delegate.addLazyOperation(lazyRevisionOperation);\r\n        }\r\n\r\n    }\r\n\r\n    private _getByIdAndDate<TEntity extends object>(id: string, date: Date, clazz?: DocumentType<TEntity>): Lazy<TEntity | null> {\r\n        const operation = new GetRevisionOperation(this.delegate, id, date);\r\n        const lazyRevisionOperation = new LazyRevisionOperation<TEntity>(clazz, operation, \"Single\");\r\n        return this.delegate.addLazyOperation(lazyRevisionOperation);\r\n    }\r\n\r\n    public getFor<TEntity extends object>(id: string): Lazy<TEntity[]>;\r\n    public getFor<TEntity extends object>(\r\n        id: string, options: LazySessionRevisionsOptions<TEntity>): Lazy<TEntity[]>;\r\n    public getFor<TEntity extends object>(\r\n        id: string, options: LazySessionRevisionsOptions<TEntity> = {}): Lazy<TEntity[]> {\r\n\r\n        const start = options.start ?? 0;\r\n        const pageSize = options.pageSize ?? 25;\r\n        const operation = new GetRevisionOperation(this.delegate, id, start, pageSize);\r\n        const lazyRevisionOperation = new LazyRevisionOperation(options.documentType, operation, \"Multi\");\r\n        return this.delegate.addLazyOperation(lazyRevisionOperation);\r\n    }\r\n}"]}