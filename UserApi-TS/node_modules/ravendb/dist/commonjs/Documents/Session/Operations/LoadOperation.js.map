{"version":3,"file":"LoadOperation.js","sourceRoot":"","sources":["../../../../../src/Documents/Session/Operations/LoadOperation.ts"],"names":[],"mappings":"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","sourcesContent":["import { InMemoryDocumentSessionOperations } from \"../InMemoryDocumentSessionOperations.js\";\r\nimport { getLogger } from \"../../../Utility/LogUtil.js\";\r\nimport { DocumentInfo } from \"../DocumentInfo.js\";\r\nimport {\r\n    GetDocumentsCommand,\r\n    GetDocumentsResult,\r\n    GetDocumentsByIdsCommandOptions\r\n} from \"../../Commands/GetDocumentsCommand.js\";\r\nimport { TypeUtil } from \"../../../Utility/TypeUtil.js\";\r\nimport { throwError } from \"../../../Exceptions/index.js\";\r\nimport { ObjectTypeDescriptor, EntitiesCollectionObject } from \"../../../Types/index.js\";\r\nimport { StringUtil } from \"../../../Utility/StringUtil.js\";\r\nimport { AbstractTimeSeriesRange } from \"../../Operations/TimeSeries/AbstractTimeSeriesRange.js\";\r\n\r\nconst log = getLogger({ module: \"LoadOperation\" });\r\n\r\nexport class LoadOperation {\r\n\r\n    private _session: InMemoryDocumentSessionOperations;\r\n\r\n    private _ids: string[];\r\n    private _includes: string[];\r\n    private _countersToInclude: string[];\r\n    private _revisionsToIncludeByChangeVector: string[];\r\n    private _revisionsToIncludeByDateTimeBefore: Date;\r\n    private _compareExchangeValuesToInclude: string[];\r\n    private _includeAllCounters: boolean;\r\n    private _timeSeriesToInclude: AbstractTimeSeriesRange[];\r\n\r\n    private _resultsSet: boolean;\r\n    private _results: GetDocumentsResult;\r\n\r\n    public constructor(session: InMemoryDocumentSessionOperations) {\r\n        this._session = session;\r\n    }\r\n\r\n    public createRequest(): GetDocumentsCommand {\r\n        if (this._session.checkIfIdAlreadyIncluded(this._ids, this._includes)) {\r\n            return null;\r\n        }\r\n\r\n        this._session.incrementRequestCount();\r\n\r\n        log.info(\"Requesting the following ids \"\r\n            + this._ids.join(\",\") + \" from \" + this._session.storeIdentifier);\r\n\r\n        const opts: GetDocumentsByIdsCommandOptions = {\r\n            ids: this._ids,\r\n            includes: this._includes,\r\n            metadataOnly: false,\r\n            conventions: this._session.conventions,\r\n            timeSeriesIncludes: this._timeSeriesToInclude,\r\n            compareExchangeValueIncludes: this._compareExchangeValuesToInclude,\r\n            revisionsIncludesByChangeVector: this._revisionsToIncludeByChangeVector,\r\n            revisionIncludeByDateTimeBefore: this._revisionsToIncludeByDateTimeBefore\r\n        };\r\n\r\n        if (this._includeAllCounters) {\r\n            opts.includeAllCounters = true;\r\n        } else if (this._countersToInclude) {\r\n            opts.counterIncludes = this._countersToInclude;\r\n        }\r\n\r\n        const cmd = new GetDocumentsCommand(opts);\r\n        cmd.transactionMode = this._session.transactionMode;\r\n        return cmd;\r\n    }\r\n\r\n    public byId(id: string): LoadOperation {\r\n        if (StringUtil.isNullOrEmpty(id)) {\r\n            return this;\r\n        }\r\n\r\n        if (!this._ids) {\r\n            this._ids = [id];\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    public withCompareExchange(compareExchangeValues: string[]) {\r\n        if (compareExchangeValues && compareExchangeValues.length > 0) {\r\n            this._session.assertNoIncludesInNonTrackingSession();\r\n            this._compareExchangeValuesToInclude = compareExchangeValues;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    public withCounters(counters: string[]): LoadOperation {\r\n        if (counters && counters.length > 0) {\r\n            this._session.assertNoIncludesInNonTrackingSession();\r\n            this._countersToInclude = counters;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    public withRevisions(revisionsByChangeVector: string[]): LoadOperation;\r\n    public withRevisions(revisionByDateTimeBefore: Date): LoadOperation;\r\n    public withRevisions(revisions: string[] | Date): LoadOperation {\r\n        if (TypeUtil.isArray(revisions)) {\r\n            if (revisions.length > 0) {\r\n                this._session.assertNoIncludesInNonTrackingSession();\r\n                this._revisionsToIncludeByChangeVector = revisions;\r\n            }\r\n        }\r\n\r\n        if (TypeUtil.isDate(revisions)) {\r\n            this._session.assertNoIncludesInNonTrackingSession();\r\n            this._revisionsToIncludeByDateTimeBefore = revisions;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    public withAllCounters() {\r\n        this._session.assertNoIncludesInNonTrackingSession();\r\n        this._includeAllCounters = true;\r\n        return this;\r\n    }\r\n\r\n    public withTimeSeries(timeSeries: AbstractTimeSeriesRange[]) {\r\n        if (timeSeries) {\r\n            this._session.assertNoIncludesInNonTrackingSession();\r\n            this._timeSeriesToInclude = timeSeries;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    public withIncludes(includes: string[]): LoadOperation {\r\n        if (includes && includes.length > 0) {\r\n            this._session.assertNoIncludesInNonTrackingSession();\r\n            this._includes = includes;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    public byIds(ids: string[]): LoadOperation {\r\n        const distinct = new Set(ids.filter(x => !StringUtil.isNullOrEmpty(x)));\r\n\r\n        this._ids = Array.from(distinct);\r\n\r\n        return this;\r\n    }\r\n\r\n    public getDocument<T extends object>(clazz: ObjectTypeDescriptor<T>): T | null {\r\n        if (this._session.noTracking) {\r\n            if (!this._resultsSet && this._ids.length) {\r\n                throwError(\"InvalidOperationException\", \"Cannot execute getDocument before operation execution.\");\r\n            }\r\n\r\n            if (!this._results || !this._results.results || !this._results.results.length) {\r\n                return null;\r\n            }\r\n\r\n            const document = this._results.results[0];\r\n            if (!document) {\r\n                return null;\r\n            }\r\n\r\n            const documentInfo = DocumentInfo.getNewDocumentInfo(document);\r\n            return this._session.trackEntity(clazz, documentInfo);\r\n        }\r\n\r\n        return this._getDocument(clazz, this._ids[0]);\r\n    }\r\n\r\n    private _getDocument<T extends object>(clazz: ObjectTypeDescriptor<T>, id: string): T | null {\r\n        if (!id) {\r\n            return null;\r\n        }\r\n\r\n        if (this._session.isDeleted(id)) {\r\n            return null;\r\n        }\r\n\r\n        let doc = this._session.documentsById.getValue(id);\r\n        if (doc) {\r\n            return this._session.trackEntity(clazz, doc);\r\n        }\r\n\r\n        doc = this._session.includedDocumentsById.get(id);\r\n        if (doc) {\r\n            return this._session.trackEntity(clazz, doc);\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    public getDocuments<T extends object>(clazz: ObjectTypeDescriptor<T>): EntitiesCollectionObject<T> {\r\n        if (this._session.noTracking) {\r\n            if (!this._resultsSet && this._ids.length) {\r\n                throwError(\r\n                    \"InvalidOperationException\", \"Cannot execute 'getDocuments' before operation execution.\");\r\n            }\r\n\r\n            const finalResults = this._ids.filter(x => !!x)\r\n                .reduce((result, next) => {\r\n                    result[next] = null;\r\n                    return result;\r\n                }, {});\r\n\r\n            if (!this._results || !this._results.results || !this._results.results.length) {\r\n                return finalResults;\r\n            }\r\n\r\n            for (const document of this._results.results) {\r\n                if (!document) {\r\n                    continue;\r\n                }\r\n\r\n                const newDocumentInfo = DocumentInfo.getNewDocumentInfo(document);\r\n                finalResults[newDocumentInfo.id] = this._session.trackEntity(clazz, newDocumentInfo);\r\n            }\r\n\r\n            return finalResults;\r\n        }\r\n\r\n        return this._ids.filter(x => !!x)\r\n            .reduce((result, id) => {\r\n                result[id] = this._getDocument(clazz, id);\r\n                return result;\r\n            }, {});\r\n    }\r\n\r\n    public setResult(result: GetDocumentsResult): void {\r\n        this._resultsSet = true;\r\n\r\n        if (this._session.noTracking) {\r\n            this._results = result;\r\n            return;\r\n        }\r\n\r\n        if (!result) {\r\n            this._session.registerMissing(this._ids);\r\n            return;\r\n        }\r\n\r\n        this._session.registerIncludes(result.includes);\r\n\r\n\r\n        if (this._includeAllCounters || this._countersToInclude) {\r\n            this._session.registerCounters(\r\n                result.counterIncludes, this._ids, this._countersToInclude, this._includeAllCounters);\r\n        }\r\n\r\n        if (this._timeSeriesToInclude) {\r\n            this._session.registerTimeSeries(result.timeSeriesIncludes);\r\n        }\r\n\r\n        if (this._revisionsToIncludeByChangeVector || this._revisionsToIncludeByDateTimeBefore) {\r\n            this._session.registerRevisionIncludes(result.revisionIncludes);\r\n        }\r\n\r\n        const includingMissingAtomicGuards = this._session.transactionMode === \"ClusterWide\";\r\n        if (this._compareExchangeValuesToInclude || includingMissingAtomicGuards) {\r\n            const clusterSession = this._session.clusterSession;\r\n            clusterSession.registerCompareExchangeIncludes(result.compareExchangeValueIncludes, includingMissingAtomicGuards);\r\n        }\r\n\r\n        for (const document of result.results) {\r\n            if (!document || TypeUtil.isNullOrUndefined(document)) {\r\n                continue;\r\n            }\r\n\r\n            const newDocumentInfo = DocumentInfo.getNewDocumentInfo(document);\r\n            this._session.documentsById.add(newDocumentInfo);\r\n        }\r\n\r\n        for (const id of this._ids) {\r\n            const value = this._session.documentsById.getValue(id);\r\n            if (!value) {\r\n                this._session.registerMissing(id);\r\n            }\r\n        }\r\n\r\n        this._session.registerMissingIncludes(result.results, result.includes, this._includes);\r\n    }\r\n}\r\n"]}