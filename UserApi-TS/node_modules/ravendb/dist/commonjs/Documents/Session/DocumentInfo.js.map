{"version":3,"file":"DocumentInfo.js","sourceRoot":"","sources":["../../../../src/Documents/Session/DocumentInfo.ts"],"names":[],"mappings":";;;AAGA,qDAA+C;AAC/C,wDAAuD;AACvD,2DAAqD;AAGrD,MAAa,YAAY;IAEd,EAAE,CAAS;IAEX,YAAY,CAAS;IAErB,oBAAoB,CAAuB;IAE3C,aAAa,CAAU;IAEvB,QAAQ,CAAiB;IACzB,QAAQ,CAAe;IAEvB,gBAAgB,CAAsB;IAEtC,MAAM,CAAS;IACf,WAAW,CAAU;IACrB,UAAU,CAAS;IAEnB,MAAM,CAAC,kBAAkB,CAAC,QAAgB;QAC7C,MAAM,QAAQ,GAAW,QAAQ,CAAC,wBAAS,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;QACpE,IAAI,CAAC,QAAQ,EAAE,CAAC;YACZ,IAAA,qBAAU,EAAC,2BAA2B,EAAE,+BAA+B,CAAC,CAAC;QAC7E,CAAC;QAED,MAAM,EAAE,GAAW,QAAQ,CAAC,wBAAS,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QAC7D,IAAI,sBAAQ,CAAC,iBAAiB,CAAC,EAAE,CAAC,IAAI,OAAO,EAAE,KAAK,QAAQ,EAAE,CAAC;YAC3D,IAAA,qBAAU,EAAC,2BAA2B,EAAE,0BAA0B,CAAC,CAAC;QACxE,CAAC;QAED,MAAM,YAAY,GAAW,QAAQ,CAAC,wBAAS,CAAC,SAAS,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;QAClF,IAAI,sBAAQ,CAAC,iBAAiB,CAAC,YAAY,CAAC,IAAI,OAAO,YAAY,KAAK,QAAQ,EAAE,CAAC;YAC/E,IAAA,qBAAU,EAAC,2BAA2B,EAAE,oCAAoC,CAAC,CAAC;QAClF,CAAC;QAED,MAAM,eAAe,GAAG,IAAI,YAAY,EAAE,CAAC;QAC3C,eAAe,CAAC,EAAE,GAAG,EAAE,CAAC;QACxB,eAAe,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACpC,eAAe,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACpC,eAAe,CAAC,MAAM,GAAG,IAAI,CAAC;QAC9B,eAAe,CAAC,YAAY,GAAG,YAAY,CAAC;QAC5C,OAAO,eAAe,CAAC;IAC3B,CAAC;CACJ;AA3CD,oCA2CC","sourcesContent":["import { ConcurrencyCheckMode, } from \"./IDocumentSession.js\";\r\nimport { IMetadataDictionary } from \"./IMetadataDictionary.js\";\r\nimport { IRavenObject } from \"../../Types/IRavenObject.js\";\r\nimport { CONSTANTS } from \"../../Constants.js\";\r\nimport { throwError } from \"../../Exceptions/index.js\";\r\nimport { TypeUtil } from \"../../Utility/TypeUtil.js\";\r\nimport { MetadataObject } from \"./MetadataObject.js\";\r\n\r\nexport class DocumentInfo {\r\n\r\n    public id: string;\r\n\r\n    public changeVector: string;\r\n\r\n    public concurrencyCheckMode: ConcurrencyCheckMode;\r\n\r\n    public ignoreChanges: boolean;\r\n\r\n    public metadata: MetadataObject;\r\n    public document: IRavenObject;\r\n\r\n    public metadataInstance: IMetadataDictionary;\r\n\r\n    public entity: object;\r\n    public newDocument: boolean;\r\n    public collection: string;\r\n\r\n    public static getNewDocumentInfo(document: object): DocumentInfo {\r\n        const metadata: object = document[CONSTANTS.Documents.Metadata.KEY];\r\n        if (!metadata) {\r\n            throwError(\"InvalidOperationException\", \"Document must have a metadata\");\r\n        }\r\n\r\n        const id: string = metadata[CONSTANTS.Documents.Metadata.ID];\r\n        if (TypeUtil.isNullOrUndefined(id) || typeof id !== \"string\") {\r\n            throwError(\"InvalidOperationException\", \"Document must have an id\");\r\n        }\r\n\r\n        const changeVector: string = metadata[CONSTANTS.Documents.Metadata.CHANGE_VECTOR];\r\n        if (TypeUtil.isNullOrUndefined(changeVector) || typeof changeVector !== \"string\") {\r\n            throwError(\"InvalidOperationException\", \"Document must have an changeVector\");\r\n        }\r\n\r\n        const newDocumentInfo = new DocumentInfo();\r\n        newDocumentInfo.id = id;\r\n        newDocumentInfo.document = document;\r\n        newDocumentInfo.metadata = metadata;\r\n        newDocumentInfo.entity = null;\r\n        newDocumentInfo.changeVector = changeVector;\r\n        return newDocumentInfo;\r\n    }\r\n}\r\n"]}