{"version":3,"file":"SubscriptionIncludeBuilder.js","sourceRoot":"","sources":["../../../../../src/Documents/Session/Loaders/SubscriptionIncludeBuilder.ts"],"names":[],"mappings":";;;AAAA,mEAA6D;AAI7D,8DAAwD;AACxD,wDAAoD;AAEpD,MAAa,0BAA2B,SAAQ,0CAAkB;IAEvD,gBAAgB,CAAC,IAAY;QAChC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;QAC7B,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,cAAc,CAAC,IAAY;QAC9B,IAAI,CAAC,eAAe,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QAC/B,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,eAAe,CAAC,KAAe;QAClC,IAAI,CAAC,gBAAgB,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;QACjC,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,kBAAkB;QACrB,IAAI,CAAC,mBAAmB,CAAC,EAAE,CAAC,CAAC;QAC7B,OAAO,IAAI,CAAC;IAChB,CAAC;IAMM,iBAAiB,CAAC,WAA8B,EAAE,IAAyB,EAAE,WAA+B;QAC/G,IAAI,sBAAQ,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC;YAChC,IAAI,sBAAQ,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE,CAAC;gBACjC,IAAI,CAAC,4CAA4C,CAAC,WAAW,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;YACtF,CAAC;iBAAM,CAAC,CAAC,eAAe;gBACpB,IAAI,CAAC,2CAA2C,CAAC,WAAW,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;YACrF,CAAC;QACL,CAAC;aAAM,CAAC,CAAC,OAAO;YACZ,IAAI,sBAAQ,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE,CAAC;gBACjC,IAAI,CAAC,qCAAqC,CAAC,EAAE,EAAE,WAAW,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;YACnF,CAAC;iBAAM,CAAC,CAAC,cAAc;gBACnB,IAAI,CAAC,oCAAoC,CAAC,EAAE,EAAE,WAAW,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;YAClF,CAAC;QACL,CAAC;QAED,OAAO,IAAI,CAAC;IAChB,CAAC;IAKM,oBAAoB,CAAC,IAAyB,EAAE,WAA+B;QAClF,IAAI,sBAAQ,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE,CAAC;YACjC,IAAI,CAAC,qCAAqC,CAAC,EAAE,EAAE,0BAAW,CAAC,GAAG,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;QACvF,CAAC;aAAM,CAAC;YACJ,IAAI,CAAC,oCAAoC,CAAC,EAAE,EAAE,0BAAW,CAAC,GAAG,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;QACtF,CAAC;QAED,OAAO,IAAI,CAAC;IAChB,CAAC;CACJ;AAxDD,gEAwDC","sourcesContent":["import { IncludeBuilderBase } from \"./IncludeBuilderBase.js\";\r\nimport { ISubscriptionIncludeBuilder } from \"./ISubscriptionIncludeBuilder.js\";\r\nimport { TimeSeriesRangeType } from \"../../Operations/TimeSeries/TimeSeriesRangeType.js\";\r\nimport { TimeValue } from \"../../../Primitives/TimeValue.js\";\r\nimport { TypeUtil } from \"../../../Utility/TypeUtil.js\";\r\nimport { TIME_SERIES } from \"../../../Constants.js\";\r\n\r\nexport class SubscriptionIncludeBuilder extends IncludeBuilderBase implements ISubscriptionIncludeBuilder {\r\n\r\n    public includeDocuments(path: string): ISubscriptionIncludeBuilder {\r\n        this._includeDocuments(path);\r\n        return this;\r\n    }\r\n\r\n    public includeCounter(name: string): ISubscriptionIncludeBuilder {\r\n        this._includeCounter(\"\", name);\r\n        return this;\r\n    }\r\n\r\n    public includeCounters(names: string[]): ISubscriptionIncludeBuilder {\r\n        this._includeCounters(\"\", names);\r\n        return this;\r\n    }\r\n\r\n    public includeAllCounters(): ISubscriptionIncludeBuilder {\r\n        this._includeAllCounters(\"\");\r\n        return this;\r\n    }\r\n\r\n    public includeTimeSeries(name: string, type: TimeSeriesRangeType, time: TimeValue): ISubscriptionIncludeBuilder;\r\n    public includeTimeSeries(name: string, type: TimeSeriesRangeType, count: number): ISubscriptionIncludeBuilder;\r\n    public includeTimeSeries(names: string[], type: TimeSeriesRangeType, time: TimeValue): ISubscriptionIncludeBuilder;\r\n    public includeTimeSeries(names: string[], type: TimeSeriesRangeType, count: number): ISubscriptionIncludeBuilder;\r\n    public includeTimeSeries(nameOrNames: string | string[], type: TimeSeriesRangeType, timeOrCount: number | TimeValue): ISubscriptionIncludeBuilder {\r\n        if (TypeUtil.isArray(nameOrNames)) {\r\n            if (TypeUtil.isNumber(timeOrCount)) {\r\n                this._includeArrayOfTimeSeriesByRangeTypeAndCount(nameOrNames, type, timeOrCount);\r\n            } else { // names + time\r\n                this._includeArrayOfTimeSeriesByRangeTypeAndTime(nameOrNames, type, timeOrCount);\r\n            }\r\n        } else { // name\r\n            if (TypeUtil.isNumber(timeOrCount)) {\r\n                this._includeTimeSeriesByRangeTypeAndCount(\"\", nameOrNames, type, timeOrCount);\r\n            } else { // name + time\r\n                this._includeTimeSeriesByRangeTypeAndTime(\"\", nameOrNames, type, timeOrCount);\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n\r\n    public includeAllTimeSeries(type: TimeSeriesRangeType, time: TimeValue): ISubscriptionIncludeBuilder;\r\n    public includeAllTimeSeries(type: TimeSeriesRangeType, count: number): ISubscriptionIncludeBuilder;\r\n    public includeAllTimeSeries(type: TimeSeriesRangeType, timeOrCount: number | TimeValue): ISubscriptionIncludeBuilder {\r\n        if (TypeUtil.isNumber(timeOrCount)) {\r\n            this._includeTimeSeriesByRangeTypeAndCount(\"\", TIME_SERIES.ALL, type, timeOrCount);\r\n        } else {\r\n            this._includeTimeSeriesByRangeTypeAndTime(\"\", TIME_SERIES.ALL, type, timeOrCount);\r\n        }\r\n\r\n        return this;\r\n    }\r\n}"]}