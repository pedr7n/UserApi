{"version":3,"file":"ILoaderWithInclude.js","sourceRoot":"","sources":["../../../../../src/Documents/Session/Loaders/ILoaderWithInclude.ts"],"names":[],"mappings":"","sourcesContent":["import { DocumentType } from \"../../DocumentAbstractions.js\";\r\nimport { EntitiesCollectionObject } from \"../../../Types/index.js\";\r\n\r\nexport interface ILoaderWithInclude {\r\n\r\n    //TBD: overrides with expressions + maybe we TInclude, see:\r\n\r\n    /**\r\n     * Includes the specified path.\r\n     */\r\n    include(path: string): ILoaderWithInclude;\r\n\r\n    /**\r\n     * Loads the specified id.\r\n     */\r\n    load<TResult extends object>(id: string, documentType: DocumentType<TResult>): Promise<TResult | null>;\r\n\r\n    /**\r\n     * Loads the specified id.\r\n     */\r\n    load<TResult extends object>(\r\n        id: string,\r\n        documentType?: DocumentType<TResult>): Promise<TResult | null>;\r\n\r\n    /**\r\n     * Loads the specified ids.\r\n     */\r\n    load<TResult extends object>(\r\n        ids: string[],\r\n        documentType?: DocumentType<TResult>): Promise<EntitiesCollectionObject<TResult>>;\r\n}\r\n"]}