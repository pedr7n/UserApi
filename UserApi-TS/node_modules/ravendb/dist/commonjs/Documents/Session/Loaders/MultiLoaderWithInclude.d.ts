import { ILoaderWithInclude } from "./ILoaderWithInclude.js";
import { IDocumentSessionImpl } from "../IDocumentSession.js";
import { DocumentType } from "../../DocumentAbstractions.js";
import { EntitiesCollectionObject } from "../../../Types/index.js";
/**
 * Fluent implementation for specifying include paths
 * for loading documents
 */
export declare class MultiLoaderWithInclude implements ILoaderWithInclude {
    private _session;
    private _includes;
    /**
     * Includes the specified path.
     */
    include(path: string): ILoaderWithInclude;
    /**
     * Loads the specified id.
     */
    load<TResult extends object>(id: string, documentType?: DocumentType<TResult>): Promise<TResult | null>;
    /**
     * Loads the specified id.
     */
    load<TResult extends object>(id: string, documentType?: DocumentType<TResult>): Promise<TResult | null>;
    /**
     * Loads the specified ids.
     */
    load<TResult extends object>(ids: string[], documentType?: DocumentType<TResult>): Promise<EntitiesCollectionObject<TResult>>;
    /**
     * Initializes a new instance of the MultiLoaderWithInclude class
     */
    constructor(session: IDocumentSessionImpl);
}
//# sourceMappingURL=MultiLoaderWithInclude.d.ts.map