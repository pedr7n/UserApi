{"version":3,"file":"IQueryBase.js","sourceRoot":"","sources":["../../../../src/Documents/Session/IQueryBase.ts"],"names":[],"mappings":"","sourcesContent":["import { QueryOperator } from \"../Queries/QueryOperator.js\";\r\nimport { IndexQuery } from \"../Queries/IndexQuery.js\";\r\nimport { QueryStatistics } from \"./QueryStatistics.js\";\r\nimport { DocumentConventions } from \"../Conventions/DocumentConventions.js\";\r\nimport { QueryEventsEmitter } from \"./QueryEvents.js\";\r\nimport { ValueCallback } from \"../../Types/Callbacks.js\";\r\nimport { QueryTimings } from \"../Queries/Timings/QueryTimings.js\";\r\n\r\nexport interface IQueryBase<T, TSelf extends IQueryBase<T, TSelf>> extends QueryEventsEmitter {\r\n\r\n    /**\r\n     * Gets the document convention from the query session\r\n     */\r\n    conventions: DocumentConventions;\r\n\r\n    /**\r\n     * Disables caching for query results.\r\n     */\r\n    noCaching(): TSelf;\r\n\r\n    /**\r\n     * Disables tracking for queried entities by Raven's Unit of Work.\r\n     * Usage of TSelf option will prevent holding query results in memory.\r\n     */\r\n    noTracking(): TSelf;\r\n\r\n    /**\r\n     *  Enables calculation of timings for various parts of a query (Lucene search, loading documents, transforming\r\n     *  results). Default: false\r\n     * @param timings Reference to output parameter\r\n     * @return Query instance\r\n     */\r\n    timings(timings: ValueCallback<QueryTimings>): TSelf;\r\n\r\n    /**\r\n     * Provide statistics about the query, such as total count of matching records\r\n     */\r\n    statistics(statsCallback: (stats: QueryStatistics) => void): TSelf;\r\n\r\n    /**\r\n     * Select the default operator to use for TSelf query\r\n     */\r\n    usingDefaultOperator(queryOperator: QueryOperator): TSelf;\r\n\r\n    /**\r\n     * EXPERT ONLY: Instructs the query to wait for non stale results for the specified wait timeout.\r\n     * TSelf shouldn't be used outside of unit tests unless you are well aware of the implications\r\n     */\r\n    waitForNonStaleResults(): TSelf;\r\n\r\n    /**\r\n     * EXPERT ONLY: Instructs the query to wait for non stale results for the specified wait timeout.\r\n     * TSelf shouldn't be used outside of unit tests unless you are well aware of the implications\r\n     */\r\n    waitForNonStaleResults(waitTimeout: number): TSelf;\r\n\r\n    /**\r\n     * Create the index query object for TSelf query\r\n     */\r\n    getIndexQuery(): IndexQuery;\r\n\r\n    /**\r\n     * Add a named parameter to the query\r\n     */\r\n    addParameter(name: string, value: any): TSelf;\r\n}\r\n"]}