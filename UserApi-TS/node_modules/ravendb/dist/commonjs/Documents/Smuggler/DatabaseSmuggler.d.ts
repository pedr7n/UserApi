import { IDocumentStore } from "../IDocumentStore.js";
import { DatabaseSmugglerImportOptions } from "./DatabaseSmugglerImportOptions.js";
import { DatabaseSmugglerExportOptions } from "./DatabaseSmugglerExportOptions.js";
import { DatabaseSmugglerOptions } from "./DatabaseSmugglerOptions.js";
import { OperationCompletionAwaiter } from "../Operations/OperationCompletionAwaiter.js";
export declare class DatabaseSmuggler {
    private readonly _store;
    private readonly _databaseName;
    private readonly _requestExecutor;
    constructor(store: IDocumentStore);
    constructor(store: IDocumentStore, databaseName: string);
    forDatabase(databaseName: string): DatabaseSmuggler;
    export(options: DatabaseSmugglerExportOptions, toFile: string): Promise<OperationCompletionAwaiter>;
    private _export;
    importIncremental(options: DatabaseSmugglerImportOptions, fromDirectory: string): Promise<void>;
    static configureOptionsFromIncrementalImport(options: DatabaseSmugglerOptions): import("./DatabaseItemType.js").DatabaseItemType[];
    import(options: DatabaseSmugglerImportOptions, fromFile: string): Promise<OperationCompletionAwaiter>;
    private _import;
}
//# sourceMappingURL=DatabaseSmuggler.d.ts.map