{"version":3,"file":"AbstractCommonApiForIndexes.js","sourceRoot":"","sources":["../../../../src/Documents/Indexes/AbstractCommonApiForIndexes.ts"],"names":[],"mappings":";;;AAGA,MAAsB,2BAA2B;IAC7C,iBAAiB,CAAyB;IAC1C,oBAAoB,CAAuB;IAC3C,aAAa,CAAqB;IAElC;QACI,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;IAC5B,CAAC;IAED;;OAEG;IACH,IAAW,WAAW;QAClB,OAAO,KAAK,CAAC;IACjB,CAAC;IAED;;OAEG;IACI,YAAY;QACf,OAAO,2BAA2B,CAAC,mBAAmB,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IAClF,CAAC;IAEM,MAAM,CAAC,mBAAmB,CAAC,aAAqB;QACnD,OAAO,aAAa,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;IAC5C,CAAC;CACJ;AA1BD,kEA0BC","sourcesContent":["import { IndexConfiguration } from \"./IndexDefinition.js\";\r\nimport { AdditionalAssembly } from \"./AdditionalAssembly.js\";\r\n\r\nexport abstract class AbstractCommonApiForIndexes {\r\n    additionalSources: Record<string, string>;\r\n    additionalAssemblies: AdditionalAssembly[];\r\n    configuration: IndexConfiguration;\r\n\r\n    protected constructor() {\r\n        this.configuration = {};\r\n    }\r\n\r\n    /**\r\n     * Gets a value indicating whether this instance is map reduce index definition\r\n     */\r\n    public get isMapReduce(): boolean {\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Generates index name from type name replacing all _ with /\r\n     */\r\n    public getIndexName() {\r\n        return AbstractCommonApiForIndexes.getIndexNameForCtor(this.constructor.name);\r\n    }\r\n\r\n    public static getIndexNameForCtor(indexCtorName: string) {\r\n        return indexCtorName.replace(/_/g, \"/\");\r\n    }\r\n}"]}