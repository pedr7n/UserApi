{"version":3,"file":"Spatial.js","sourceRoot":"","sources":["../../../../src/Documents/Indexes/Spatial.ts"],"names":[],"mappings":"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","sourcesContent":["import { throwError } from \"../../Exceptions/index.js\";\r\n\r\n// about 4.78 meters at equator, should be good enough \r\n// (see: http://unterbahn.com/2009/11/metric-dimensions-of-geohash-partitions-at-the-equator/)\r\nexport const DEFAULT_GEOHASH_LEVEL = 9;\r\n\r\n// about 4.78 meters at equator, should be good enough\r\nexport const DEFAULT_QUAD_TREE_LEVEL = 23;\r\n\r\nexport type SpatialFieldType = \"Geography\" | \"Cartesian\";\r\n\r\nexport type SpatialSearchStrategy =\r\n    \"GeohashPrefixTree\"\r\n    | \"QuadPrefixTree\"\r\n    | \"BoundingBox\";\r\n\r\nexport type SpatialUnits = \"Kilometers\" | \"Miles\";\r\n\r\nexport class SpatialOptions {\r\n\r\n    public type: SpatialFieldType;\r\n    public strategy: SpatialSearchStrategy;\r\n    public maxTreeLevel: number;\r\n    public minX: number;\r\n    public maxX: number;\r\n    public minY: number;\r\n    public maxY: number;\r\n\r\n    // Circle radius units, only used for geography  indexes\r\n    public units: SpatialUnits;\r\n\r\n    public constructor(options?: SpatialOptions) {\r\n        options = options || {} as SpatialOptions;\r\n        this.type = options.type || \"Geography\";\r\n        this.strategy = options.strategy || \"GeohashPrefixTree\";\r\n        this.maxTreeLevel = options.maxTreeLevel || DEFAULT_GEOHASH_LEVEL;\r\n        this.minX = options.minX || -180;\r\n        this.maxX = options.maxX || 180;\r\n        this.minY = options.minY || -90;\r\n        this.maxY = options.maxY || 90;\r\n        this.units = options.units || \"Kilometers\";\r\n    }\r\n}\r\n\r\nexport class SpatialOptionsFactory {\r\n    public geography(): GeographySpatialOptionsFactory {\r\n        return new GeographySpatialOptionsFactory();\r\n    }\r\n\r\n    public cartesian(): CartesianSpatialOptionsFactory {\r\n        return new CartesianSpatialOptionsFactory();\r\n    }\r\n}\r\n\r\nexport class CartesianSpatialOptionsFactory {\r\n\r\n    public boundingBoxIndex(): SpatialOptions {\r\n        const opts: SpatialOptions = new SpatialOptions();\r\n        opts.type = \"Cartesian\";\r\n        opts.strategy = \"BoundingBox\";\r\n        return opts;\r\n    }\r\n\r\n    public quadPrefixTreeIndex(maxTreeLevel: number, bounds: SpatialBounds): SpatialOptions {\r\n        if (maxTreeLevel === 0) {\r\n            throwError(\"InvalidArgumentException\", \"maxTreeLevel can't be 0.\");\r\n        }\r\n\r\n        const opts = new SpatialOptions();\r\n        opts.type = \"Cartesian\";\r\n        opts.maxTreeLevel = maxTreeLevel;\r\n        opts.strategy = \"QuadPrefixTree\";\r\n        opts.minX = bounds.minX;\r\n        opts.minY = bounds.minY;\r\n        opts.maxX = bounds.maxX;\r\n        opts.maxY = bounds.maxY;\r\n\r\n        return opts;\r\n    }\r\n}\r\n\r\nexport class SpatialBounds {\r\n    public minX: number;\r\n    public maxX: number;\r\n    public minY: number;\r\n    public maxY: number;\r\n\r\n    public constructor(minX: number, minY: number, maxX: number, maxY: number) {\r\n        this.minX = minX;\r\n        this.maxX = maxX;\r\n        this.minY = minY;\r\n        this.maxY = maxY;\r\n    }\r\n}\r\n\r\nexport class GeographySpatialOptionsFactory {\r\n\r\n    /**\r\n     * Defines a Geohash Prefix Tree index using a default Max Tree Level {@link SpatialOptions}\r\n     */\r\n    public defaultOptions(circleRadiusUnits: SpatialUnits = \"Kilometers\"): SpatialOptions {\r\n        return this.geohashPrefixTreeIndex(0, circleRadiusUnits);\r\n    }\r\n\r\n    public boundingBoxIndex(circleRadiusUnits: SpatialUnits = \"Kilometers\"): SpatialOptions {\r\n        const ops = new SpatialOptions();\r\n        ops.type = \"Geography\";\r\n        ops.strategy = \"BoundingBox\";\r\n        ops.units = circleRadiusUnits;\r\n        return ops;\r\n    }\r\n\r\n    public geohashPrefixTreeIndex(maxTreeLevel: number, circleRadiusUnits: SpatialUnits = \"Kilometers\"): SpatialOptions {\r\n        if (maxTreeLevel === 0) {\r\n            maxTreeLevel = DEFAULT_GEOHASH_LEVEL;\r\n        }\r\n\r\n        const opts = new SpatialOptions();\r\n        opts.type = \"Geography\";\r\n        opts.maxTreeLevel = maxTreeLevel;\r\n        opts.strategy = \"GeohashPrefixTree\";\r\n        opts.units = circleRadiusUnits;\r\n        return opts;\r\n    }\r\n\r\n    public quadPrefixTreeIndex(maxTreeLevel: number, circleRadiusUnits: SpatialUnits = \"Kilometers\"): SpatialOptions {\r\n        if (maxTreeLevel === 0) {\r\n            maxTreeLevel = DEFAULT_QUAD_TREE_LEVEL;\r\n        }\r\n\r\n        const opts = new SpatialOptions();\r\n        opts.type = \"Geography\";\r\n        opts.maxTreeLevel = maxTreeLevel;\r\n        opts.strategy = \"QuadPrefixTree\";\r\n        opts.units = circleRadiusUnits;\r\n        return opts;\r\n    }\r\n}\r\n\r\nexport type SpatialRelation =\r\n    \"Within\"\r\n    | \"Contains\"\r\n    | \"Disjoint\"\r\n    | \"Intersects\";\r\n"]}