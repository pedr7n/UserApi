{"version":3,"file":"DatabaseHealthCheckOperation.js","sourceRoot":"","sources":["../../../../src/Documents/Operations/DatabaseHealthCheckOperation.ts"],"names":[],"mappings":";;;AAGA,gEAA0D;AAG1D,MAAa,4BAA4B;IACrC,UAAU,CAAC,WAAgC;QACvC,OAAO,IAAI,0BAA0B,EAAE,CAAC;IAC5C,CAAC;IAED,IAAW,UAAU;QACjB,OAAO,eAAe,CAAC;IAC3B,CAAC;CACJ;AARD,oEAQC;AAED,MAAM,0BAA2B,SAAQ,8BAAkB;IAEvD;QACI,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;IAC1B,CAAC;IAED,IAAI,aAAa;QACb,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,aAAa,CAAC,IAAgB;QAC1B,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,aAAa,GAAG,IAAI,CAAC,QAAQ,GAAG,cAAc,CAAC;QAEtE,OAAO;YACH,MAAM,EAAE,KAAK;YACb,GAAG;SACN,CAAA;IACL,CAAC;CACJ","sourcesContent":["import { IMaintenanceOperation, OperationResultType } from \"./OperationAbstractions.js\";\r\nimport { HttpRequestParameters } from \"../../Primitives/Http.js\";\r\nimport { DocumentConventions } from \"../Conventions/DocumentConventions.js\";\r\nimport { RavenCommand } from \"../../Http/RavenCommand.js\";\r\nimport { ServerNode } from \"../../Http/ServerNode.js\";\r\n\r\nexport class DatabaseHealthCheckOperation implements IMaintenanceOperation<void> {\r\n    getCommand(conventions: DocumentConventions): RavenCommand<void> {\r\n        return new DatabaseHealthCheckCommand();\r\n    }\r\n\r\n    public get resultType(): OperationResultType {\r\n        return \"CommandResult\";\r\n    }\r\n}\r\n\r\nclass DatabaseHealthCheckCommand extends RavenCommand<void> {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.timeout = 15_000;\r\n    }\r\n\r\n    get isReadRequest(): boolean {\r\n        return true;\r\n    }\r\n\r\n    createRequest(node: ServerNode): HttpRequestParameters {\r\n        const uri = node.url + \"/databases/\" + node.database + \"/healthcheck\";\r\n\r\n        return {\r\n            method: \"GET\",\r\n            uri\r\n        }\r\n    }\r\n}"]}