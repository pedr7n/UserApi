{"version":3,"file":"GetReplicationHubAccessOperation.js","sourceRoot":"","sources":["../../../../../src/Documents/Operations/Replication/GetReplicationHubAccessOperation.ts"],"names":[],"mappings":";;;AAGA,mEAA6D;AAC7D,kEAA4D;AAC5D,2DAA0D;AAK1D,MAAa,gCAAgC;IACxB,QAAQ,CAAS;IACjB,MAAM,CAAS;IACf,SAAS,CAAS;IAEnC,YAAmB,OAAe,EAAE,QAAgB,CAAC,EAAE,WAAmB,EAAE;QACxE,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QACxB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;IAC9B,CAAC;IAED,UAAU,CAAC,WAAgC;QACvC,OAAO,IAAI,8BAA8B,CAAC,WAAW,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IACvG,CAAC;IAED,IAAW,UAAU;QACjB,OAAO,eAAe,CAAC;IAC3B,CAAC;CACJ;AAlBD,4EAkBC;AAED,MAAM,8BAA+B,SAAQ,8BAA4C;IACpE,YAAY,CAAsB;IAClC,QAAQ,CAAS;IACjB,MAAM,CAAS;IACf,SAAS,CAAS;IAEnC,YAAmB,WAAgC,EAAE,OAAe,EAAE,KAAa,EAAE,QAAgB;QACjG,KAAK,EAAE,CAAC;QAER,IAAI,0BAAU,CAAC,kBAAkB,CAAC,OAAO,CAAC,EAAE,CAAC;YACzC,IAAA,qBAAU,EAAC,0BAA0B,EAAE,qCAAqC,CAAC,CAAC;QAClF,CAAC;QAED,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;QAChC,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QACxB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;IAC9B,CAAC;IAED,IAAI,aAAa;QACb,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,aAAa,CAAC,IAAgB;QAC1B,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,aAAa,GAAG,IAAI,CAAC,QAAQ;cAC9C,gDAAgD,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC;cACjF,SAAS,GAAG,IAAI,CAAC,MAAM;cACvB,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC;QAEpC,OAAO;YACH,GAAG;YACH,MAAM,EAAE,KAAK;SAChB,CAAA;IACL,CAAC;IAED,KAAK,CAAC,gBAAgB,CAAC,UAAkB,EAAE,SAAkB;QACzD,IAAI,CAAC,UAAU,EAAE,CAAC;YACd,OAAO;QACX,CAAC;QAED,IAAI,IAAI,GAAW,IAAI,CAAC;QACxB,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAA8C,CAAC,CAAC,EAAE,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QAE/H,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,iBAAiB,CAAoB,UAAU,EAAE;YAC1F,WAAW,EAAE;gBACT,oBAAoB,EAAE,MAAM;gBAC5B,qBAAqB,EAAE,MAAM;aAChC;SACJ,CAAC,CAAC,OAAO,CAAC;QAEX,OAAO,IAAI,CAAC;IAChB,CAAC;CACJ","sourcesContent":["import { IMaintenanceOperation, OperationResultType } from \"../OperationAbstractions.js\";\r\nimport { DetailedReplicationHubAccess } from \"./DetailedReplicationHubAccess.js\";\r\nimport { DocumentConventions } from \"../../Conventions/DocumentConventions.js\";\r\nimport { RavenCommand } from \"../../../Http/RavenCommand.js\";\r\nimport { StringUtil } from \"../../../Utility/StringUtil.js\";\r\nimport { throwError } from \"../../../Exceptions/index.js\";\r\nimport { ServerNode } from \"../../../Http/ServerNode.js\";\r\nimport { HttpRequestParameters } from \"../../../Primitives/Http.js\";\r\nimport { Stream } from \"node:stream\";\r\n\r\nexport class GetReplicationHubAccessOperation implements IMaintenanceOperation<DetailedReplicationHubAccess[]> {\r\n    private readonly _hubName: string;\r\n    private readonly _start: number;\r\n    private readonly _pageSize: number;\r\n\r\n    public constructor(hubName: string, start: number = 0, pageSize: number = 25) {\r\n        this._hubName = hubName;\r\n        this._start = start;\r\n        this._pageSize = pageSize;\r\n    }\r\n\r\n    getCommand(conventions: DocumentConventions): RavenCommand<DetailedReplicationHubAccess[]> {\r\n        return new GetReplicationHubAccessCommand(conventions, this._hubName, this._start, this._pageSize);\r\n    }\r\n\r\n    public get resultType(): OperationResultType {\r\n        return \"CommandResult\";\r\n    }\r\n}\r\n\r\nclass GetReplicationHubAccessCommand extends RavenCommand<DetailedReplicationHubAccess[]> {\r\n    private readonly _conventions: DocumentConventions;\r\n    private readonly _hubName: string;\r\n    private readonly _start: number;\r\n    private readonly _pageSize: number;\r\n\r\n    public constructor(conventions: DocumentConventions, hubName: string, start: number, pageSize: number) {\r\n        super();\r\n\r\n        if (StringUtil.isNullOrWhitespace(hubName)) {\r\n            throwError(\"InvalidArgumentException\", \"Value cannot be null or whitespace.\");\r\n        }\r\n\r\n        this._conventions = conventions;\r\n        this._hubName = hubName;\r\n        this._start = start;\r\n        this._pageSize = pageSize;\r\n    }\r\n\r\n    get isReadRequest(): boolean {\r\n        return true;\r\n    }\r\n\r\n    createRequest(node: ServerNode): HttpRequestParameters {\r\n        const uri = node.url + \"/databases/\" + node.database\r\n            + \"/admin/tasks/pull-replication/hub/access?name=\" + this._urlEncode(this._hubName)\r\n            + \"&start=\" + this._start\r\n            + \"&pageSize=\" + this._pageSize;\r\n\r\n        return {\r\n            uri,\r\n            method: \"GET\"\r\n        }\r\n    }\r\n\r\n    async setResponseAsync(bodyStream: Stream, fromCache: boolean): Promise<string> {\r\n        if (!bodyStream) {\r\n            return;\r\n        }\r\n\r\n        let body: string = null;\r\n        const rawResults = await this._defaultPipeline<{ results: DetailedReplicationHubAccess[] }>(_ => body = _).process(bodyStream);\r\n\r\n        this.result = this._conventions.objectMapper.fromObjectLiteral<typeof rawResults>(rawResults, {\r\n            nestedTypes: {\r\n                \"results[].notAfter\": \"date\",\r\n                \"results[].notBefore\": \"date\"\r\n            }\r\n        }).results;\r\n\r\n        return body;\r\n    }\r\n}\r\n\r\n"]}