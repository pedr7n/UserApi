{"version":3,"file":"GetStatisticsOperation.js","sourceRoot":"","sources":["../../../../src/Documents/Operations/GetStatisticsOperation.ts"],"names":[],"mappings":";;;AAEA,gEAA0D;AAM1D,MAAa,sBAAsB;IAE/B,IAAW,UAAU;QACjB,OAAO,eAAe,CAAC;IAC3B,CAAC;IAEgB,SAAS,CAAS;IAClB,QAAQ,CAAS;IAKlC,YAAmB,QAAiB,EAAE,OAAgB;QAClD,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;IAC5B,CAAC;IAEM,UAAU,CAAC,WAAgC;QAC9C,OAAO,IAAI,oBAAoB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IACnE,CAAC;CACJ;AApBD,wDAoBC;AAED,MAAa,oBAAqB,SAAQ,8BAAgC;IAErD,SAAS,CAAS;IAEnC,YAAmB,QAAiB,EAAE,OAAgB;QAClD,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,gBAAgB,GAAG,OAAO,CAAC;QAEhC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;IAC1B,CAAC;IAEM,aAAa,CAAC,IAAgB;QACjC,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,cAAc,IAAI,CAAC,QAAQ,QAAQ,CAAC;QACzD,IAAI,IAAI,CAAC,SAAS,EAAE,CAAC;YACjB,GAAG,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC;QAChC,CAAC;QAED,OAAO,EAAE,GAAG,EAAE,CAAC;IACnB,CAAC;IAEM,KAAK,CAAC,gBAAgB,CAAC,UAAkB,EAAE,SAAkB;QAChE,OAAO,IAAI,CAAC,0BAA0B,CAAC,UAAU,CAAC,CAAC;IACvD,CAAC;IAED,IAAW,aAAa;QACpB,OAAO,IAAI,CAAC;IAChB,CAAC;CACJ;AA5BD,oDA4BC","sourcesContent":["import { IMaintenanceOperation, OperationResultType } from \"./OperationAbstractions.js\";\r\nimport { ServerNode } from \"../../Http/ServerNode.js\";\r\nimport { RavenCommand } from \"../../Http/RavenCommand.js\";\r\nimport { HttpRequestParameters } from \"../../Primitives/Http.js\";\r\nimport { DocumentConventions } from \"../Conventions/DocumentConventions.js\";\r\nimport { DatabaseStatistics } from \"./DatabaseStatistics.js\";\r\nimport { Stream } from \"node:stream\";\r\n\r\nexport class GetStatisticsOperation implements IMaintenanceOperation<DatabaseStatistics> {\r\n\r\n    public get resultType(): OperationResultType {\r\n        return \"CommandResult\";\r\n    }\r\n\r\n    private readonly _debugTag: string;\r\n    private readonly _nodeTag: string;\r\n\r\n    public constructor()\r\n    public constructor(debugTag: string)\r\n    public constructor(debugTag: string, nodeTag: string)\r\n    public constructor(debugTag?: string, nodeTag?: string) {\r\n        this._debugTag = debugTag;\r\n        this._nodeTag = nodeTag;\r\n    }\r\n\r\n    public getCommand(conventions: DocumentConventions): RavenCommand<DatabaseStatistics> {\r\n        return new GetStatisticsCommand(this._debugTag, this._nodeTag);\r\n    }\r\n}\r\n\r\nexport class GetStatisticsCommand extends RavenCommand<DatabaseStatistics> {\r\n\r\n    private readonly _debugTag: string;\r\n\r\n    public constructor(debugTag?: string, nodeTag?: string) {\r\n        super();\r\n        this._debugTag = debugTag;\r\n        this._selectedNodeTag = nodeTag;\r\n\r\n        this.timeout = 15_000;\r\n    }\r\n\r\n    public createRequest(node: ServerNode): HttpRequestParameters {\r\n        let uri = `${node.url}/databases/${node.database}/stats`;\r\n        if (this._debugTag) {\r\n            uri += \"?\" + this._debugTag;\r\n        }\r\n\r\n        return { uri };\r\n    }\r\n\r\n    public async setResponseAsync(bodyStream: Stream, fromCache: boolean): Promise<string> {\r\n        return this._parseResponseDefaultAsync(bodyStream);\r\n    }\r\n\r\n    public get isReadRequest() {\r\n        return true;\r\n    }\r\n}\r\n"]}