{"version":3,"file":"CompareExchangeValueJsonConverter.js","sourceRoot":"","sources":["../../../../../src/Documents/Operations/CompareExchange/CompareExchangeValueJsonConverter.ts"],"names":[],"mappings":";;;AAAA,8DAAwD;AAExD,mEAA6D;AAE7D,MAAa,iCAAiC;IACnC,MAAM,CAAC,aAAa,CAAC,KAAa,EAAE,WAAgC;QACvE,IAAI,sBAAQ,CAAC,iBAAiB,CAAC,KAAK,CAAC,EAAE,CAAC;YACpC,OAAO,IAAI,CAAC;QAChB,CAAC;QAED,IAAI,sBAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC;YAC9B,OAAO,KAAK,CAAC;QACjB,CAAC;QAED,OAAO,8BAAY,CAAC,mBAAmB,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;IAChE,CAAC;CACJ;AAZD,8EAYC","sourcesContent":["import { TypeUtil } from \"../../../Utility/TypeUtil.js\";\r\nimport { DocumentConventions } from \"../../Conventions/DocumentConventions.js\";\r\nimport { EntityToJson } from \"../../Session/EntityToJson.js\";\r\n\r\nexport class CompareExchangeValueJsonConverter {\r\n    public static convertToJson(value: object, conventions: DocumentConventions) {\r\n        if (TypeUtil.isNullOrUndefined(value)) {\r\n            return null;\r\n        }\r\n\r\n        if (TypeUtil.isPrimitive(value)) {\r\n            return value;\r\n        }\r\n\r\n        return EntityToJson.convertEntityToJson(value, conventions);\r\n    }\r\n}\r\n"]}