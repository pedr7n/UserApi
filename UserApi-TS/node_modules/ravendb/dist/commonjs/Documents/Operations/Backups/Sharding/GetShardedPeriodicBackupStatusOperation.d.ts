import { IMaintenanceOperation, OperationResultType } from "../../OperationAbstractions.js";
import { AbstractGetPeriodicBackupStatusOperationResult } from "../AbstractGetPeriodicBackupStatusOperationResult.js";
import { PeriodicBackupStatus } from "../PeriodicBackupStatus.js";
import { DocumentConventions } from "../../../Conventions/DocumentConventions.js";
import { RavenCommand } from "../../../../Http/RavenCommand.js";
export declare class GetShardedPeriodicBackupStatusOperation implements IMaintenanceOperation<GetShardedPeriodicBackupStatusOperationResult> {
    private readonly _taskId;
    constructor(taskId: number);
    get resultType(): OperationResultType;
    getCommand(conventions: DocumentConventions): RavenCommand<GetShardedPeriodicBackupStatusOperationResult>;
}
export interface GetShardedPeriodicBackupStatusOperationResult extends AbstractGetPeriodicBackupStatusOperationResult {
    statuses: Record<number, PeriodicBackupStatus>;
}
//# sourceMappingURL=GetShardedPeriodicBackupStatusOperation.d.ts.map