{"version":3,"file":"RestoreBackupOperation.js","sourceRoot":"","sources":["../../../../../src/Documents/Operations/Backups/RestoreBackupOperation.ts"],"names":[],"mappings":";;;AAIA,mEAA6D;AAG7D,2DAA0D;AAE1D,MAAa,sBAAsB;IACd,qBAAqB,CAAiC;IACtD,QAAQ,CAAS;IAElC,YAAmB,oBAAoD,EAAE,OAAgB;QACrF,IAAI,CAAC,qBAAqB,GAAG,oBAAoB,CAAC;QAClD,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;IAC5B,CAAC;IAEM,UAAU,CAAC,WAAgC;QAC9C,OAAO,IAAI,oBAAoB,CAAC,IAAI,CAAC,qBAAqB,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC/E,CAAC;IAED,IAAW,UAAU;QACjB,OAAO,aAAa,CAAC;IACzB,CAAC;IAED,IAAW,OAAO;QACd,OAAO,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;CACJ;AApBD,wDAoBC;AAED,MAAM,oBAAqB,SAAQ,8BAA+B;IAC7C,qBAAqB,CAAiC;IAEvE,YAAmB,oBAAoD,EAAE,OAAe;QACpF,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,oBAAoB,EAAE,CAAC;YACxB,IAAA,qBAAU,EAAC,0BAA0B,EAAE,qCAAqC,CAAC,CAAC;QAClF,CAAC;QAED,IAAI,CAAC,qBAAqB,GAAG,oBAAoB,CAAC;QAClD,IAAI,CAAC,gBAAgB,GAAG,OAAO,CAAC;IACpC,CAAC;IAED,IAAI,aAAa;QACb,OAAO,KAAK,CAAC;IACjB,CAAC;IAED,aAAa,CAAC,IAAgB;QAC1B,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,yBAAyB,CAAC;QAEjD,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;QAEpE,OAAO;YACH,GAAG;YACH,MAAM,EAAE,MAAM;YACd,IAAI;YACJ,OAAO,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,KAAK,EAAE;SACjD,CAAA;IACL,CAAC;IAED,KAAK,CAAC,gBAAgB,CAAC,UAAkB,EAAE,SAAkB;QACzD,IAAI,CAAC,UAAU,EAAE,CAAC;YACd,IAAI,CAAC,qBAAqB,EAAE,CAAC;QACjC,CAAC;QAED,OAAO,IAAI,CAAC,0BAA0B,CAAC,UAAU,CAAC,CAAC;IACvD,CAAC;CACJ","sourcesContent":["import { IServerOperation, OperationIdResult, OperationResultType } from \"../OperationAbstractions.js\";\r\nimport { HttpRequestParameters } from \"../../../Primitives/Http.js\";\r\nimport { Stream } from \"node:stream\";\r\nimport { DocumentConventions } from \"../../Conventions/DocumentConventions.js\";\r\nimport { RavenCommand } from \"../../../Http/RavenCommand.js\";\r\nimport { ServerNode } from \"../../../Http/ServerNode.js\";\r\nimport { RestoreBackupConfigurationBase } from \"./RestoreBackupConfigurationBase.js\";\r\nimport { throwError } from \"../../../Exceptions/index.js\";\r\n\r\nexport class RestoreBackupOperation implements IServerOperation<OperationIdResult> {\r\n    private readonly _restoreConfiguration: RestoreBackupConfigurationBase;\r\n    private readonly _nodeTag: string;\r\n\r\n    public constructor(restoreConfiguration: RestoreBackupConfigurationBase, nodeTag?: string) {\r\n        this._restoreConfiguration = restoreConfiguration;\r\n        this._nodeTag = nodeTag;\r\n    }\r\n\r\n    public getCommand(conventions: DocumentConventions): RavenCommand<OperationIdResult> {\r\n        return new RestoreBackupCommand(this._restoreConfiguration, this._nodeTag);\r\n    }\r\n\r\n    public get resultType(): OperationResultType {\r\n        return \"OperationId\";\r\n    }\r\n\r\n    public get nodeTag(): string {\r\n        return this._nodeTag;\r\n    }\r\n}\r\n\r\nclass RestoreBackupCommand extends RavenCommand<OperationIdResult> {\r\n    private readonly _restoreConfiguration: RestoreBackupConfigurationBase;\r\n\r\n    public constructor(restoreConfiguration: RestoreBackupConfigurationBase, nodeTag: string) {\r\n        super();\r\n\r\n        if (!restoreConfiguration) {\r\n            throwError(\"InvalidArgumentException\", \"RestoreConfiguration cannot be null\");\r\n        }\r\n\r\n        this._restoreConfiguration = restoreConfiguration;\r\n        this._selectedNodeTag = nodeTag;\r\n    }\r\n\r\n    get isReadRequest(): boolean {\r\n        return false;\r\n    }\r\n\r\n    createRequest(node: ServerNode): HttpRequestParameters {\r\n        const uri = node.url + \"/admin/restore/database\";\r\n\r\n        const body = this._serializer.serialize(this._restoreConfiguration);\r\n\r\n        return {\r\n            uri,\r\n            method: \"POST\",\r\n            body,\r\n            headers: this._headers().typeAppJson().build()\r\n        }\r\n    }\r\n\r\n    async setResponseAsync(bodyStream: Stream, fromCache: boolean): Promise<string> {\r\n        if (!bodyStream) {\r\n            this._throwInvalidResponse();\r\n        }\r\n\r\n        return this._parseResponseDefaultAsync(bodyStream);\r\n    }\r\n}\r\n"]}