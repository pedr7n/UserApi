import { IMaintenanceOperation, OperationResultType } from "../OperationAbstractions.js";
import { GetPeriodicBackupStatusOperationResult } from "./GetPeriodicBackupStatusOperationResult.js";
import { DocumentConventions } from "../../Conventions/DocumentConventions.js";
import { RavenCommand } from "../../../Http/RavenCommand.js";
import { PeriodicBackupStatus } from "./PeriodicBackupStatus.js";
import { ServerResponse } from "../../../Types/index.js";
export declare class GetPeriodicBackupStatusOperation implements IMaintenanceOperation<GetPeriodicBackupStatusOperationResult> {
    private readonly _taskId;
    constructor(taskId: number);
    get resultType(): OperationResultType;
    getCommand(conventions: DocumentConventions): RavenCommand<GetPeriodicBackupStatusOperationResult>;
}
export declare function revivePeriodicBackupStatus(status: ServerResponse<PeriodicBackupStatus>): PeriodicBackupStatus;
//# sourceMappingURL=GetPeriodicBackupStatusOperation.d.ts.map