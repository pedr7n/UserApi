{"version":3,"file":"RawTimeSeriesPolicy.js","sourceRoot":"","sources":["../../../../../src/Documents/Operations/TimeSeries/RawTimeSeriesPolicy.ts"],"names":[],"mappings":";;;AAAA,+DAAyD;AACzD,mEAA6D;AAC7D,2DAA0D;AAG1D,MAAa,mBAAoB,SAAQ,sCAAgB;IAC9C,MAAM,CAAC,aAAa,GAAG,WAAW,CAAC,CAAC,qBAAqB;IAEzD,MAAM,CAAC,cAAc,GAAG,IAAI,mBAAmB,EAAE,CAAC;IAIzD,YAAmB,aAAyB;QACxC,IAAI,aAAa,IAAI,aAAa,CAAC,SAAS,CAAC,wBAAS,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;YAChE,IAAA,qBAAU,EAAC,0BAA0B,EAAE,2CAA2C,CAAC,CAAC;QACxF,CAAC;QAED,KAAK,CAAC,mBAAmB,CAAC,aAAa,EAAE,wBAAS,CAAC,SAAS,EAAE,aAAa,IAAI,wBAAS,CAAC,SAAS,CAAC,CAAC;QACpG,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,CAAC,qCAAqC;IACtE,CAAC;IAEM,MAAM,CAAC,KAAK,CAAC,MAA2B;QAC3C,MAAM,MAAM,GAAG,IAAI,mBAAmB,EAAE,CAAC;QACzC,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;QAC1B,MAAM,CAAC,eAAe,GAAG,wBAAS,CAAC,KAAK,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;QACjE,MAAM,CAAC,aAAa,GAAG,wBAAS,CAAC,KAAK,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;QAC7D,OAAO,MAAM,CAAC;IAClB,CAAC;;AAtBL,kDAuBC","sourcesContent":["import { TimeSeriesPolicy } from \"./TimeSeriesPolicy.js\";\r\nimport { TimeValue } from \"../../../Primitives/TimeValue.js\";\r\nimport { throwError } from \"../../../Exceptions/index.js\";\r\nimport { TimeSeriesPolicyRaw } from \"./RawTimeSeriesTypes.js\";\r\n\r\nexport class RawTimeSeriesPolicy extends TimeSeriesPolicy {\r\n    public static POLICY_STRING = \"rawpolicy\"; // must be lower case\r\n\r\n    public static DEFAULT_POLICY = new RawTimeSeriesPolicy();\r\n\r\n    public constructor()\r\n    public constructor(retentionTime: TimeValue)\r\n    public constructor(retentionTime?: TimeValue) {\r\n        if (retentionTime && retentionTime.compareTo(TimeValue.ZERO) <= 0) {\r\n            throwError(\"InvalidArgumentException\", \"Retention time must be greater than zero.\");\r\n        }\r\n\r\n        super(RawTimeSeriesPolicy.POLICY_STRING, TimeValue.MAX_VALUE, retentionTime || TimeValue.MAX_VALUE);\r\n        this.aggregationTime = null; // hack - we need to class super here\r\n    }\r\n\r\n    public static parse(policy: TimeSeriesPolicyRaw) {\r\n        const result = new RawTimeSeriesPolicy();\r\n        result.name = policy.Name;\r\n        result.aggregationTime = TimeValue.parse(policy.AggregationTime);\r\n        result.retentionTime = TimeValue.parse(policy.RetentionTime);\r\n        return result;\r\n    }\r\n}"]}