"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RawTimeSeriesPolicy = void 0;
const TimeSeriesPolicy_js_1 = require("./TimeSeriesPolicy.js");
const TimeValue_js_1 = require("../../../Primitives/TimeValue.js");
const index_js_1 = require("../../../Exceptions/index.js");
class RawTimeSeriesPolicy extends TimeSeriesPolicy_js_1.TimeSeriesPolicy {
    static POLICY_STRING = "rawpolicy"; // must be lower case
    static DEFAULT_POLICY = new RawTimeSeriesPolicy();
    constructor(retentionTime) {
        if (retentionTime && retentionTime.compareTo(TimeValue_js_1.TimeValue.ZERO) <= 0) {
            (0, index_js_1.throwError)("InvalidArgumentException", "Retention time must be greater than zero.");
        }
        super(RawTimeSeriesPolicy.POLICY_STRING, TimeValue_js_1.TimeValue.MAX_VALUE, retentionTime || TimeValue_js_1.TimeValue.MAX_VALUE);
        this.aggregationTime = null; // hack - we need to class super here
    }
    static parse(policy) {
        const result = new RawTimeSeriesPolicy();
        result.name = policy.Name;
        result.aggregationTime = TimeValue_js_1.TimeValue.parse(policy.AggregationTime);
        result.retentionTime = TimeValue_js_1.TimeValue.parse(policy.RetentionTime);
        return result;
    }
}
exports.RawTimeSeriesPolicy = RawTimeSeriesPolicy;
//# sourceMappingURL=RawTimeSeriesPolicy.js.map