{"version":3,"file":"ConfigureTimeSeriesOperation.js","sourceRoot":"","sources":["../../../../../src/Documents/Operations/TimeSeries/ConfigureTimeSeriesOperation.ts"],"names":[],"mappings":";;;AAGA,2DAA0D;AAG1D,4EAAsE;AAEtE,mEAA6D;AAI7D,MAAa,4BAA4B;IACpB,cAAc,CAA0B;IAEzD,YAAmB,aAAsC;QACrD,IAAI,CAAC,aAAa,EAAE,CAAC;YACjB,IAAA,qBAAU,EAAC,0BAA0B,EAAE,8BAA8B,CAAC,CAAC;QAC3E,CAAC;QAED,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC;IACxC,CAAC;IAED,IAAW,UAAU;QACjB,OAAO,eAAe,CAAC;IAC3B,CAAC;IAED,UAAU,CAAC,WAAgC;QACvC,OAAO,IAAI,0BAA0B,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IAC/D,CAAC;CACJ;AAlBD,oEAkBC;AAED,MAAM,0BAA2B,SAAQ,8BAAgD;IACpE,cAAc,CAA0B;IAEzD,YAAmB,aAAsC;QACrD,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC;IACxC,CAAC;IAED,IAAI,aAAa;QACb,OAAO,KAAK,CAAC;IACjB,CAAC;IAED,aAAa,CAAC,IAAgB;QAC1B,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,aAAa,GAAG,IAAI,CAAC,QAAQ,GAAG,0BAA0B,CAAC;QAElF,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,CAAC,CAAC;QAEzE,OAAO;YACH,GAAG;YACH,MAAM,EAAE,MAAM;YACd,OAAO,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,KAAK,EAAE;YAC9C,IAAI;SACP,CAAA;IACL,CAAC;IAED,KAAK,CAAC,gBAAgB,CAAC,UAAkB,EAAE,SAAkB;QACzD,IAAI,CAAC,UAAU,EAAE,CAAC;YACd,IAAI,CAAC,qBAAqB,EAAE,CAAC;QACjC,CAAC;QAED,OAAO,IAAI,CAAC,0BAA0B,CAAC,UAAU,CAAC,CAAC;IACvD,CAAC;IAED,sBAAsB;QAClB,OAAO,oCAAe,CAAC,KAAK,EAAE,CAAC;IACnC,CAAC;CACJ","sourcesContent":["import { IMaintenanceOperation, OperationResultType } from \"../OperationAbstractions.js\";\r\nimport { ConfigureTimeSeriesOperationResult } from \"./ConfigureTimeSeriesOperationResult.js\";\r\nimport { TimeSeriesConfiguration } from \"./TimeSeriesConfiguration.js\";\r\nimport { throwError } from \"../../../Exceptions/index.js\";\r\nimport { HttpRequestParameters } from \"../../../Primitives/Http.js\";\r\nimport { Stream } from \"node:stream\";\r\nimport { RaftIdGenerator } from \"../../../Utility/RaftIdGenerator.js\";\r\nimport { ServerNode } from \"../../../Http/ServerNode.js\";\r\nimport { RavenCommand } from \"../../../Http/RavenCommand.js\";\r\nimport { DocumentConventions } from \"../../Conventions/DocumentConventions.js\";\r\nimport { IRaftCommand } from \"../../../Http/IRaftCommand.js\";\r\n\r\nexport class ConfigureTimeSeriesOperation implements IMaintenanceOperation<ConfigureTimeSeriesOperationResult> {\r\n    private readonly _configuration: TimeSeriesConfiguration;\r\n\r\n    public constructor(configuration: TimeSeriesConfiguration) {\r\n        if (!configuration) {\r\n            throwError(\"InvalidArgumentException\", \"Configuration cannot be null\");\r\n        }\r\n\r\n        this._configuration = configuration;\r\n    }\r\n\r\n    public get resultType(): OperationResultType {\r\n        return \"CommandResult\";\r\n    }\r\n\r\n    getCommand(conventions: DocumentConventions): RavenCommand<ConfigureTimeSeriesOperationResult> {\r\n        return new ConfigureTimeSeriesCommand(this._configuration);\r\n    }\r\n}\r\n\r\nclass ConfigureTimeSeriesCommand extends RavenCommand<ConfigureTimeSeriesOperationResult> implements IRaftCommand {\r\n    private readonly _configuration: TimeSeriesConfiguration;\r\n\r\n    public constructor(configuration: TimeSeriesConfiguration) {\r\n        super();\r\n\r\n        this._configuration = configuration;\r\n    }\r\n\r\n    get isReadRequest(): boolean {\r\n        return false;\r\n    }\r\n\r\n    createRequest(node: ServerNode): HttpRequestParameters {\r\n        const uri = node.url + \"/databases/\" + node.database + \"/admin/timeseries/config\";\r\n\r\n        const body = this._serializer.serialize(this._configuration.serialize());\r\n\r\n        return {\r\n            uri,\r\n            method: \"POST\",\r\n            headers: this._headers().typeAppJson().build(),\r\n            body\r\n        }\r\n    }\r\n\r\n    async setResponseAsync(bodyStream: Stream, fromCache: boolean): Promise<string> {\r\n        if (!bodyStream) {\r\n            this._throwInvalidResponse();\r\n        }\r\n\r\n        return this._parseResponseDefaultAsync(bodyStream);\r\n    }\r\n\r\n    getRaftUniqueRequestId(): string {\r\n        return RaftIdGenerator.newId();\r\n    }\r\n}\r\n"]}