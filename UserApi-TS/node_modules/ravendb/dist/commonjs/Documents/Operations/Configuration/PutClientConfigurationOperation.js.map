{"version":3,"file":"PutClientConfigurationOperation.js","sourceRoot":"","sources":["../../../../../src/Documents/Operations/Configuration/PutClientConfigurationOperation.ts"],"names":[],"mappings":";;;AAEA,2DAA0D;AAC1D,mEAAuF;AAGvF,8DAA8D;AAG9D,4EAAsE;AAEtE,MAAa,+BAA+B;IACvB,cAAc,CAAsB;IAErD,IAAW,UAAU;QACjB,OAAO,eAAe,CAAC;IAC3B,CAAC;IAED,YAAmB,aAAkC;QAEjD,IAAI,CAAC,aAAa,EAAE,CAAC;YACjB,IAAA,qBAAU,EAAC,0BAA0B,EAAE,4CAA4C,CAAC,CAAC;QACzF,CAAC;QAED,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC;IACxC,CAAC;IAEM,UAAU,CAAC,WAAgC;QAC9C,OAAO,IAAI,6BAA6B,CAAC,WAAW,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;IAC/E,CAAC;CAEJ;AApBD,0EAoBC;AAED,MAAa,6BAA8B,SAAQ,8BAAkB;IAChD,cAAc,CAAS;IAExC,IAAW,aAAa;QACpB,OAAO,KAAK,CAAC;IACjB,CAAC;IAED,IAAW,YAAY;QACnB,OAAO,OAAO,CAAC;IACnB,CAAC;IAED,YAAmB,WAAgC,EAAE,aAAkC;QACnF,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,WAAW,EAAE,CAAC;YACf,IAAA,qBAAU,EAAC,0BAA0B,EAAE,mDAAmD,CAAC,CAAC;QAChG,CAAC;QAED,IAAI,CAAC,aAAa,EAAE,CAAC;YACjB,IAAA,qBAAU,EAAC,0BAA0B,EAAE,4CAA4C,CAAC,CAAC;QACzF,CAAC;QAED,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;IACpE,CAAC;IAEM,aAAa,CAAC,IAAgB;QACjC,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,cAAc,IAAI,CAAC,QAAQ,6BAA6B,CAAC;QAChF,OAAO;YACH,MAAM,EAAE,KAAK;YACb,GAAG;YACH,IAAI,EAAE,IAAI,CAAC,cAAc;YACzB,OAAO,EAAE,4BAAc,CAAC,MAAM,EAAE;iBAC3B,WAAW,EAAE;iBACb,KAAK,EAAE;SACf,CAAC;IACN,CAAC;IAEM,sBAAsB;QACzB,OAAO,oCAAe,CAAC,KAAK,EAAE,CAAC;IACnC,CAAC;CACJ;AAxCD,sEAwCC","sourcesContent":["import { IMaintenanceOperation, OperationResultType } from \"../OperationAbstractions.js\";\r\nimport { ClientConfiguration } from \"./ClientConfiguration.js\";\r\nimport { throwError } from \"../../../Exceptions/index.js\";\r\nimport { RavenCommand, RavenCommandResponseType } from \"../../../Http/RavenCommand.js\";\r\nimport { HttpRequestParameters } from \"../../../Primitives/Http.js\";\r\nimport { ServerNode } from \"../../../Http/ServerNode.js\";\r\nimport { HeadersBuilder } from \"../../../Utility/HttpUtil.js\";\r\nimport { DocumentConventions } from \"../../Conventions/DocumentConventions.js\";\r\nimport { IRaftCommand } from \"../../../Http/IRaftCommand.js\";\r\nimport { RaftIdGenerator } from \"../../../Utility/RaftIdGenerator.js\";\r\n\r\nexport class PutClientConfigurationOperation implements IMaintenanceOperation<void> {\r\n    private readonly _configuration: ClientConfiguration;\r\n\r\n    public get resultType(): OperationResultType {\r\n        return \"CommandResult\";\r\n    }\r\n\r\n    public constructor(configuration: ClientConfiguration) {\r\n\r\n        if (!configuration) {\r\n            throwError(\"InvalidArgumentException\", \"Configuration cannot be null or undefined.\");\r\n        }\r\n\r\n        this._configuration = configuration;\r\n    }\r\n\r\n    public getCommand(conventions: DocumentConventions): RavenCommand<void> {\r\n        return new PutClientConfigurationCommand(conventions, this._configuration);\r\n    }\r\n\r\n}\r\n\r\nexport class PutClientConfigurationCommand extends RavenCommand<void> implements IRaftCommand {\r\n    private readonly _configuration: string;\r\n\r\n    public get isReadRequest() {\r\n        return false;\r\n    }\r\n\r\n    public get responseType(): RavenCommandResponseType {\r\n        return \"Empty\";\r\n    }\r\n\r\n    public constructor(conventions: DocumentConventions, configuration: ClientConfiguration) {\r\n        super();\r\n\r\n        if (!conventions) {\r\n            throwError(\"InvalidArgumentException\", \"Document conventions cannot be null or undefined.\");\r\n        }\r\n\r\n        if (!configuration) {\r\n            throwError(\"InvalidArgumentException\", \"Configuration cannot be null or undefined.\");\r\n        }\r\n\r\n        this._configuration = this._serializer.serialize(configuration);\r\n    }\r\n\r\n    public createRequest(node: ServerNode): HttpRequestParameters {\r\n        const uri = `${node.url}/databases/${node.database}/admin/configuration/client`;\r\n        return {\r\n            method: \"PUT\",\r\n            uri,\r\n            body: this._configuration,\r\n            headers: HeadersBuilder.create()\r\n                .typeAppJson()\r\n                .build()\r\n        };\r\n    }\r\n\r\n    public getRaftUniqueRequestId(): string {\r\n        return RaftIdGenerator.newId();\r\n    }\r\n}\r\n"]}