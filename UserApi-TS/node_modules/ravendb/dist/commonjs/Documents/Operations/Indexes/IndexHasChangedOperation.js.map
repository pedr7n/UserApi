{"version":3,"file":"IndexHasChangedOperation.js","sourceRoot":"","sources":["../../../../../src/Documents/Operations/Indexes/IndexHasChangedOperation.ts"],"names":[],"mappings":";;;AAEA,2DAA0D;AAE1D,mEAA6D;AAG7D,8DAA8D;AAG9D,MAAa,wBAAwB;IAEhB,WAAW,CAAkB;IAE9C,YAAmB,UAA2B;QAC1C,IAAI,CAAC,UAAU,EAAE,CAAC;YACd,IAAA,qBAAU,EAAC,0BAA0B,EAAE,gCAAgC,CAAC,CAAC;QAC7E,CAAC;QAED,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;IAClC,CAAC;IAEM,UAAU,CAAC,WAAgC;QAC9C,OAAO,IAAI,sBAAsB,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;IACrE,CAAC;IAED,IAAW,UAAU;QACjB,OAAO,eAAe,CAAC;IAC3B,CAAC;CACJ;AAnBD,4DAmBC;AAED,MAAa,sBAAuB,SAAQ,8BAAqB;IAE5C,WAAW,CAAS;IAErC,YAAmB,WAAgC,EAAE,UAA2B;QAC5E,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC,YAAY,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;IAC5E,CAAC;IAED,IAAW,aAAa;QACpB,OAAO,KAAK,CAAC;IACjB,CAAC;IAEM,aAAa,CAAC,IAAgB;QACjC,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,aAAa,GAAG,IAAI,CAAC,QAAQ,GAAG,sBAAsB,CAAC;QAE9E,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAE1D,MAAM,OAAO,GAAG,4BAAc,CAAC,MAAM,EAAE;aAClC,WAAW,EAAE,CAAC,KAAK,EAAE,CAAC;QAC3B,OAAO;YACH,MAAM,EAAE,MAAM;YACd,GAAG;YACH,IAAI;YACJ,OAAO;SACV,CAAC;IACN,CAAC;IAEM,KAAK,CAAC,gBAAgB,CAAC,UAAkB,EAAE,SAAkB;QAChE,IAAI,CAAC,UAAU,EAAE,CAAC;YACd,IAAI,CAAC,qBAAqB,EAAE,CAAC;QACjC,CAAC;QAED,IAAI,IAAI,GAAW,IAAI,CAAC;QACxB,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,GAAG,CAAC,CAAC;aACrD,OAAO,CAAC,UAAU,CAAC,CAAC;QACzB,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;QACjC,OAAO,IAAI,CAAC;IAChB,CAAC;CACJ;AAxCD,wDAwCC","sourcesContent":["import { IMaintenanceOperation, OperationResultType } from \"../OperationAbstractions.js\";\r\nimport { IndexDefinition } from \"../../Indexes/IndexDefinition.js\";\r\nimport { throwError } from \"../../../Exceptions/index.js\";\r\nimport { DocumentConventions } from \"../../Conventions/DocumentConventions.js\";\r\nimport { RavenCommand } from \"../../../Http/RavenCommand.js\";\r\nimport { ServerNode } from \"../../../Http/ServerNode.js\";\r\nimport { HttpRequestParameters } from \"../../../Primitives/Http.js\";\r\nimport { HeadersBuilder } from \"../../../Utility/HttpUtil.js\";\r\nimport { Stream } from \"node:stream\";\r\n\r\nexport class IndexHasChangedOperation implements IMaintenanceOperation<boolean> {\r\n\r\n    private readonly _definition: IndexDefinition;\r\n\r\n    public constructor(definition: IndexDefinition) {\r\n        if (!definition) {\r\n            throwError(\"InvalidArgumentException\", \"IndexDefinition cannot be null\");\r\n        }\r\n\r\n        this._definition = definition;\r\n    }\r\n\r\n    public getCommand(conventions: DocumentConventions): RavenCommand<boolean> {\r\n        return new IndexHasChangedCommand(conventions, this._definition);\r\n    }\r\n\r\n    public get resultType(): OperationResultType {\r\n        return \"CommandResult\";\r\n    }\r\n}\r\n\r\nexport class IndexHasChangedCommand extends RavenCommand<boolean> {\r\n\r\n    private readonly _definition: object;\r\n\r\n    public constructor(conventions: DocumentConventions, definition: IndexDefinition) {\r\n        super();\r\n\r\n        this._definition = conventions.objectMapper.toObjectLiteral(definition);\r\n    }\r\n\r\n    public get isReadRequest(): boolean {\r\n        return false;\r\n    }\r\n\r\n    public createRequest(node: ServerNode): HttpRequestParameters {\r\n        const uri = node.url + \"/databases/\" + node.database + \"/indexes/has-changed\";\r\n\r\n        const body = this._serializer.serialize(this._definition);\r\n\r\n        const headers = HeadersBuilder.create()\r\n            .typeAppJson().build();\r\n        return {\r\n            method: \"POST\",\r\n            uri,\r\n            body,\r\n            headers\r\n        };\r\n    }\r\n\r\n    public async setResponseAsync(bodyStream: Stream, fromCache: boolean): Promise<string> {\r\n        if (!bodyStream) {\r\n            this._throwInvalidResponse();\r\n        }\r\n\r\n        let body: string = null;\r\n        const results = await this._defaultPipeline(_ => body = _)\r\n            .process(bodyStream);\r\n        this.result = results[\"changed\"];\r\n        return body;\r\n    }\r\n}\r\n"]}