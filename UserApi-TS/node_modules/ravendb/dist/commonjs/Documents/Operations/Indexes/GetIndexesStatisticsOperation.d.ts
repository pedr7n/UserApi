import { DocumentConventions } from "../../Conventions/DocumentConventions.js";
import { IMaintenanceOperation, OperationResultType } from "../OperationAbstractions.js";
import { IndexStats } from "../../Indexes/IndexStats.js";
import { HttpRequestParameters } from "../../../Primitives/Http.js";
import { ServerNode } from "../../../Http/ServerNode.js";
import { RavenCommand } from "../../../Http/RavenCommand.js";
import { Stream } from "node:stream";
export declare class GetIndexesStatisticsOperation implements IMaintenanceOperation<IndexStats[]> {
    get resultType(): OperationResultType;
    getCommand(conventions: DocumentConventions): RavenCommand<IndexStats[]>;
}
export declare class GetIndexesStatisticsCommand extends RavenCommand<IndexStats[]> {
    private readonly _conventions;
    constructor(conventions: DocumentConventions);
    createRequest(node: ServerNode): HttpRequestParameters;
    setResponseAsync(bodyStream: Stream, fromCache: boolean): Promise<string>;
    get isReadRequest(): boolean;
}
//# sourceMappingURL=GetIndexesStatisticsOperation.d.ts.map