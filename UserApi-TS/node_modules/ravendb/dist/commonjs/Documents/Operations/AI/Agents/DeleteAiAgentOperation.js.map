{"version":3,"file":"DeleteAiAgentOperation.js","sourceRoot":"","sources":["../../../../../../src/Documents/Operations/AI/Agents/DeleteAiAgentOperation.ts"],"names":[],"mappings":";;;AAIA,sEAAgE;AAGhE,qEAA+D;AAC/D,8DAA6D;AAE7D,MAAa,sBAAsB;IACd,WAAW,CAAS;IAErC,YAAmB,UAAkB;QACjC,IAAI,0BAAU,CAAC,aAAa,CAAC,UAAU,CAAC,EAAE,CAAC;YACvC,IAAA,qBAAU,EAAC,0BAA0B,EAAE,oCAAoC,CAAC,CAAC;QACjF,CAAC;QACD,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;IAClC,CAAC;IAED,IAAW,UAAU;QACjB,OAAO,eAAe,CAAC;IAC3B,CAAC;IAEM,UAAU,CAAC,WAAgC;QAC9C,OAAO,IAAI,oBAAoB,CAAC,IAAI,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;IACnE,CAAC;CACJ;AAjBD,wDAiBC;AAED,MAAM,oBAAqB,SAAQ,8BAAwC;IACtD,WAAW,CAAS;IACpB,YAAY,CAAsB;IAEnD,YAAmB,UAAkB,EAAE,WAAgC;QACnE,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;QAC9B,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;IACpC,CAAC;IAED,IAAI,aAAa;QACb,OAAO,KAAK,CAAC;IACjB,CAAC;IAED,aAAa,CAAC,IAAgB;QAC1B,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,cAAc,IAAI,CAAC,QAAQ,2BAA2B,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC;QAEpH,OAAO;YACH,MAAM,EAAE,QAAQ;YAChB,GAAG;SACN,CAAC;IACN,CAAC;IAED,KAAK,CAAC,gBAAgB,CAAC,UAAkB,EAAE,SAAkB;QACzD,IAAI,CAAC,UAAU,EAAE,CAAC;YACd,IAAI,CAAC,qBAAqB,EAAE,CAAC;QACjC,CAAC;QAED,OAAO,IAAI,CAAC,0BAA0B,CAAC,UAAU,CAAC,CAAA;IACtD,CAAC;CACJ","sourcesContent":["import { IMaintenanceOperation, OperationResultType } from \"../../OperationAbstractions.js\";\r\nimport { Stream } from \"node:stream\";\r\nimport type { AiAgentConfigurationResult } from \"./AiAgentConfigurationResult.js\";\r\nimport { DocumentConventions } from \"../../../Conventions/DocumentConventions.js\";\r\nimport { RavenCommand } from \"../../../../Http/RavenCommand.js\";\r\nimport { ServerNode } from \"../../../../Http/ServerNode.js\";\r\nimport { HttpRequestParameters } from \"../../../../Primitives/Http.js\";\r\nimport { StringUtil } from \"../../../../Utility/StringUtil.js\";\r\nimport { throwError } from \"../../../../Exceptions/index.js\";\r\n\r\nexport class DeleteAiAgentOperation implements IMaintenanceOperation<AiAgentConfigurationResult> {\r\n    private readonly _identifier: string;\r\n\r\n    public constructor(identifier: string) {\r\n        if (StringUtil.isNullOrEmpty(identifier)) {\r\n            throwError(\"InvalidArgumentException\", \"identifier cannot be null or empty\");\r\n        }\r\n        this._identifier = identifier;\r\n    }\r\n\r\n    public get resultType(): OperationResultType {\r\n        return \"CommandResult\";\r\n    }\r\n\r\n    public getCommand(conventions: DocumentConventions): RavenCommand<AiAgentConfigurationResult> {\r\n        return new DeleteAiAgentCommand(this._identifier, conventions);\r\n    }\r\n}\r\n\r\nclass DeleteAiAgentCommand extends RavenCommand<AiAgentConfigurationResult> {\r\n    private readonly _identifier: string;\r\n    private readonly _conventions: DocumentConventions;\r\n\r\n    public constructor(identifier: string, conventions: DocumentConventions) {\r\n        super();\r\n        this._identifier = identifier;\r\n        this._conventions = conventions;\r\n    }\r\n\r\n    get isReadRequest(): boolean {\r\n        return false;\r\n    }\r\n\r\n    createRequest(node: ServerNode): HttpRequestParameters {\r\n        const uri = `${node.url}/databases/${node.database}/admin/ai/agent?agentId=${encodeURIComponent(this._identifier)}`;\r\n\r\n        return {\r\n            method: \"DELETE\",\r\n            uri\r\n        };\r\n    }\r\n\r\n    async setResponseAsync(bodyStream: Stream, fromCache: boolean): Promise<string> {\r\n        if (!bodyStream) {\r\n            this._throwInvalidResponse();\r\n        }\r\n\r\n        return this._parseResponseDefaultAsync(bodyStream)\r\n    }\r\n}\r\n"]}