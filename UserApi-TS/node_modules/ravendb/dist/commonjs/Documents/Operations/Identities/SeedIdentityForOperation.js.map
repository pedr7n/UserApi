{"version":3,"file":"SeedIdentityForOperation.js","sourceRoot":"","sources":["../../../../../src/Documents/Operations/Identities/SeedIdentityForOperation.ts"],"names":[],"mappings":";;;AACA,kEAA4D;AAC5D,2DAA0D;AAG1D,wFAAkF;AAElF,MAAa,wBAAwB;IAChB,aAAa,CAAS;IACtB,cAAc,CAAS;IACvB,YAAY,CAAU;IAEvC,YAAmB,IAAY,EAAE,KAAa,EAAE,cAAuB,KAAK;QACxE,IAAI,0BAAU,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE,CAAC;YACtC,IAAA,qBAAU,EAAC,0BAA0B,EAAE,8CAA8C,CAAC,CAAC;QAC3F,CAAC;QAED,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC5B,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;IACpC,CAAC;IAED,UAAU,CAAC,WAAgC;QACvC,OAAO,IAAI,kDAAsB,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;IAClG,CAAC;IAED,IAAW,UAAU;QACjB,OAAO,eAAe,CAAC;IAC3B,CAAC;CACJ;AAtBD,4DAsBC","sourcesContent":["import { IMaintenanceOperation, OperationResultType } from \"../OperationAbstractions.js\";\r\nimport { StringUtil } from \"../../../Utility/StringUtil.js\";\r\nimport { throwError } from \"../../../Exceptions/index.js\";\r\nimport { RavenCommand } from \"../../../Http/RavenCommand.js\";\r\nimport { DocumentConventions } from \"../../Conventions/DocumentConventions.js\";\r\nimport { SeedIdentityForCommand } from \"../../Commands/SeedIdentityForCommand.js\";\r\n\r\nexport class SeedIdentityForOperation implements IMaintenanceOperation<number> {\r\n    private readonly _identityName: string;\r\n    private readonly _identityValue: number;\r\n    private readonly _forceUpdate: boolean;\r\n\r\n    public constructor(name: string, value: number, forceUpdate: boolean = false) {\r\n        if (StringUtil.isNullOrWhitespace(name)) {\r\n            throwError(\"InvalidArgumentException\", \"The field name cannot be null or whitespace.\");\r\n        }\r\n\r\n        this._identityName = name;\r\n        this._identityValue = value;\r\n        this._forceUpdate = forceUpdate;\r\n    }\r\n\r\n    getCommand(conventions: DocumentConventions): RavenCommand<number> {\r\n        return new SeedIdentityForCommand(this._identityName, this._identityValue, this._forceUpdate);\r\n    }\r\n\r\n    public get resultType(): OperationResultType {\r\n        return \"CommandResult\";\r\n    }\r\n}\r\n"]}