{"version":3,"file":"DeleteOngoingTaskOperation.js","sourceRoot":"","sources":["../../../../../src/Documents/Operations/OngoingTasks/DeleteOngoingTaskOperation.ts"],"names":[],"mappings":";;;AAMA,mEAA6D;AAG7D,4EAAsE;AAEtE,MAAa,0BAA0B;IAClB,OAAO,CAAS;IAChB,SAAS,CAAkB;IAE5C,YAAmB,MAAc,EAAE,QAAyB;QACxD,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;IAC9B,CAAC;IAED,IAAW,UAAU;QACjB,OAAO,eAAe,CAAC;IAC3B,CAAC;IAED,UAAU,CAAC,WAAgC;QACvC,OAAO,IAAI,wBAAwB,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IACtE,CAAC;CACJ;AAhBD,gEAgBC;AAED,MAAM,wBAAyB,SAAQ,8BAAqC;IACvD,OAAO,CAAS;IAChB,SAAS,CAAkB;IAE5C,YAAmB,MAAc,EAAE,QAAyB;QACxD,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;IAC9B,CAAC;IAED,aAAa,CAAC,IAAgB;QAC1B,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,aAAa,GAAG,IAAI,CAAC,QAAQ,GAAG,kBAAkB,GAAG,IAAI,CAAC,OAAO,GAAG,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;QAErH,OAAO;YACH,GAAG;YACH,MAAM,EAAE,QAAQ;SACnB,CAAA;IACL,CAAC;IAED,KAAK,CAAC,gBAAgB,CAAC,UAAkB,EAAE,SAAkB;QACzD,IAAI,CAAC,UAAU,EAAE,CAAC;YACd,IAAI,CAAC,qBAAqB,EAAE,CAAC;QACjC,CAAC;QAED,OAAO,IAAI,CAAC,0BAA0B,CAAC,UAAU,CAAC,CAAC;IACvD,CAAC;IAED,IAAI,aAAa;QACb,OAAO,KAAK,CAAC;IACjB,CAAC;IAEM,sBAAsB;QACzB,OAAO,oCAAe,CAAC,KAAK,EAAE,CAAC;IACnC,CAAC;CACJ","sourcesContent":["import { IMaintenanceOperation, OperationResultType } from \"../OperationAbstractions.js\";\r\nimport { OngoingTaskType } from \"./OngoingTaskType.js\";\r\nimport { HttpRequestParameters } from \"../../../Primitives/Http.js\";\r\nimport { Stream } from \"node:stream\";\r\nimport { ModifyOngoingTaskResult } from \"../../../ServerWide/ModifyOnGoingTaskResult.js\";\r\nimport { DocumentConventions } from \"../../Conventions/DocumentConventions.js\";\r\nimport { RavenCommand } from \"../../../Http/RavenCommand.js\";\r\nimport { ServerNode } from \"../../../Http/ServerNode.js\";\r\nimport { IRaftCommand } from \"../../../Http/IRaftCommand.js\";\r\nimport { RaftIdGenerator } from \"../../../Utility/RaftIdGenerator.js\";\r\n\r\nexport class DeleteOngoingTaskOperation implements IMaintenanceOperation<ModifyOngoingTaskResult> {\r\n    private readonly _taskId: number;\r\n    private readonly _taskType: OngoingTaskType;\r\n\r\n    public constructor(taskId: number, taskType: OngoingTaskType) {\r\n        this._taskId = taskId;\r\n        this._taskType = taskType;\r\n    }\r\n\r\n    public get resultType(): OperationResultType {\r\n        return \"CommandResult\";\r\n    }\r\n\r\n    getCommand(conventions: DocumentConventions): RavenCommand<ModifyOngoingTaskResult> {\r\n        return new DeleteOngoingTaskCommand(this._taskId, this._taskType);\r\n    }\r\n}\r\n\r\nclass DeleteOngoingTaskCommand extends RavenCommand<ModifyOngoingTaskResult> implements IRaftCommand {\r\n    private readonly _taskId: number;\r\n    private readonly _taskType: OngoingTaskType;\r\n\r\n    public constructor(taskId: number, taskType: OngoingTaskType) {\r\n        super();\r\n\r\n        this._taskId = taskId;\r\n        this._taskType = taskType;\r\n    }\r\n\r\n    createRequest(node: ServerNode): HttpRequestParameters {\r\n        const uri = node.url + \"/databases/\" + node.database + \"/admin/tasks?id=\" + this._taskId + \"&type=\" + this._taskType;\r\n\r\n        return {\r\n            uri,\r\n            method: \"DELETE\"\r\n        }\r\n    }\r\n\r\n    async setResponseAsync(bodyStream: Stream, fromCache: boolean): Promise<string> {\r\n        if (!bodyStream) {\r\n            this._throwInvalidResponse();\r\n        }\r\n\r\n        return this._parseResponseDefaultAsync(bodyStream);\r\n    }\r\n\r\n    get isReadRequest(): boolean {\r\n        return false;\r\n    }\r\n\r\n    public getRaftUniqueRequestId(): string {\r\n        return RaftIdGenerator.newId();\r\n    }\r\n}"]}