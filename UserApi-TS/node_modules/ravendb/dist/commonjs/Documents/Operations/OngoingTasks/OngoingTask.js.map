{"version":3,"file":"OngoingTask.js","sourceRoot":"","sources":["../../../../../src/Documents/Operations/OngoingTasks/OngoingTask.ts"],"names":[],"mappings":"","sourcesContent":["import { NodeId } from \"../../Subscriptions/NodeId.js\";\r\nimport { RunningBackup } from \"./RunningBackup.js\";\r\nimport { NextBackup } from \"./NextBackup.js\";\r\nimport { OngoingTaskType } from \"./OngoingTaskType.js\";\r\nimport { BackupType } from \"../Backups/Enums.js\";\r\nimport { RavenEtlConfiguration } from \"../Etl/RavenEtlConfiguration.js\";\r\nimport { SqlEtlConfiguration } from \"../Etl/Sql/SqlEtlConfiguration.js\";\r\nimport { RetentionPolicy } from \"../Backups/RetentionPolicy.js\";\r\nimport { ElasticSearchEtlConfiguration } from \"../Etl/ElasticSearch/ElasticSearchEtlConfiguration.js\";\r\nimport { OlapEtlConfiguration } from \"../Etl/Olap/OlapEtlConfiguration.js\";\r\nimport { QueueEtlConfiguration } from \"../Etl/Queue/QueueEtlConfiguration.js\";\r\nimport { ArchivedDataProcessingBehavior } from \"../../DataArchival/ArchivedDataProcessingBehavior.js\";\r\nimport { QueueBrokerType } from \"../Etl/ConnectionString.js\";\r\nimport { QueueSinkConfiguration } from \"../QueueSink/QueueSinkConfiguration.js\";\r\n\r\nexport interface OngoingTask {\r\n    taskId: number;\r\n    taskType: OngoingTaskType;\r\n    responsibleNode: NodeId;\r\n    taskState: OngoingTaskState;\r\n    taskConnectionStatus: OngoingTaskConnectionStatus;\r\n    taskName: string;\r\n    error: string;\r\n    mentorNode: string;\r\n}\r\n\r\nexport interface OngoingTaskBackup extends OngoingTask {\r\n    taskType: \"Backup\",\r\n    backupType: BackupType;\r\n    backupDestinations: string[];\r\n    lastFullBackup: Date;\r\n    lastIncrementalBackup: Date;\r\n    onGoingBackup: RunningBackup;\r\n    nextBackup: NextBackup;\r\n    retentionPolicy: RetentionPolicy;\r\n    isEncrypted: boolean;\r\n    lastExecutingNodeTag: string;\r\n}\r\n\r\nexport type OngoingTaskConnectionStatus =\r\n    \"None\"\r\n    | \"Active\"\r\n    | \"NotActive\"\r\n    | \"Reconnect\"\r\n    | \"NotOnThisNode\";\r\n\r\n\r\nexport interface OngoingTaskRavenEtl extends OngoingTask {\r\n    taskType: \"RavenEtl\",\r\n    destinationUrl: string;\r\n    destinationDatabase: string;\r\n    connectionStringName: string;\r\n    topologyDiscoveryUrls: string[];\r\n    configuration: RavenEtlConfiguration;\r\n}\r\n\r\n\r\nexport interface OngoingTaskReplication extends OngoingTask {\r\n    taskType: \"Replication\",\r\n    destinationUrl: string;\r\n    topologyDiscoveryUrls: string[];\r\n    destinationDatabase: string;\r\n    connectionStringName: string;\r\n    delayReplicationFor: string;\r\n}\r\n\r\nexport interface OngoingTaskElasticSearchEtl extends OngoingTask {\r\n    taskType: \"ElasticSearchEtl\",\r\n    connectionStringName: string;\r\n    nodesUrls: string[];\r\n    configuration: ElasticSearchEtlConfiguration;\r\n}\r\n\r\nexport interface OngoingTaskQueueSink extends OngoingTask {\r\n    taskType: \"QueueSink\",\r\n    brokerType: QueueBrokerType;\r\n    connectionStringName: string;\r\n    url: string;\r\n    configuration: QueueSinkConfiguration;\r\n}\r\n\r\nexport interface OngoingTaskSqlEtl extends OngoingTask {\r\n    taskType: \"SqlEtl\",\r\n    destinationServer: string;\r\n    destinationDatabase: string;\r\n    connectionStringName: string;\r\n    connectionStringDefined: boolean;\r\n    configuration: SqlEtlConfiguration;\r\n}\r\n\r\nexport type OngoingTaskState =\r\n    \"None\"\r\n    | \"Enabled\"\r\n    | \"Disabled\"\r\n    | \"PartiallyEnabled\";\r\n\r\nexport interface OngoingTaskSubscription extends OngoingTask {\r\n    taskType: \"Subscription\",\r\n    query: string;\r\n    subscriptionName: string;\r\n    subscriptionId: number;\r\n    changeVectorForNextBatchStartingPoint: string;\r\n    changeVectorForNextBatchStartingPointPerShard: Record<string, string>;\r\n    archivedDataProcessingBehavior: ArchivedDataProcessingBehavior;\r\n    lastBatchAckTime: Date;\r\n    disabled: boolean;\r\n    lastClientConnectionTime: Date;\r\n}\r\n\r\nexport interface OngoingTaskOlapEtl extends OngoingTask {\r\n    taskType: \"OlapEtl\",\r\n    connectionStringName: string;\r\n    destination: string;\r\n    configuration: OlapEtlConfiguration;\r\n}\r\n\r\n\r\nexport interface OngoingTaskQueueEtl extends OngoingTask {\r\n    brokerType: QueueBrokerType;\r\n    connectionStringName: string;\r\n    url: string;\r\n    configuration: QueueEtlConfiguration;\r\n}\r\n"]}