import { IDisposable } from "../../Types/Contracts.js";
import { DocumentStore } from "../DocumentStore.js";
import { AbstractSubscriptionWorker } from "./AbstractSubscriptionWorker.js";
import { SubscriptionBatch } from "./SubscriptionBatch.js";
import { SubscriptionWorkerOptions } from "./SubscriptionWorkerOptions.js";
import { IRequestExecutorOptions, RequestExecutor } from "../../Http/RequestExecutor.js";
export declare class SubscriptionWorker<T extends object> extends AbstractSubscriptionWorker<SubscriptionBatch<T>, T> implements IDisposable {
    private readonly _store;
    constructor(options: SubscriptionWorkerOptions<T>, withRevisions: boolean, documentStore: DocumentStore, dbName: string);
    protected getRequestExecutor(): RequestExecutor;
    protected setLocalRequestExecutor(url: string, opts: IRequestExecutorOptions): void;
    protected createEmptyBatch(): SubscriptionBatch<T>;
    protected trySetRedirectNodeOnConnectToServer(): void;
}
//# sourceMappingURL=SubscriptionWorker.d.ts.map