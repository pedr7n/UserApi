{"version":3,"file":"IdTypeAndName.js","sourceRoot":"","sources":["../../../src/Documents/IdTypeAndName.ts"],"names":[],"mappings":";;;AAEA,MAAa,aAAa;IACd,EAAE,CAAS;IACX,IAAI,CAAc;IAClB,IAAI,CAAS;IAEd,MAAM,CAAC,CAAS;QACnB,IAAI,IAAI,KAAK,CAAC,EAAE,CAAC;YACb,OAAO,IAAI,CAAC;QAChB,CAAC;QAED,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,WAAW,KAAK,CAAC,CAAC,WAAW,EAAE,CAAC;YAC3C,OAAO,KAAK,CAAC;QACjB,CAAC;QAED,MAAM,IAAI,GAAG,CAAkB,CAAC;QAEhC,IAAI,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC;YAC5C,OAAO,KAAK,CAAC;QACjB,CAAC;QAED,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,EAAE,CAAC;YAC1B,OAAO,KAAK,CAAC;QACjB,CAAC;QAED,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;IAC7D,CAAC;IAEM,MAAM,CAAC,MAAM,CAAC,EAAU,EAAE,IAAiB,EAAE,IAAY;QAC5D,MAAM,aAAa,GAAG,IAAI,aAAa,EAAE,CAAC;QAC1C,OAAO,MAAM,CAAC,MAAM,CAAC,aAAa,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;IAC5D,CAAC;IAEM,GAAG;QACN,OAAO,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;IAC/D,CAAC;IAEM,MAAM,CAAC,MAAM,CAAC,EAAU,EAAE,IAAiB,EAAE,IAAY;QAC5D,OAAO,GAAG,EAAE,IAAI,IAAI,IAAI,IAAI,EAAE,CAAC;IACnC,CAAC;CACJ;AAvCD,sCAuCC","sourcesContent":["import { CommandType } from \"./Commands/CommandData.js\";\r\n\r\nexport class IdTypeAndName {\r\n    private id: string;\r\n    private type: CommandType;\r\n    private name: string;\r\n\r\n    public equals(o: object): boolean {\r\n        if (this === o) {\r\n            return true;\r\n        }\r\n\r\n        if (!o || this.constructor !== o.constructor) {\r\n            return false;\r\n        }\r\n\r\n        const that = o as IdTypeAndName;\r\n\r\n        if (this.id ? this.id === that.id : !!that.id) {\r\n            return false;\r\n        }\r\n\r\n        if (this.type !== that.type) {\r\n            return false;\r\n        }\r\n\r\n        return this.name ? this.name === that.name : !!that.name;\r\n    }\r\n\r\n    public static create(id: string, type: CommandType, name: string): IdTypeAndName {\r\n        const idTypeAndName = new IdTypeAndName();\r\n        return Object.assign(idTypeAndName, { id, type, name });\r\n    }\r\n\r\n    public key() {\r\n        return IdTypeAndName.keyFor(this.id, this.type, this.name);\r\n    }\r\n\r\n    public static keyFor(id: string, type: CommandType, name: string) {\r\n        return `${id}.${type}.${name}`;\r\n    }\r\n}\r\n"]}