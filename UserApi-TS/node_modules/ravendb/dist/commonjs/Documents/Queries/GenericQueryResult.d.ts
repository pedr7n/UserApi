import { QueryResultBase } from "./QueryResultBase.js";
export interface QueryResultHighlightings {
    [key: string]: {
        [key: string]: string[];
    };
}
export interface QueryResultExplanations {
    [key: string]: string[];
}
export declare class GenericQueryResult<TResult, TIncludes> extends QueryResultBase<TResult, TIncludes> {
    totalResults: number;
    /**
     *  The total results for the query, taking into account the
     *  offset / limit clauses for this query
     */
    cappedMaxResults: number;
    skippedResults: number;
    scannedResults: number;
    highlightings: QueryResultHighlightings;
    explanations: QueryResultExplanations;
    durationInMs: number;
    scoreExplanations: {
        [key: string]: string;
    };
    timingsInMs: {
        [key: string]: number;
    };
    /**
     * @deprecated ResultSize is not supported anymore. Will be removed in next major version of the product.
     */
    resultSize: number;
    timeSeriesFields: string[];
}
//# sourceMappingURL=GenericQueryResult.d.ts.map