{"version":3,"file":"VectorSearchOptions.js","sourceRoot":"","sources":["../../../../../src/Documents/Queries/VectorSearch/VectorSearchOptions.ts"],"names":[],"mappings":";;;AA4BA,MAAa,aAAa;IAEf,OAAO,CAAW;IACzB;;OAEG;IACI,UAAU,CAAU;IAE3B;;OAEG;IACI,mBAAmB,CAAuB;IAEjD;;OAEG;IACI,wBAAwB,CAAuB;IAEtD;;OAEG;IACI,kBAAkB,CAAU;IAEnC;;OAEG;IACI,aAAa,CAAU;IAE9B,YACI,sBAA2C,QAAQ,EACnD,2BAAgD,QAAQ,EACxD,aAAsB,EACtB,kBAA2B,EAC3B,UAAmB,EACnB,OAAiB;QAEjB,IAAI,CAAC,mBAAmB,GAAG,mBAAmB,CAAC;QAC/C,IAAI,CAAC,wBAAwB,GAAG,wBAAwB,CAAC;QACzD,IAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;QAC7C,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QACnC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IAC3B,CAAC;IAES,MAAM,CAAC,QAAQ,CAAC,IAAwB;QAC9C,OAAO,IAAI,aAAa,CACpB,IAAI,CAAC,mBAAmB,EACxB,IAAI,CAAC,wBAAwB,EAC7B,IAAI,CAAC,UAAU,EACf,IAAI,CAAC,aAAa,EAClB,IAAI,CAAC,kBAAkB,CAC1B,CAAC;IACN,CAAC;IAES,MAAM;QACZ,OAAO;YACH,mBAAmB,EAAE,IAAI,CAAC,mBAAmB;YAC7C,wBAAwB,EAAE,IAAI,CAAC,wBAAwB;YACvD,kBAAkB,EAAE,IAAI,CAAC,kBAAkB;YAC3C,aAAa,EAAE,IAAI,CAAC,aAAa;YACjC,UAAU,EAAE,IAAI,CAAC,UAAU;SAC9B,CAAC;IACN,CAAC;CACJ;AA/DD,sCA+DC;AAED,MAAa,iBAAkB,SAAQ,aAAa;IACzC,eAAe,CAAU;IAEhC,YACI,sBAA2C,QAAQ,EACnD,2BAAgD,QAAQ,EACxD,UAAmB,EACnB,aAAsB,EACtB,kBAA2B,EAC3B,eAAwB;QAExB,KAAK,CACD,mBAAmB,EACnB,wBAAwB,EACxB,UAAU,EACV,aAAa,EACb,kBAAkB,CACrB,CAAC;QACF,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;IAC3C,CAAC;IAEM,MAAM,CAAC,iBAAiB,CAAC,aAA4B;QACxD,OAAO,IAAI,iBAAiB,CACxB,aAAa,CAAC,mBAAmB,EACjC,aAAa,CAAC,wBAAwB,EACtC,aAAa,CAAC,aAAa,EAC3B,aAAa,CAAC,kBAAkB,CACnC,CAAC;IACN,CAAC;IAES,MAAM,CAAC,QAAQ,CAAC,IAAwB;QAC9C,MAAM,aAAa,GAAG,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACnD,MAAM,iBAAiB,GAAG,iBAAiB,CAAC,iBAAiB,CAAC,aAAa,CAAC,CAAC;QAC7E,iBAAiB,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;QACzD,OAAO,iBAAiB,CAAC;IAC7B,CAAC;IAES,MAAM;QACZ,MAAM,IAAI,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC;QAC5B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;QAC5C,OAAO,IAAI,CAAC;IAChB,CAAC;CACJ;AA1CD,8CA0CC","sourcesContent":["import { VectorEmbeddingType } from \"./VectorEmbeddingType.js\";\r\n\r\nexport interface IVectorOptions {\r\n    numberOfCandidates?: number;\r\n    similarity?: number;\r\n    isExact?: boolean;\r\n}\r\n\r\nexport interface FieldVectorOptions {\r\n    dimensions?: number;\r\n    sourceEmbeddingType: VectorEmbeddingType;\r\n    destinationEmbeddingType: VectorEmbeddingType;\r\n    numberOfEdges?: number;\r\n    numberOfCandidatesForIndexing?: number;\r\n}\r\n\r\nexport interface IVectorOptionsJson {\r\n    SourceEmbeddingType?: VectorEmbeddingType;\r\n    DestinationEmbeddingType?: VectorEmbeddingType;\r\n    Dimensions?: number;\r\n    NumberOfEdges?: number;\r\n    NumberOfCandidates?: number;\r\n    Similarity?: number;\r\n    IsExact?: boolean;\r\n    SourceFieldName?: string;\r\n}\r\n\r\n\r\nexport class VectorOptions implements IVectorOptions {\r\n\r\n    public isExact?: boolean;\r\n    /**\r\n     * Minimum similarity threshold for results (higher means more similar)\r\n     */\r\n    public similarity?: number;\r\n\r\n    /**\r\n     * Source embedding type\r\n     */\r\n    public sourceEmbeddingType?: VectorEmbeddingType;\r\n\r\n    /**\r\n     * Destination embedding type\r\n     */\r\n    public destinationEmbeddingType?: VectorEmbeddingType;\r\n\r\n    /**\r\n     * Number of candidates to consider during indexing\r\n     */\r\n    public numberOfCandidates?: number;\r\n\r\n    /**\r\n     * Number of edges in the graph\r\n     */\r\n    public numberOfEdges?: number;\r\n\r\n    constructor(\r\n        sourceEmbeddingType: VectorEmbeddingType = \"Single\",\r\n        destinationEmbeddingType: VectorEmbeddingType = \"Single\",\r\n        numberOfEdges?: number,\r\n        numberOfCandidates?: number,\r\n        similarity?: number,\r\n        isExact?: boolean\r\n    ) {\r\n        this.sourceEmbeddingType = sourceEmbeddingType;\r\n        this.destinationEmbeddingType = destinationEmbeddingType;\r\n        this.numberOfCandidates = numberOfCandidates;\r\n        this.numberOfEdges = numberOfEdges;\r\n        this.similarity = similarity;\r\n        this.isExact = isExact;\r\n    }\r\n\r\n    protected static fromJson(json: IVectorOptionsJson): VectorOptions {\r\n        return new VectorOptions(\r\n            json.SourceEmbeddingType,\r\n            json.DestinationEmbeddingType,\r\n            json.Dimensions,\r\n            json.NumberOfEdges,\r\n            json.NumberOfCandidates,\r\n        );\r\n    }\r\n\r\n    protected toJson(): IVectorOptionsJson {\r\n        return {\r\n            SourceEmbeddingType: this.sourceEmbeddingType,\r\n            DestinationEmbeddingType: this.destinationEmbeddingType,\r\n            NumberOfCandidates: this.numberOfCandidates,\r\n            NumberOfEdges: this.numberOfEdges,\r\n            Similarity: this.similarity\r\n        };\r\n    }\r\n}\r\n\r\nexport class AutoVectorOptions extends VectorOptions {\r\n    public sourceFieldName?: string;\r\n\r\n    constructor(\r\n        sourceEmbeddingType: VectorEmbeddingType = \"Single\",\r\n        destinationEmbeddingType: VectorEmbeddingType = \"Single\",\r\n        dimensions?: number,\r\n        numberOfEdges?: number,\r\n        numberOfCandidates?: number,\r\n        sourceFieldName?: string\r\n    ) {\r\n        super(\r\n            sourceEmbeddingType,\r\n            destinationEmbeddingType,\r\n            dimensions,\r\n            numberOfEdges,\r\n            numberOfCandidates\r\n        );\r\n        this.sourceFieldName = sourceFieldName;\r\n    }\r\n\r\n    public static fromVectorOptions(vectorOptions: VectorOptions): AutoVectorOptions {\r\n        return new AutoVectorOptions(\r\n            vectorOptions.sourceEmbeddingType,\r\n            vectorOptions.destinationEmbeddingType,\r\n            vectorOptions.numberOfEdges,\r\n            vectorOptions.numberOfCandidates\r\n        );\r\n    }\r\n\r\n    protected static fromJson(json: IVectorOptionsJson): AutoVectorOptions {\r\n        const vectorOptions = VectorOptions.fromJson(json);\r\n        const autoVectorOptions = AutoVectorOptions.fromVectorOptions(vectorOptions);\r\n        autoVectorOptions.sourceFieldName = json.SourceFieldName;\r\n        return autoVectorOptions;\r\n    }\r\n\r\n    protected toJson(): IVectorOptionsJson {\r\n        const json = super.toJson();\r\n        json.SourceFieldName = this.sourceFieldName;\r\n        return json;\r\n    }\r\n}"]}