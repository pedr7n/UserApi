{"version":3,"file":"VectorEmbeddingTextField.js","sourceRoot":"","sources":["../../../../../../src/Documents/Queries/VectorSearch/Fields/VectorEmbeddingTextField.ts"],"names":[],"mappings":";;;AAOA,MAAa,wBAAwB;IAI1B,SAAS,CAAS;IAClB,sBAAsB,GAAwB,MAAM,CAAC;IACrD,2BAA2B,GAAwB,QAAQ,CAAC;IAC5D,eAAe,GAAY,KAAK,CAAC;IACjC,kCAAkC,GAAW,EAAE,CAAC;IAEvD,YAAY,SAAmB;QAC3B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC/B,CAAC;IAGM,kBAAkB,CAAC,2BAAgD;QACtE,IAAI,2BAA2B,KAAK,MAAM,EAAE,CAAC;YACzC,MAAM,IAAI,KAAK,CAAC,kGAAkG,CAAC,CAAC;QACxH,CAAC;QAED,IAAI,CAAC,2BAA2B,GAAG,2BAA2B,CAAC;QAC/D,OAAO,IAAI,CAAC;IAChB,CAAC;IAEM,SAAS,CAAC,kCAA0C;QACvD,IAAI,IAAI,CAAC,sBAAsB,KAAK,MAAM,EAAE,CAAC;YACzC,MAAM,IAAI,KAAK,CAAC,uEAAuE,CAAC,CAAC;QAC7F,CAAC;QAED,IAAI,CAAC,kCAAkC,GAAG,kCAAkC,CAAC;QAC7E,OAAO,IAAI,CAAC;IAChB,CAAC;CACJ;AAhCD,4DAgCC","sourcesContent":["import {\r\n    IVectorEmbeddingFieldFactoryAccessor,\r\n    IVectorEmbeddingTextField\r\n} from \"../../../Session/VectorFieldFactory.js\";\r\nimport { VectorEmbeddingType } from \"../VectorEmbeddingType.js\";\r\nimport { Field } from \"../../../../Types/index.js\";\r\n\r\nexport class VectorEmbeddingTextField<T> implements\r\n    IVectorEmbeddingTextField, \r\n    IVectorEmbeddingFieldFactoryAccessor<T> {\r\n\r\n    public fieldName: string;\r\n    public sourceQuantizationType: VectorEmbeddingType = \"Text\";\r\n    public destinationQuantizationType: VectorEmbeddingType = \"Single\";\r\n    public isBase64Encoded: boolean = false;\r\n    public embeddingsGenerationTaskIdentifier: string = \"\";\r\n\r\n    constructor(fieldName: Field<T>) {\r\n        this.fieldName = fieldName;\r\n    }\r\n\r\n\r\n    public targetQuantization(targetEmbeddingQuantization: VectorEmbeddingType): IVectorEmbeddingTextField {\r\n        if (targetEmbeddingQuantization === \"Text\") {\r\n            throw new Error(\"Cannot quantize the embedding to Text. This option is only available for sourceQuantizationType.\");\r\n        }\r\n\r\n        this.destinationQuantizationType = targetEmbeddingQuantization;\r\n        return this;\r\n    }\r\n\r\n    public usingTask(embeddingsGenerationTaskIdentifier: string): IVectorEmbeddingTextField {\r\n        if (this.sourceQuantizationType !== \"Text\") {\r\n            throw new Error(\"The usingTask method can only be used with text embeddings (withText)\");\r\n        }\r\n\r\n        this.embeddingsGenerationTaskIdentifier = embeddingsGenerationTaskIdentifier;\r\n        return this;\r\n    }\r\n}\r\n"]}