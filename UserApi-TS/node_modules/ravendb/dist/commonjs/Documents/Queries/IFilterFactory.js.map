{"version":3,"file":"IFilterFactory.js","sourceRoot":"","sources":["../../../../src/Documents/Queries/IFilterFactory.ts"],"names":[],"mappings":"","sourcesContent":["import { MethodCall } from \"../Session/MethodCall.js\";\r\nimport { WhereParams } from \"../Session/WhereParams.js\";\r\n\r\n\r\nexport interface IFilterFactory<T> {\r\n    /**\r\n     * Matches value\r\n     * @param fieldName field name\r\n     * @param value value\r\n     */\r\n    equals(fieldName: string, value: any): IFilterFactory<T>;\r\n\r\n    /**\r\n     * Matches value\r\n     * @param fieldName field name\r\n     * @param method method\r\n     */\r\n    equals(fieldName: string, method: MethodCall): IFilterFactory<T>;\r\n\r\n    /**\r\n     * Matches value\r\n     * @param whereParams where params\r\n     */\r\n    equals(whereParams: WhereParams): IFilterFactory<T>;\r\n\r\n    /**\r\n     * Not matches value\r\n     * @param fieldName field name\r\n     * @param value value\r\n     */\r\n    notEquals(fieldName: string, value: any): IFilterFactory<T>;\r\n\r\n    /**\r\n     * Not matches value\r\n     * @param fieldName field name\r\n     * @param method method\r\n     */\r\n    notEquals(fieldName: string, method: MethodCall): IFilterFactory<T>;\r\n\r\n    /**\r\n     * Not matches value\r\n     * @param whereParams where params\r\n     */\r\n    notEquals(whereParams: WhereParams): IFilterFactory<T>;\r\n\r\n    /**\r\n     * Matches fields where the value is greater than the specified value\r\n     * @param fieldName field name\r\n     * @param value value\r\n     */\r\n    greaterThan(fieldName: string, value: any): IFilterFactory<T>;\r\n\r\n    /**\r\n     * Matches fields Where the value is greater than or equal to the specified value\r\n     * @param fieldName field name\r\n     * @param value value\r\n     */\r\n    greaterThanOrEqual(fieldName: string, value: any): IFilterFactory<T>;\r\n\r\n    /**\r\n     * Matches fields where the value is less than the specified value\r\n     * @param fieldName field name\r\n     * @param value value\r\n     */\r\n    lessThan(fieldName: string, value: any): IFilterFactory<T>;\r\n\r\n    /**\r\n     * Matches fields where the value is less than or equal to the specified value\r\n     * @param fieldName field name\r\n     * @param value value\r\n     */\r\n    lessThanOrEqual(fieldName: string, value: any): IFilterFactory<T>;\r\n\r\n    /**\r\n     * Simplified method for opening a new clause within the query\r\n     */\r\n    andAlso(): IFilterFactory<T>;\r\n\r\n    /**\r\n     * Add an OR to the query\r\n     */\r\n    orElse(): IFilterFactory<T>;\r\n\r\n    /**\r\n     * Negate the next operation\r\n     */\r\n    not(): IFilterFactory<T>;\r\n\r\n    /**\r\n     * Simplified method for opening a new clause within the query\r\n     */\r\n    openSubclause(): IFilterFactory<T>;\r\n\r\n    /**\r\n     *  Simplified method for closing a clause within the query\r\n     */\r\n    closeSubclause(): IFilterFactory<T>;\r\n}\r\n"]}