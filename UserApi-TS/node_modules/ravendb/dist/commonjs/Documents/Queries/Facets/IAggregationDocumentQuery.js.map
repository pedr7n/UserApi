{"version":3,"file":"IAggregationDocumentQuery.js","sourceRoot":"","sources":["../../../../../src/Documents/Queries/Facets/IAggregationDocumentQuery.ts"],"names":[],"mappings":"","sourcesContent":["import { FacetResultObject } from \"./AggregationQueryBase.js\";\r\nimport { FacetBase } from \"./FacetBase.js\";\r\nimport { IFacetBuilder } from \"./IFacetBuilder.js\";\r\nimport { Lazy } from \"../../Lazy.js\";\r\n\r\nexport interface IAggregationDocumentQuery<T> {\r\n    andAggregateBy(builder: (facetBuilder: IFacetBuilder<T>) => void): IAggregationDocumentQuery<T>;\r\n\r\n    andAggregateBy(facet: FacetBase): IAggregationDocumentQuery<T>;\r\n\r\n    execute(): Promise<FacetResultObject>;\r\n\r\n    executeLazy(): Lazy<FacetResultObject>;\r\n}\r\n"]}