{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../src/Documents/Queries/Facets/index.ts"],"names":[],"mappings":";;;AAuBA,MAAa,UAAU;IAEZ,IAAI,CAAS;IACb,KAAK,CAAS;IACd,KAAK,CAAS;IACd,GAAG,CAAS;IACZ,GAAG,CAAS;IACZ,GAAG,CAAS;IACZ,OAAO,CAAS;IAEhB,QAAQ;QACX,OAAO,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IACrC,CAAC;IAEM,MAAM,CAAC,QAAQ,CAAC,QAAqB;QACxC,IAAI,GAAG,GAAG,QAAQ,CAAC,KAAK,GAAG,YAAY,GAAG,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC;QAChE,IAAI,QAAQ,CAAC,GAAG,EAAE,CAAC;YACf,GAAG,IAAI,OAAO,GAAG,QAAQ,CAAC,GAAG,GAAG,GAAG,CAAC;QACxC,CAAC;QACD,IAAI,QAAQ,CAAC,GAAG,EAAE,CAAC;YACf,GAAG,IAAI,OAAO,GAAG,QAAQ,CAAC,GAAG,GAAG,GAAG,CAAC;QACxC,CAAC;QACD,IAAI,QAAQ,CAAC,GAAG,EAAE,CAAC;YACf,GAAG,IAAI,OAAO,GAAG,QAAQ,CAAC,GAAG,GAAG,GAAG,CAAC;QACxC,CAAC;QACD,IAAI,QAAQ,CAAC,OAAO,EAAE,CAAC;YACnB,GAAG,IAAI,WAAW,GAAG,QAAQ,CAAC,OAAO,GAAG,GAAG,CAAC;QAChD,CAAC;QACD,IAAI,QAAQ,CAAC,IAAI,EAAE,CAAC;YAChB,GAAG,IAAI,QAAQ,GAAG,QAAQ,CAAC,IAAI,GAAG,GAAG,CAAC;QAC1C,CAAC;QAED,OAAO,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;IACjC,CAAC;CACJ;AAlCD,gCAkCC;AAED,MAAa,WAAW;IAEb,IAAI,CAAS;IAEpB;;;OAGG;IACI,MAAM,GAAiB,EAAE,CAAC;IAEjC;;OAEG;IACI,cAAc,GAAa,EAAE,CAAC;IAErC;;OAEG;IACI,mBAAmB,CAAS;IAE5B,aAAa,CAAS;CAChC;AArBD,kCAqBC;AASD,MAAa,YAAY;IACd,YAAY,CAAoB;IAChC,qBAAqB,CAAU;IAC/B,KAAK,CAAS;IACd,QAAQ,CAAS;IAEhB,MAAM,CAAC,eAAe,GAAG,IAAI,YAAY,EAAE,CAAC;IAEpD;QACI,IAAI,CAAC,YAAY,GAAG,UAAU,CAAC;IACnC,CAAC;IAEM,MAAM,CAAC,iBAAiB;QAC3B,OAAO,IAAI,CAAC,eAAe,CAAC;IAChC,CAAC;;AAdL,oCAeC","sourcesContent":["export type FacetTermSortMode =\r\n    \"ValueAsc\"\r\n    | \"ValueDesc\"\r\n    | \"CountAsc\"\r\n    | \"CountDesc\";\r\n\r\nexport type FacetAggregation =\r\n    \"None\"\r\n    | \"Max\"\r\n    | \"Min\"\r\n    | \"Average\"\r\n    | \"Sum\";\r\n\r\nexport interface IFacetValue {\r\n    name: string;\r\n    range: string;\r\n    count: number;\r\n    sum: number;\r\n    max: number;\r\n    min: number;\r\n    average: number;\r\n}\r\n\r\nexport class FacetValue implements IFacetValue {\r\n\r\n    public name: string;\r\n    public range: string;\r\n    public count: number;\r\n    public sum: number;\r\n    public max: number;\r\n    public min: number;\r\n    public average: number;\r\n\r\n    public toString() {\r\n        return FacetValue.toString(this);\r\n    }\r\n\r\n    public static toString(facetVal: IFacetValue) {\r\n        let msg = facetVal.range + \" - Count: \" + facetVal.count + \", \";\r\n        if (facetVal.sum) {\r\n            msg += \"Sum: \" + facetVal.sum + \",\";\r\n        }\r\n        if (facetVal.max) {\r\n            msg += \"Max: \" + facetVal.max + \",\";\r\n        }\r\n        if (facetVal.min) {\r\n            msg += \"Min: \" + facetVal.min + \",\";\r\n        }\r\n        if (facetVal.average) {\r\n            msg += \"Average: \" + facetVal.average + \",\";\r\n        }\r\n        if (facetVal.name) {\r\n            msg += \"Name: \" + facetVal.name + \",\";\r\n        }\r\n\r\n        return msg.replace(/;$/, \"\");\r\n    }\r\n}\r\n\r\nexport class FacetResult {\r\n\r\n    public name: string;\r\n\r\n    /**\r\n     * The facet terms and hits up to a limit of MaxResults items (as specified in the facet setup document), sorted\r\n     * in TermSortMode order (as indicated in the facet setup document).\r\n     */\r\n    public values: FacetValue[] = [];\r\n\r\n    /**\r\n     * A list of remaining terms in term sort order for terms that are outside of the MaxResults count.\r\n     */\r\n    public remainingTerms: string[] = [];\r\n\r\n    /**\r\n     * The number of remaining terms outside of those covered by the Values terms.\r\n     */\r\n    public remainingTermsCount: number;\r\n\r\n    public remainingHits: number;\r\n}\r\n\r\nexport interface IFacetOptions {\r\n    termSortMode: FacetTermSortMode;\r\n    includeRemainingTerms: boolean;\r\n    start: number;\r\n    pageSize: number;\r\n}\r\n\r\nexport class FacetOptions implements IFacetOptions {\r\n    public termSortMode: FacetTermSortMode;\r\n    public includeRemainingTerms: boolean;\r\n    public start: number;\r\n    public pageSize: number;\r\n\r\n    private static _defaultOptions = new FacetOptions();\r\n\r\n    constructor() {\r\n        this.termSortMode = \"ValueAsc\";\r\n    }\r\n\r\n    public static getDefaultOptions(): IFacetOptions {\r\n        return this._defaultOptions;\r\n    }\r\n}\r\n"]}