{"version":3,"file":"RangeBuilder.js","sourceRoot":"","sources":["../../../../../src/Documents/Queries/Facets/RangeBuilder.ts"],"names":[],"mappings":"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","sourcesContent":["import { throwError } from \"../../../Exceptions/index.js\";\r\n\r\nexport class RangeBuilder<T = any> {\r\n    private readonly _path: string;\r\n    private _lessBound: T;\r\n    private _greaterBound: T;\r\n    private _lessInclusive: boolean;\r\n    private _greaterInclusive: boolean;\r\n    private _lessSet: boolean = false;\r\n    private _greaterSet: boolean = false;\r\n\r\n    public constructor(path: string) {\r\n        this._path = path;\r\n    }\r\n\r\n    public static forPath<T>(path: string): RangeBuilder<T> {\r\n        return new RangeBuilder<T>(path);\r\n    }\r\n\r\n    private _createClone(): RangeBuilder<T> {\r\n        const builder = new RangeBuilder<T>(this._path);\r\n        builder._lessBound = this._lessBound;\r\n        builder._greaterBound = this._greaterBound;\r\n        builder._lessInclusive = this._lessInclusive;\r\n        builder._greaterInclusive = this._greaterInclusive;\r\n        builder._lessSet = this._lessSet;\r\n        builder._greaterSet = this._greaterSet;\r\n        return builder;\r\n    }\r\n\r\n    public isLessThan(value: T): RangeBuilder<T> {\r\n        if (this._lessSet) {\r\n            throwError(\"InvalidOperationException\", \"Less bound was already set\");\r\n        }\r\n\r\n        const clone = this._createClone();\r\n        clone._lessBound = value;\r\n        clone._lessInclusive = false;\r\n        clone._lessSet = true;\r\n        return clone;\r\n    }\r\n\r\n    public isLessThanOrEqualTo(value: T): RangeBuilder<T> {\r\n        if (this._lessSet) {\r\n            throwError(\"InvalidOperationException\", \"Less bound was already set\");\r\n        }\r\n\r\n        const clone = this._createClone();\r\n        clone._lessBound = value;\r\n        clone._lessInclusive = true;\r\n        clone._lessSet = true;\r\n        return clone;\r\n    }\r\n\r\n    public isGreaterThan(value: T): RangeBuilder<T> {\r\n        if (this._greaterSet) {\r\n            throwError(\"InvalidOperationException\", \"Greater bound was already set\");\r\n        }\r\n\r\n        const clone = this._createClone();\r\n        clone._greaterBound = value;\r\n        clone._greaterInclusive = false;\r\n        clone._greaterSet = true;\r\n        return clone;\r\n    }\r\n\r\n    public isGreaterThanOrEqualTo(value: T): RangeBuilder<T> {\r\n        if (this._greaterSet) {\r\n            throwError(\"InvalidOperationException\", \"Greater bound was already set\");\r\n        }\r\n\r\n        const clone = this._createClone();\r\n        clone._greaterBound = value;\r\n        clone._greaterInclusive = true;\r\n        clone._greaterSet = true;\r\n        return clone;\r\n    }\r\n\r\n    public getStringRepresentation(addQueryParameter: (o: any) => string): string {\r\n        let less: string = null;\r\n        let greater: string = null;\r\n        if (!this._lessSet && !this._greaterSet) {\r\n            throwError(\"InvalidOperationException\", \"Bounds were not set\");\r\n        }\r\n\r\n        if (this._lessSet) {\r\n            const lessParamName = addQueryParameter(this._lessBound);\r\n            less = this._path + (this._lessInclusive ? \" <= \" : \" < \") + \"$\" + lessParamName;\r\n        }\r\n\r\n        if (this._greaterSet) {\r\n            const greaterParamName = addQueryParameter(this._greaterBound);\r\n            greater = this._path + (this._greaterInclusive ? \" >= \" : \" > \") + \"$\" + greaterParamName;\r\n        }\r\n\r\n        if (less && greater) {\r\n            return greater + \" and \" + less;\r\n        }\r\n        return less || greater;\r\n    }\r\n}\r\n"]}