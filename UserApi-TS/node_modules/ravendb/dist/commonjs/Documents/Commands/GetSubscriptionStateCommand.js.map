{"version":3,"file":"GetSubscriptionStateCommand.js","sourceRoot":"","sources":["../../../../src/Documents/Commands/GetSubscriptionStateCommand.ts"],"names":[],"mappings":";;;AAAA,gEAA0D;AAM1D,MAAa,2BAA4B,SAAQ,8BAA+B;IAE3D,iBAAiB,CAAS;IAE3C,YAAmB,gBAAwB;QACvC,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,iBAAiB,GAAG,gBAAgB,CAAC;IAC9C,CAAC;IAEM,aAAa,CAAC,IAAgB;QACjC,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,aAAa,GAAG,IAAI,CAAC,QAAQ,GAAG,4BAA4B,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAE9H,OAAO;YACH,GAAG;SACN,CAAC;IACN,CAAC;IAEM,KAAK,CAAC,gBAAgB,CAAC,UAAkB,EAAE,SAAkB;QAChE,OAAO,IAAI,CAAC,0BAA0B,CAAC,UAAU,CAAC,CAAC;IACvD,CAAC;IAED,IAAW,aAAa;QACpB,OAAO,IAAI,CAAC;IAChB,CAAC;CACJ;AAxBD,kEAwBC","sourcesContent":["import { RavenCommand } from \"../../Http/RavenCommand.js\";\r\nimport { SubscriptionState } from \"../Subscriptions/SubscriptionState.js\";\r\nimport { HttpRequestParameters } from \"../../Primitives/Http.js\";\r\nimport { Stream } from \"node:stream\";\r\nimport { ServerNode } from \"../../Http/ServerNode.js\";\r\n\r\nexport class GetSubscriptionStateCommand extends RavenCommand<SubscriptionState> {\r\n\r\n    private readonly _subscriptionName: string;\r\n\r\n    public constructor(subscriptionName: string) {\r\n        super();\r\n        this._subscriptionName = subscriptionName;\r\n    }\r\n\r\n    public createRequest(node: ServerNode): HttpRequestParameters {\r\n        const uri = node.url + \"/databases/\" + node.database + \"/subscriptions/state?name=\" + this._urlEncode(this._subscriptionName);\r\n\r\n        return {\r\n            uri\r\n        };\r\n    }\r\n\r\n    public async setResponseAsync(bodyStream: Stream, fromCache: boolean): Promise<string> {\r\n        return this._parseResponseDefaultAsync(bodyStream);\r\n    }\r\n\r\n    public get isReadRequest() {\r\n        return true;\r\n    }\r\n}\r\n"]}