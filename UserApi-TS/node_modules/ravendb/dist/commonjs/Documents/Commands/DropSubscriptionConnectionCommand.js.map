{"version":3,"file":"DropSubscriptionConnectionCommand.js","sourceRoot":"","sources":["../../../../src/Documents/Commands/DropSubscriptionConnectionCommand.ts"],"names":[],"mappings":";;;AAAA,gEAA0D;AAG1D,+DAAyD;AAEzD,MAAa,iCAAkC,SAAQ,8BAAkB;IAEpD,KAAK,CAAS;IACd,SAAS,CAAS;IAEnC,YAAmB,IAAY,EAAE,QAAiB;QAC9C,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;IAC9B,CAAC;IAEM,aAAa,CAAC,IAAgB;QACjC,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,aAAa,GAAG,IAAI,CAAC,QAAQ,GAAG,qBAAqB,CAAC;QAE3E,IAAI,CAAC,0BAAU,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC;YACxC,GAAG,IAAI,QAAQ,GAAG,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACrD,CAAC;QAED,IAAI,CAAC,0BAAU,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC;YAC5C,GAAG,IAAI,YAAY,GAAG,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC7D,CAAC;QAED,OAAO;YACH,MAAM,EAAE,MAAM;YACd,GAAG;SACN,CAAC;IACN,CAAC;IAED,IAAW,aAAa;QACpB,OAAO,KAAK,CAAC;IACjB,CAAC;CACJ;AA/BD,8EA+BC","sourcesContent":["import { RavenCommand } from \"../../Http/RavenCommand.js\";\r\nimport { HttpRequestParameters } from \"../../Primitives/Http.js\";\r\nimport { ServerNode } from \"../../Http/ServerNode.js\";\r\nimport { StringUtil } from \"../../Utility/StringUtil.js\";\r\n\r\nexport class DropSubscriptionConnectionCommand extends RavenCommand<void> {\r\n\r\n    private readonly _name: string;\r\n    private readonly _workerId: string;\r\n\r\n    public constructor(name: string, workerId?: string) {\r\n        super();\r\n        this._name = name;\r\n        this._workerId = workerId;\r\n    }\r\n\r\n    public createRequest(node: ServerNode): HttpRequestParameters {\r\n        let uri = node.url + \"/databases/\" + node.database + \"/subscriptions/drop\";\r\n\r\n        if (!StringUtil.isNullOrEmpty(this._name)) {\r\n            uri += \"?name=\" + encodeURIComponent(this._name);\r\n        }\r\n\r\n        if (!StringUtil.isNullOrEmpty(this._workerId)) {\r\n            uri += \"&workerId=\" + encodeURIComponent(this._workerId);\r\n        }\r\n\r\n        return {\r\n            method: \"POST\",\r\n            uri\r\n        };\r\n    }\r\n\r\n    public get isReadRequest() {\r\n        return false;\r\n    }\r\n}\r\n"]}