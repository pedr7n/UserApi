import { RavenCommand } from "../../Http/RavenCommand.js";
import { IndexQuery } from "../Queries/IndexQuery.js";
import { ServerNode } from "../../Http/ServerNode.js";
import { HttpRequestParameters } from "../../Primitives/Http.js";
export declare abstract class AbstractQueryCommand<TResult, TParameters> extends RavenCommand<TResult> {
    private readonly _metadataOnly;
    private readonly _indexEntriesOnly;
    private readonly _ignoreLimit;
    protected constructor(indexQuery: IndexQuery, canCache: boolean, metadataOnly: boolean, indexEntriesOnly: boolean, ignoreLimit: boolean);
    get isReadRequest(): boolean;
    protected abstract getQueryHash(): string;
    createRequest(node: ServerNode): HttpRequestParameters;
    protected abstract _getContent(): string;
}
//# sourceMappingURL=AbstractQueryCommand.d.ts.map