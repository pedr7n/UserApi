{"version":3,"file":"GetDocumentsCommand.js","sourceRoot":"","sources":["../../../../src/Documents/Commands/GetDocumentsCommand.ts"],"names":[],"mappings":";;;AACA,gEAA0D;AAG1D,2DAAuD;AACvD,2DAAqD;AACrD,wDAAuD;AAEvD,qDAA8C;AAC9C,oEAA8D;AAG9D,2DAAqD;AACrD,+DAAwD;AACxD,+DAAyD;AAsDzD,MAAa,mBAAoB,SAAQ,8BAAgC;IAEpD,GAAG,CAAS;IAEZ,IAAI,CAAW;IACf,SAAS,CAAW;IAE7B,SAAS,CAAW;IACpB,mBAAmB,CAAU;IAC7B,OAAO,CAAkB;IAEzB,mBAAmB,CAA4B;IAC/C,+BAA+B,CAAW;IAC1C,2BAA2B,CAAO;IAClC,6BAA6B,CAAW;IAE/B,aAAa,CAAU;IAEvB,WAAW,CAAS;IACpB,QAAQ,CAAS;IACjB,MAAM,CAAS;IACf,SAAS,CAAS;IAClB,QAAQ,CAAS;IACjB,WAAW,CAAS;IAEpB,YAAY,CAAsB;IAEnD,YACI,IAAwG;QACxG,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC;QAErC,iDAAiD;QACjD,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC;YAC5B,IAAI,GAAG,IAAsC,CAAC;YAC9C,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC;gBACX,IAAA,qBAAU,EAAC,0BAA0B,EAAE,mBAAmB,CAAC,CAAC;YAChE,CAAC;YACD,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC;YACnB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC;YAC/B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC;YACvC,iDAAiD;QACrD,CAAC;aAAM,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE,CAAC;YACpC,IAAI,GAAG,IAAuC,CAAC;YAC/C,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;gBACrC,IAAA,qBAAU,EAAC,0BAA0B,EAAE,+BAA+B,CAAC,CAAC;YAC5E,CAAC;YACD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC;YACrB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC;YAC/B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC;YACvC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,kBAAkB,CAAC;YACnD,IAAI,CAAC,6BAA6B,GAAG,IAAI,CAAC,4BAA4B,CAAC;YACvE,IAAI,CAAC,2BAA2B,GAAG,IAAI,CAAC,+BAA+B,CAAC;YACxE,IAAI,CAAC,+BAA+B,GAAG,IAAI,CAAC,+BAA+B,CAAC;YAC5E,iDAAiD;QACrD,CAAC;aAAM,IAAI,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,EAAE,CAAC;YACzE,IAAI,GAAG,IAAuC,CAAC;YAC/C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC;YACzB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC;YAE/B,iDAAiD;YACjD,IAAI,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,EAAE,CAAC;gBACpC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC;oBACnB,IAAA,qBAAU,EAAC,0BAA0B,EAAE,0BAA0B,CAAC,CAAC;gBACvE,CAAC;gBACD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC;gBACnC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;gBACpC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC;gBAC7B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC;gBAC7B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC;YAC3C,CAAC;QACL,CAAC;QAED,iDAAiD;QACjD,IAAI,IAAI,CAAC,cAAc,CAAC,oBAA+D,CAAC,EAAE,CAAC;YACvF,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,kBAAkB,CAAC;QACvD,CAAC;QAED,iDAAiD;QACjD,IAAI,IAAI,CAAC,cAAc,CAAC,iBAA4D,CAAC,EAAE,CAAC;YACpF,MAAM,QAAQ,GAAG,IAAI,CAAC,eAA2B,CAAC;YAClD,IAAI,CAAC,QAAQ,EAAE,CAAC;gBACZ,IAAA,qBAAU,EAAC,0BAA0B,EAAE,iCAAiC,CAAC,CAAC;YAC9E,CAAC;YAED,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC9B,CAAC;IACL,CAAC;IAEM,aAAa,CAAC,IAAgB;QACjC,MAAM,OAAO,GAAG,GAAG,IAAI,CAAC,GAAG,cAAc,IAAI,CAAC,QAAQ,QAAQ,CAAC;QAE/D,IAAI,KAAK,GAAG,EAAE,CAAC;QAEf,IAAI,IAAI,CAAC,OAAO,KAAK,aAAa,EAAE,CAAC;YACjC,KAAK,IAAI,qBAAqB,CAAC;QACnC,CAAC;QAED,IAAI,CAAC,sBAAQ,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC;YAC3C,KAAK,IAAI,UAAU,IAAI,CAAC,MAAM,EAAE,CAAC;QACrC,CAAC;QAED,IAAI,IAAI,CAAC,SAAS,EAAE,CAAC;YACjB,KAAK,IAAI,aAAa,IAAI,CAAC,SAAS,EAAE,CAAC;QAC3C,CAAC;QAED,IAAI,IAAI,CAAC,aAAa,EAAE,CAAC;YACrB,KAAK,IAAI,oBAAoB,CAAC;QAClC,CAAC;QAED,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,KAAK,IAAI,eAAe,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC;YAE/D,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAChB,KAAK,IAAI,YAAY,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;YAC7D,CAAC;YAED,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAChB,KAAK,IAAI,YAAY,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;YAC7D,CAAC;YAED,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC;gBACnB,KAAK,IAAI,eAAe,IAAI,CAAC,WAAW,EAAE,CAAC;YAC/C,CAAC;QACL,CAAC;QAED,IAAI,IAAI,CAAC,SAAS,EAAE,CAAC;YACjB,KAAK,MAAM,OAAO,IAAI,IAAI,CAAC,SAAS,EAAE,CAAC;gBACnC,KAAK,IAAI,YAAY,kBAAkB,CAAC,OAAO,CAAC,EAAE,CAAC;YACvD,CAAC;QACL,CAAC;QAED,IAAI,IAAI,CAAC,mBAAmB,EAAE,CAAC;YAC3B,KAAK,IAAI,YAAY,uBAAQ,CAAC,GAAG,EAAE,CAAC;QACxC,CAAC;aAAM,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;YACjD,KAAK,MAAM,OAAO,IAAI,IAAI,CAAC,SAAS,EAAE,CAAC;gBACnC,KAAK,IAAI,YAAY,kBAAkB,CAAC,OAAO,CAAC,EAAE,CAAC;YACvD,CAAC;QACL,CAAC;QAED,IAAI,IAAI,CAAC,mBAAmB,EAAE,CAAC;YAC3B,KAAK,MAAM,SAAS,IAAI,IAAI,CAAC,mBAAmB,EAAE,CAAC;gBAC/C,IAAI,MAAM,IAAI,SAAS,EAAE,CAAC;oBACtB,MAAM,KAAK,GAAG,SAA4B,CAAC;oBAC3C,KAAK,IAAI,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC;0BAC/C,QAAQ,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,sBAAQ,CAAC,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;0BACjE,MAAM,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,sBAAQ,CAAC,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;gBACtE,CAAC;qBAAM,IAAI,MAAM,IAAI,SAAS,EAAE,CAAC;oBAC7B,MAAM,SAAS,GAAG,SAAgC,CAAC;oBACnD,KAAK;wBACD,kBAAkB;8BAChB,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC;8BAC/B,YAAY;8BACZ,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC;8BAC/B,aAAa;8BACb,SAAS,CAAC,IAAI,CAAC,KAAK;8BACpB,YAAY;8BACZ,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC/C,CAAC;qBAAM,IAAI,OAAO,IAAI,SAAS,EAAE,CAAC;oBAC9B,MAAM,UAAU,GAAG,SAAiC,CAAC;oBACrD,KAAK;wBACD,mBAAmB;8BACjB,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC;8BAChC,aAAa;8BACb,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC;8BAChC,cAAc;8BACd,UAAU,CAAC,KAAK,CAAC;gBAC3B,CAAC;qBAAM,CAAC;oBACJ,IAAA,qBAAU,EAAC,0BAA0B,EAAE,+BAA+B,GAAG,SAAS,CAAC,CAAC;gBACxF,CAAC;YACL,CAAC;QACL,CAAC;QAED,IAAI,IAAI,CAAC,+BAA+B,EAAE,CAAC;YACvC,KAAK,MAAM,YAAY,IAAI,IAAI,CAAC,+BAA+B,EAAE,CAAC;gBAC9D,KAAK,IAAI,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;YAC3D,CAAC;QACL,CAAC;QAED,IAAI,IAAI,CAAC,2BAA2B,EAAE,CAAC;YACnC,KAAK,IAAI,mBAAmB,GAAG,IAAI,CAAC,UAAU,CAAC,sBAAQ,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,2BAA2B,CAAC,CAAC,CAAC;QAC7G,CAAC;QAED,IAAI,IAAI,CAAC,6BAA6B,EAAE,CAAC;YACrC,KAAK,MAAM,oBAAoB,IAAI,IAAI,CAAC,6BAA6B,EAAE,CAAC;gBACpE,KAAK,IAAI,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,oBAAoB,CAAC,CAAC;YACjE,CAAC;QACL,CAAC;QAED,IAAI,OAAO,GAA0B,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,OAAO,GAAG,KAAK,EAAE,CAAC;QAE7E,IAAI,IAAI,CAAC,GAAG,EAAE,CAAC;YACX,OAAO,CAAC,GAAG,IAAI,OAAO,kBAAkB,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC;QACzD,CAAC;aAAM,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC;YACnB,OAAO,GAAG,IAAI,CAAC,6BAA6B,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QACrE,CAAC;QAED,OAAO,OAAO,CAAC;IACnB,CAAC;IAEM,6BAA6B,CAAC,OAA8B,EAAE,GAAa;QAC9E,MAAM,SAAS,GAAG,IAAI,GAAG,CAAS,GAAG,CAAC,CAAC;QAEvC,sGAAsG;QACtG,4EAA4E;QAC5E,MAAM,KAAK,GAAY,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC;aACvC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aACd,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC;aAClB,MAAM,CAAC,CAAC,MAAM,EAAE,IAAI,EAAE,EAAE,CAAC,MAAM,GAAG,IAAI,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC;QAEvD,IAAI,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC;QACzB,IAAI,KAAK,EAAE,CAAC;YACR,KAAK,MAAM,CAAC,IAAI,SAAS,EAAE,CAAC;gBACxB,MAAM,IAAI,OAAO,kBAAkB,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC;YACnD,CAAC;YAED,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC;QAC1C,CAAC;aAAM,CAAC;YACJ,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW;iBACxB,SAAS,CAAC,EAAE,GAAG,EAAE,CAAC,GAAG,SAAS,CAAC,EAAE,CAAC,CAAC;YAExC,MAAM,aAAa,GAAG,mBAAmB,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;YACpE,MAAM,IAAI,aAAa,kBAAkB,CAAC,aAAa,CAAC,EAAE,CAAC;YAE3D,OAAO;gBACH,GAAG,EAAE,MAAM;gBACX,MAAM,EAAE,MAAM;gBACd,OAAO,EAAE,IAAA,wBAAU,GAAE;qBAChB,WAAW,EAAE;qBACb,KAAK,EAAE;gBACZ,IAAI;aACP,CAAC;QACN,CAAC;IACL,CAAC;IAEO,MAAM,CAAC,cAAc,CAAC,SAAsB;QAChD,MAAM,MAAM,GAAG,IAAI,kCAAc,EAAE,CAAC;QAEpC,KAAK,MAAM,CAAC,IAAI,SAAS,EAAE,CAAC;YACxB,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACpB,CAAC;QAED,OAAO,MAAM,CAAC,OAAO,EAAE,CAAC;IAC5B,CAAC;IAEM,KAAK,CAAC,gBAAgB,CAAC,UAAkB,EAAE,SAAkB;QAChE,IAAI,CAAC,UAAU,EAAE,CAAC;YACd,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,OAAO;QACX,CAAC;QAED,IAAI,IAAI,GAAW,IAAI,CAAC;QACxB,IAAI,CAAC,MAAM;YACP,MAAM,mBAAmB,CAAC,iCAAiC,CACvD,UAAU,EAAE,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;QAEtD,OAAO,IAAc,CAAC;IAC1B,CAAC;IAEM,MAAM,CAAC,KAAK,CAAC,iCAAiC,CACjD,UAAkB,EAClB,WAAgC,EAChC,YAAqC;QAErC,MAAM,IAAI,GAAG,MAAM,IAAA,yBAAS,EAAC,UAAU,CAAC,CAAC;QACzC,YAAY,EAAE,CAAC,IAAI,CAAC,CAAC;QAErB,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAEpC,OAAO,mBAAmB,CAAC,iBAAiB,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC;IAC1E,CAAC;IAEO,MAAM,CAAC,iBAAiB,CAAC,IAAS,EAAE,WAAgC;QACxE,OAAO;YACH,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,0BAAU,CAAC,qBAAqB,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC;YAChF,QAAQ,EAAE,0BAAU,CAAC,wBAAwB,CAAC,IAAI,CAAC,QAAQ,EAAE,WAAW,CAAC;YACzE,4BAA4B,EAAE,0BAAU,CAAC,+BAA+B,CAAC,IAAI,CAAC,4BAA4B,CAAC;YAC3G,kBAAkB,EAAE,0BAAU,CAAC,kCAAkC,CAAC,IAAI,CAAC,kBAAkB,CAAC;YAC1F,eAAe,EAAE,0BAAU,CAAC,+BAA+B,CAAC,IAAI,CAAC,eAAe,CAAC;YACjF,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;YACvC,aAAa,EAAE,IAAI,CAAC,aAAa;SACpC,CAAC;IACN,CAAC;IAED,IAAW,aAAa;QACpB,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,IAAW,eAAe,CAAC,IAAqB;QAC5C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACxB,CAAC;CACJ;AApSD,kDAoSC","sourcesContent":["import { Stream } from \"node:stream\";\r\nimport { RavenCommand } from \"../../Http/RavenCommand.js\";\r\nimport { ServerNode } from \"../../Http/ServerNode.js\";\r\nimport { HttpRequestParameters } from \"../../Primitives/Http.js\";\r\nimport { getHeaders } from \"../../Utility/HttpUtil.js\";\r\nimport { TypeUtil } from \"../../Utility/TypeUtil.js\";\r\nimport { throwError } from \"../../Exceptions/index.js\";\r\nimport { DocumentConventions } from \"../Conventions/DocumentConventions.js\";\r\nimport { COUNTERS } from \"../../Constants.js\";\r\nimport { HashCalculator } from \"../Queries/HashCalculator.js\";\r\nimport { IRavenObject } from \"../../Types/IRavenObject.js\";\r\nimport { TimeSeriesRange } from \"../Operations/TimeSeries/TimeSeriesRange.js\";\r\nimport { DateUtil } from \"../../Utility/DateUtil.js\";\r\nimport { readToEnd } from \"../../Utility/StreamUtil.js\";\r\nimport { ObjectUtil } from \"../../Utility/ObjectUtil.js\";\r\nimport { AbstractTimeSeriesRange } from \"../Operations/TimeSeries/AbstractTimeSeriesRange.js\";\r\nimport { TimeSeriesTimeRange } from \"../Operations/TimeSeries/TimeSeriesTimeRange.js\";\r\nimport { TimeSeriesCountRange } from \"../Operations/TimeSeries/TimeSeriesCountRange.js\";\r\nimport { TransactionMode } from \"../Session/TransactionMode.js\";\r\n\r\nexport interface GetDocumentsCommandCounterOptions {\r\n    counterIncludes?: string[];\r\n    includeAllCounters?: boolean;\r\n}\r\n\r\nexport interface GetDocumentsCommandOptionsBase extends GetDocumentsCommandCounterOptions {\r\n    conventions: DocumentConventions;\r\n}\r\n\r\nexport interface GetDocumentsByIdCommandOptions\r\n    extends GetDocumentsCommandOptionsBase {\r\n    id: string;\r\n    includes?: string[];\r\n    metadataOnly?: boolean;\r\n}\r\n\r\nexport interface GetDocumentsByIdsCommandOptions\r\n    extends GetDocumentsCommandOptionsBase {\r\n    ids: string[];\r\n    includes?: string[];\r\n    metadataOnly?: boolean;\r\n    timeSeriesIncludes?: AbstractTimeSeriesRange[];\r\n    revisionsIncludesByChangeVector?: string[];\r\n    revisionIncludeByDateTimeBefore?: Date;\r\n    compareExchangeValueIncludes?: string[];\r\n}\r\n\r\nexport interface GetDocumentsStartingWithOptions\r\n    extends GetDocumentsCommandOptionsBase {\r\n    start: number;\r\n    pageSize: number;\r\n    startsWith?: string;\r\n    startsAfter?: string;\r\n    matches?: string;\r\n    exclude?: string;\r\n    metadataOnly?: boolean;\r\n}\r\n\r\nexport interface GetDocumentsResult {\r\n    includes: IRavenObject;\r\n    results: any[];\r\n    counterIncludes: IRavenObject;\r\n    revisionIncludes: any[];\r\n    timeSeriesIncludes: IRavenObject;\r\n    compareExchangeValueIncludes: IRavenObject;\r\n    nextPageStart: number;\r\n}\r\n\r\nexport class GetDocumentsCommand extends RavenCommand<GetDocumentsResult> {\r\n\r\n    private readonly _id: string;\r\n\r\n    private readonly _ids: string[];\r\n    private readonly _includes: string[];\r\n\r\n    private _counters: string[];\r\n    private _includeAllCounters: boolean;\r\n    private _txMode: TransactionMode;\r\n\r\n    private _timeSeriesIncludes: AbstractTimeSeriesRange[];\r\n    private _revisionsIncludeByChangeVector: string[];\r\n    private _revisionsIncludeByDateTime: Date;\r\n    private _compareExchangeValueIncludes: string[];\r\n\r\n    private readonly _metadataOnly: boolean;\r\n\r\n    private readonly _startsWith: string;\r\n    private readonly _matches: string;\r\n    private readonly _start: number;\r\n    private readonly _pageSize: number;\r\n    private readonly _exclude: string;\r\n    private readonly _startAfter: string;\r\n\r\n    private readonly _conventions: DocumentConventions;\r\n\r\n    public constructor(\r\n        opts: GetDocumentsByIdCommandOptions | GetDocumentsByIdsCommandOptions | GetDocumentsStartingWithOptions) {\r\n        super();\r\n\r\n        this._conventions = opts.conventions;\r\n\r\n        // eslint-disable-next-line no-prototype-builtins\r\n        if (opts.hasOwnProperty(\"id\")) {\r\n            opts = opts as GetDocumentsByIdCommandOptions;\r\n            if (!opts.id) {\r\n                throwError(\"InvalidArgumentException\", \"id cannot be null\");\r\n            }\r\n            this._id = opts.id;\r\n            this._includes = opts.includes;\r\n            this._metadataOnly = opts.metadataOnly;\r\n            // eslint-disable-next-line no-prototype-builtins\r\n        } else if (opts.hasOwnProperty(\"ids\")) {\r\n            opts = opts as GetDocumentsByIdsCommandOptions;\r\n            if (!opts.ids || opts.ids.length === 0) {\r\n                throwError(\"InvalidArgumentException\", \"Please supply at least one id\");\r\n            }\r\n            this._ids = opts.ids;\r\n            this._includes = opts.includes;\r\n            this._metadataOnly = opts.metadataOnly;\r\n            this._timeSeriesIncludes = opts.timeSeriesIncludes;\r\n            this._compareExchangeValueIncludes = opts.compareExchangeValueIncludes;\r\n            this._revisionsIncludeByDateTime = opts.revisionIncludeByDateTimeBefore;\r\n            this._revisionsIncludeByChangeVector = opts.revisionsIncludesByChangeVector;\r\n            // eslint-disable-next-line no-prototype-builtins\r\n        } else if (opts.hasOwnProperty(\"start\") && opts.hasOwnProperty(\"pageSize\")) {\r\n            opts = opts as GetDocumentsStartingWithOptions;\r\n            this._start = opts.start;\r\n            this._pageSize = opts.pageSize;\r\n\r\n            // eslint-disable-next-line no-prototype-builtins\r\n            if (opts.hasOwnProperty(\"startsWith\")) {\r\n                if (!opts.startsWith) {\r\n                    throwError(\"InvalidArgumentException\", \"startWith cannot be null\");\r\n                }\r\n                this._startsWith = opts.startsWith;\r\n                this._startAfter = opts.startsAfter;\r\n                this._matches = opts.matches;\r\n                this._exclude = opts.exclude;\r\n                this._metadataOnly = opts.metadataOnly;\r\n            }\r\n        }\r\n\r\n        // eslint-disable-next-line no-prototype-builtins\r\n        if (opts.hasOwnProperty(\"includeAllCounters\" as keyof GetDocumentsCommandCounterOptions)) {\r\n            this._includeAllCounters = opts.includeAllCounters;\r\n        }\r\n\r\n        // eslint-disable-next-line no-prototype-builtins\r\n        if (opts.hasOwnProperty(\"counterIncludes\" as keyof GetDocumentsCommandCounterOptions)) {\r\n            const counters = opts.counterIncludes as string[];\r\n            if (!counters) {\r\n                throwError(\"InvalidArgumentException\", \"CounterIncludes cannot be null.\");\r\n            }\r\n\r\n            this._counters = counters;\r\n        }\r\n    }\r\n\r\n    public createRequest(node: ServerNode): HttpRequestParameters {\r\n        const uriPath = `${node.url}/databases/${node.database}/docs?`;\r\n\r\n        let query = \"\";\r\n\r\n        if (this._txMode === \"ClusterWide\") {\r\n            query += \"&txMode=ClusterWide\";\r\n        }\r\n\r\n        if (!TypeUtil.isNullOrUndefined(this._start)) {\r\n            query += `&start=${this._start}`;\r\n        }\r\n\r\n        if (this._pageSize) {\r\n            query += `&pageSize=${this._pageSize}`;\r\n        }\r\n\r\n        if (this._metadataOnly) {\r\n            query += \"&metadataOnly=true\";\r\n        }\r\n\r\n        if (this._startsWith) {\r\n            query += `&startsWith=${encodeURIComponent(this._startsWith)}`;\r\n\r\n            if (this._matches) {\r\n                query += `&matches=${encodeURIComponent(this._matches)}`;\r\n            }\r\n\r\n            if (this._exclude) {\r\n                query += `&exclude=${encodeURIComponent(this._exclude)}`;\r\n            }\r\n\r\n            if (this._startAfter) {\r\n                query += `&startAfter=${this._startAfter}`;\r\n            }\r\n        }\r\n\r\n        if (this._includes) {\r\n            for (const include of this._includes) {\r\n                query += `&include=${encodeURIComponent(include)}`;\r\n            }\r\n        }\r\n\r\n        if (this._includeAllCounters) {\r\n            query += `&counter=${COUNTERS.ALL}`;\r\n        } else if (this._counters && this._counters.length) {\r\n            for (const counter of this._counters) {\r\n                query += `&counter=${encodeURIComponent(counter)}`;\r\n            }\r\n        }\r\n\r\n        if (this._timeSeriesIncludes) {\r\n            for (const tsInclude of this._timeSeriesIncludes) {\r\n                if (\"from\" in tsInclude) {\r\n                    const range = tsInclude as TimeSeriesRange;\r\n                    query += \"&timeseries=\" + this._urlEncode(range.name)\r\n                        + \"&from=\" + (range.from ? DateUtil.utc.stringify(range.from) : \"\")\r\n                        + \"&to=\" + (range.to ? DateUtil.utc.stringify(range.to) : \"\");\r\n                } else if (\"time\" in tsInclude) {\r\n                    const timeRange = tsInclude as TimeSeriesTimeRange;\r\n                    query +=\r\n                        \"&timeseriestime=\"\r\n                        + this._urlEncode(timeRange.name)\r\n                        + \"&timeType=\"\r\n                        + this._urlEncode(timeRange.type)\r\n                        + \"&timeValue=\"\r\n                        + timeRange.time.value\r\n                        + \"&timeUnit=\"\r\n                        + this._urlEncode(timeRange.time.unit);\r\n                } else if (\"count\" in tsInclude) {\r\n                    const countRange = tsInclude as TimeSeriesCountRange;\r\n                    query +=\r\n                        \"&timeseriescount=\"\r\n                        + this._urlEncode(countRange.name)\r\n                        + \"&countType=\"\r\n                        + this._urlEncode(countRange.type)\r\n                        + \"&countValue=\"\r\n                        + countRange.count;\r\n                } else {\r\n                    throwError(\"InvalidArgumentException\", \"Unexpected TimeSeries range: \" + tsInclude);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this._revisionsIncludeByChangeVector) {\r\n            for (const changeVector of this._revisionsIncludeByChangeVector) {\r\n                query += \"&revisions=\" + this._urlEncode(changeVector);\r\n            }\r\n        }\r\n\r\n        if (this._revisionsIncludeByDateTime) {\r\n            query += \"&revisionsBefore=\" + this._urlEncode(DateUtil.utc.stringify(this._revisionsIncludeByDateTime));\r\n        }\r\n\r\n        if (this._compareExchangeValueIncludes) {\r\n            for (const compareExchangeValue of this._compareExchangeValueIncludes) {\r\n                query += \"&cmpxchg=\" + this._urlEncode(compareExchangeValue);\r\n            }\r\n        }\r\n\r\n        let request: HttpRequestParameters = { method: \"GET\", uri: uriPath + query };\r\n\r\n        if (this._id) {\r\n            request.uri += `&id=${encodeURIComponent(this._id)}`;\r\n        } else if (this._ids) {\r\n            request = this.prepareRequestWithMultipleIds(request, this._ids);\r\n        }\r\n\r\n        return request;\r\n    }\r\n\r\n    public prepareRequestWithMultipleIds(request: HttpRequestParameters, ids: string[]): HttpRequestParameters {\r\n        const uniqueIds = new Set<string>(ids);\r\n\r\n        // if it is too big, we fallback to POST (note that means that we can't use the HTTP cache any longer)\r\n        // we are fine with that, requests to load > 1024 items are going to be rare\r\n        const isGet: boolean = Array.from(uniqueIds)\r\n            .filter(x => x)\r\n            .map(x => x.length)\r\n            .reduce((result, next) => result + next, 0) < 1024;\r\n\r\n        let newUri = request.uri;\r\n        if (isGet) {\r\n            for (const x of uniqueIds) {\r\n                newUri += `&id=${encodeURIComponent(x || \"\")}`;\r\n            }\r\n\r\n            return { method: \"GET\", uri: newUri };\r\n        } else {\r\n            const body = this._serializer\r\n                .serialize({ ids: [...uniqueIds] });\r\n\r\n            const calculateHash = GetDocumentsCommand._calculateHash(uniqueIds);\r\n            newUri += `&loadHash=${encodeURIComponent(calculateHash)}`;\r\n\r\n            return {\r\n                uri: newUri,\r\n                method: \"POST\",\r\n                headers: getHeaders()\r\n                    .typeAppJson()\r\n                    .build(),\r\n                body\r\n            };\r\n        }\r\n    }\r\n\r\n    private static _calculateHash(uniqueIds: Set<string>): string {\r\n        const hasher = new HashCalculator();\r\n\r\n        for (const x of uniqueIds) {\r\n            hasher.write(x);\r\n        }\r\n\r\n        return hasher.getHash();\r\n    }\r\n\r\n    public async setResponseAsync(bodyStream: Stream, fromCache: boolean): Promise<string> {\r\n        if (!bodyStream) {\r\n            this.result = null;\r\n            return;\r\n        }\r\n\r\n        let body: string = null;\r\n        this.result =\r\n            await GetDocumentsCommand.parseDocumentsResultResponseAsync(\r\n                bodyStream, this._conventions, b => body = b);\r\n\r\n        return body as string;\r\n    }\r\n\r\n    public static async parseDocumentsResultResponseAsync(\r\n        bodyStream: Stream,\r\n        conventions: DocumentConventions,\r\n        bodyCallback?: (body: string) => void): Promise<GetDocumentsResult> {\r\n\r\n        const body = await readToEnd(bodyStream);\r\n        bodyCallback?.(body);\r\n\r\n        const parsedJson = JSON.parse(body);\r\n\r\n        return GetDocumentsCommand._mapToLocalObject(parsedJson, conventions);\r\n    }\r\n\r\n    private static _mapToLocalObject(json: any, conventions: DocumentConventions): GetDocumentsResult {\r\n        return {\r\n            results: json.Results.map(x => ObjectUtil.transformDocumentKeys(x, conventions)),\r\n            includes: ObjectUtil.mapIncludesToLocalObject(json.Includes, conventions),\r\n            compareExchangeValueIncludes: ObjectUtil.mapCompareExchangeToLocalObject(json.CompareExchangeValueIncludes),\r\n            timeSeriesIncludes: ObjectUtil.mapTimeSeriesIncludesToLocalObject(json.TimeSeriesIncludes),\r\n            counterIncludes: ObjectUtil.mapCounterIncludesToLocalObject(json.CounterIncludes),\r\n            revisionIncludes: json.RevisionIncludes,\r\n            nextPageStart: json.NextPageStart\r\n        };\r\n    }\r\n\r\n    public get isReadRequest(): boolean {\r\n        return true;\r\n    }\r\n\r\n    public set transactionMode(mode: TransactionMode) {\r\n        this._txMode = mode;\r\n    }\r\n}\r\n"]}