import { HttpRequestParameters } from "../../Primitives/Http.js";
import { RavenCommand } from "../../Http/RavenCommand.js";
import { GetConflictsResult } from "./GetConflictsResult.js";
import { ServerNode } from "../../Http/ServerNode.js";
import { Stream } from "node:stream";
import { DocumentConventions } from "../Conventions/DocumentConventions.js";
export declare class GetConflictsCommand extends RavenCommand<GetConflictsResult> {
    private readonly _id;
    private readonly _conventions;
    constructor(id: string, conventions: DocumentConventions);
    get isReadRequest(): boolean;
    createRequest(node: ServerNode): HttpRequestParameters;
    setResponseAsync(bodyStream: Stream, fromCache: boolean): Promise<string>;
}
//# sourceMappingURL=GetConflictsCommand.d.ts.map