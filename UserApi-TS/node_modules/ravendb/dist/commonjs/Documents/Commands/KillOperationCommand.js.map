{"version":3,"file":"KillOperationCommand.js","sourceRoot":"","sources":["../../../../src/Documents/Commands/KillOperationCommand.ts"],"names":[],"mappings":";;;AAAA,gEAA0D;AAG1D,wDAAuD;AAEvD,MAAa,oBAAqB,SAAQ,8BAAkB;IAEvC,GAAG,CAAS;IAI7B,YAAmB,EAAU,EAAE,OAAgB;QAC3C,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,EAAE,EAAE,CAAC;YACN,IAAA,qBAAU,EAAC,0BAA0B,EAAE,oBAAoB,CAAC,CAAC;QACjE,CAAC;QACD,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;QAEd,IAAI,OAAO,EAAE,CAAC;YACV,IAAI,CAAC,gBAAgB,GAAG,OAAO,CAAC;QACpC,CAAC;IACL,CAAC;IAED,IAAW,aAAa;QACpB,OAAO,KAAK,CAAC;IACjB,CAAC;IAEM,aAAa,CAAC,IAAgB;QACjC,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,cAAc,IAAI,CAAC,QAAQ,uBAAuB,IAAI,CAAC,GAAG,EAAE,CAAC;QACpF,OAAO;YACH,GAAG;YACH,MAAM,EAAE,MAAM;SACjB,CAAC;IACN,CAAC;CACJ;AA9BD,oDA8BC","sourcesContent":["import { RavenCommand } from \"../../Http/RavenCommand.js\";\r\nimport { ServerNode } from \"../../Http/ServerNode.js\";\r\nimport { HttpRequestParameters } from \"../../Primitives/Http.js\";\r\nimport { throwError } from \"../../Exceptions/index.js\";\r\n\r\nexport class KillOperationCommand extends RavenCommand<void> {\r\n\r\n    private readonly _id: number;\r\n\r\n    public constructor(id: number)\r\n    public constructor(id: number, nodeTag: string)\r\n    public constructor(id: number, nodeTag?: string) {\r\n        super();\r\n\r\n        if (!id) {\r\n            throwError(\"InvalidArgumentException\", \"Id cannot be null.\");\r\n        }\r\n        this._id = id;\r\n\r\n        if (nodeTag) {\r\n            this._selectedNodeTag = nodeTag;\r\n        }\r\n    }\r\n\r\n    public get isReadRequest(): boolean {\r\n        return false;\r\n    }\r\n\r\n    public createRequest(node: ServerNode): HttpRequestParameters {\r\n        const uri = `${node.url}/databases/${node.database}/operations/kill?id=${this._id}`;\r\n        return {\r\n            uri,\r\n            method: \"POST\"\r\n        };\r\n    }\r\n}\r\n"]}