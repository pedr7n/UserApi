{"version":3,"file":"MultiGetCommand.js","sourceRoot":"","sources":["../../../../../src/Documents/Commands/MultiGet/MultiGetCommand.ts"],"names":[],"mappings":"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","sourcesContent":["import { Stream } from \"node:stream\";\r\nimport { RavenCommand } from \"../../../Http/RavenCommand.js\";\r\nimport { GetResponse } from \"./GetResponse.js\";\r\nimport { HttpCache, ReleaseCacheItem } from \"../../../Http/HttpCache.js\";\r\nimport { HttpRequestParameters } from \"../../../Primitives/Http.js\";\r\nimport { GetRequest } from \"./GetRequest.js\";\r\nimport { ServerNode } from \"../../../Http/ServerNode.js\";\r\nimport { StatusCodes } from \"../../../Http/StatusCode.js\";\r\nimport { getEtagHeader } from \"../../../Utility/HttpUtil.js\";\r\nimport { DocumentConventions } from \"../../Conventions/DocumentConventions.js\";\r\nimport { throwError } from \"../../../Exceptions/index.js\";\r\nimport { IDisposable } from \"../../../Types/Contracts.js\";\r\nimport { RequestExecutor } from \"../../../Http/RequestExecutor.js\";\r\nimport { AggressiveCacheOptions } from \"../../../Http/AggressiveCacheOptions.js\";\r\nimport { HEADERS } from \"../../../Constants.js\";\r\nimport { ServerCasing, ServerResponse } from \"../../../Types/index.js\";\r\nimport { SessionInfo } from \"../../Session/IDocumentSession.js\";\r\nimport { ObjectUtil } from \"../../../Utility/ObjectUtil.js\";\r\n\r\nexport class MultiGetCommand extends RavenCommand<GetResponse[]> implements IDisposable {\r\n    private readonly _requestExecutor: RequestExecutor;\r\n    private _httpCache: HttpCache;\r\n    private readonly _commands: GetRequest[];\r\n    private _sessionInfo: SessionInfo;\r\n    private _conventions: DocumentConventions;\r\n    private _baseUrl: string;\r\n    private _cached: Cached;\r\n\r\n    aggressivelyCached: boolean;\r\n\r\n    public constructor(requestExecutor: RequestExecutor, conventions: DocumentConventions, commands: GetRequest[], sessionInfo?: SessionInfo) {\r\n        super();\r\n\r\n        this._requestExecutor = requestExecutor;\r\n        if (!requestExecutor) {\r\n            throwError(\"InvalidArgumentException\", \"RequestExecutor cannot be null\");\r\n        }\r\n\r\n        this._httpCache = requestExecutor.cache;\r\n\r\n        if (!commands) {\r\n            throwError(\"InvalidArgumentException\", \"Commands cannot be null\");\r\n        }\r\n\r\n        this._commands = commands;\r\n        this._conventions = conventions;\r\n        this._sessionInfo = sessionInfo;\r\n        this._responseType = \"Raw\";\r\n    }\r\n\r\n    private _getCacheKey(command: GetRequest): string {\r\n        const url = this._baseUrl + command.urlAndQuery;\r\n        return (command.method || \"GET\") + \"-\" + url;\r\n    }\r\n\r\n    public createRequest(node: ServerNode): HttpRequestParameters {\r\n        this._baseUrl = node.url + \"/databases/\" + node.database;\r\n\r\n        const requests = [];\r\n        const bodyObj = { Requests: requests };\r\n        const request: HttpRequestParameters = {\r\n            uri: this._baseUrl + \"/multi_get\",\r\n            method: \"POST\",\r\n            headers: this._headers().typeAppJson().build(),\r\n        };\r\n\r\n        if ((!this._sessionInfo || !this._sessionInfo.noCaching) && this._maybeReadAllFromCache(this._requestExecutor.aggressiveCaching)) {\r\n            this.aggressivelyCached = true;\r\n            return null; // aggressively cached\r\n        }\r\n\r\n        for (const command of this._commands) {\r\n            const req = {\r\n                Url: \"/databases/\" + node.database + command.url,\r\n                Query: command.query,\r\n                Method: command.method || \"GET\",\r\n                Headers: command.headers,\r\n                Content: command.body\r\n            };\r\n\r\n            requests.push(req);\r\n        }\r\n\r\n        request.body = JSON.stringify(bodyObj);\r\n\r\n        return request;\r\n    }\r\n\r\n    private _maybeReadAllFromCache(options: AggressiveCacheOptions) {\r\n        this.closeCache();\r\n\r\n        let readAllFromCache = !!options;\r\n\r\n        for (let i = 0; i < this._commands.length; i++) {\r\n            const command = this._commands[i];\r\n\r\n            if (HEADERS.IF_NONE_MATCH in command.headers) {\r\n                continue;  // command already explicitly handling setting this, let's not touch it.\r\n            }\r\n\r\n            const cacheKey = this._getCacheKey(command);\r\n\r\n            let changeVector: string;\r\n            let cachedRef: string;\r\n\r\n            const cachedItem = this._httpCache.get(cacheKey, c => {\r\n                changeVector = c.changeVector;\r\n                cachedRef = c.response;\r\n            });\r\n\r\n            if (!cachedItem.item) {\r\n                readAllFromCache = false;\r\n                continue;\r\n            }\r\n\r\n            if (readAllFromCache && cachedItem.age > options.duration || !command.canCacheAggressively) {\r\n                readAllFromCache = false;\r\n            }\r\n\r\n            command.headers[HEADERS.IF_NONE_MATCH] = changeVector;\r\n\r\n            if (!this._cached) {\r\n                this._cached = new Cached(this._commands.length);\r\n            }\r\n\r\n            this._cached.values[i] = [cachedItem, cachedRef];\r\n        }\r\n\r\n        if (readAllFromCache) {\r\n            try {\r\n                this.result = [];\r\n\r\n                for (let i = 0; i < this._commands.length; i++) {\r\n                    const itemAndCached = this._cached.values[i];\r\n                    const getResponse = new GetResponse();\r\n                    getResponse.result = itemAndCached[1];\r\n                    getResponse.statusCode = StatusCodes.NotModified;\r\n\r\n                    this.result.push(getResponse);\r\n                }\r\n            } finally {\r\n                this._cached.dispose();\r\n            }\r\n\r\n            this._cached = null;\r\n        }\r\n\r\n        return readAllFromCache;\r\n    }\r\n\r\n    public async setResponseAsync(bodyStream: Stream, fromCache: boolean): Promise<string> {\r\n        if (!bodyStream) {\r\n            this._throwInvalidResponse();\r\n        }\r\n        try {\r\n            const result = await this._pipeline<ServerCasing<ServerResponse<{ Results: GetResponse[] }>>>()\r\n                .parseJsonSync()\r\n                .process(bodyStream);\r\n\r\n            const responses = result.Results.map(item => MultiGetCommand._mapToLocalObject(item));\r\n\r\n            this.result = [];\r\n\r\n            for (let i = 0; i < responses.length; i++) {\r\n                const res = responses[i];\r\n                const command = this._commands[i];\r\n                this._maybeSetCache(res, command, i);\r\n\r\n                if (this._cached && res.statusCode === StatusCodes.NotModified) {\r\n                    const clonedResponse = new GetResponse();\r\n                    clonedResponse.result = this._cached.values[i][1];\r\n                    clonedResponse.statusCode = StatusCodes.NotModified;\r\n                    this.result.push(clonedResponse);\r\n                } else {\r\n                    this.result.push(GetResponse.create(res));\r\n                }\r\n            }\r\n\r\n            return null;\r\n        } finally {\r\n            if (this._cached) {\r\n                this._cached.dispose();\r\n            }\r\n        }\r\n    }\r\n\r\n    private _maybeSetCache(getResponse: GetResponse, command: GetRequest, cachedIndex: number): void {\r\n        if (getResponse.statusCode === StatusCodes.NotModified) {\r\n            // if not modified - update age\r\n            if (this._cached) {\r\n                this._cached.values[cachedIndex][0].notModified();\r\n            }\r\n            return;\r\n        }\r\n\r\n        const cacheKey = this._getCacheKey(command);\r\n        const result = getResponse.result;\r\n        if (!result) {\r\n            this._httpCache.setNotFound(cacheKey);\r\n            return;\r\n        }\r\n\r\n        const changeVector = getEtagHeader(getResponse.headers);\r\n        if (!changeVector) {\r\n            return;\r\n        }\r\n\r\n        this._httpCache.set(cacheKey, changeVector, result);\r\n    }\r\n\r\n    public get isReadRequest(): boolean {\r\n        return false;\r\n    }\r\n\r\n    dispose(): void {\r\n        this.closeCache();\r\n    }\r\n\r\n    public closeCache() {\r\n        //If _cached is not null - it means that the client approached with this multitask request to node and the request failed.\r\n        //and now client tries to send it to another node.\r\n        if (this._cached) {\r\n            this._cached.dispose();\r\n\r\n            this._cached = null;\r\n\r\n            // The client sends the commands.\r\n            // Some of which could be saved in cache with a response\r\n            // that includes the change vector that received from the old fallen node.\r\n            // The client can't use those responses because their URLs are different\r\n            // (include the IP and port of the old node), because of that the client\r\n            // needs to get those docs again from the new node.\r\n\r\n            for (const command of this._commands) {\r\n                delete command.headers[HEADERS.IF_NONE_MATCH];\r\n            }\r\n        }\r\n    }\r\n\r\n    private static _mapToLocalObject(json: ServerCasing<ServerResponse<GetResponse>>): any {\r\n        // convert from Pascal to camel on top level only\r\n        const item: any = {};\r\n        for (const [key, value] of Object.entries(json)) {\r\n            item[ObjectUtil.camelCase(key)] = value;\r\n        }\r\n\r\n        item.result = item.result ? JSON.stringify(item.result) : null;\r\n        return item;\r\n    }\r\n}\r\n\r\nclass Cached implements IDisposable {\r\n    private readonly _size: number;\r\n\r\n    public values: [ReleaseCacheItem, string][];\r\n\r\n    public constructor(size: number) {\r\n        this._size = size;\r\n        this.values = new Array(size);\r\n    }\r\n\r\n    dispose(): void {\r\n        if (!this.values) {\r\n            return;\r\n        }\r\n\r\n        this.values = null;\r\n    }\r\n}\r\n"]}