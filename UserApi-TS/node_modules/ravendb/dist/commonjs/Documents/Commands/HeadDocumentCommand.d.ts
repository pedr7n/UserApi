import { HttpRequestParameters, HttpResponse } from "../../Primitives/Http.js";
import { ResponseDisposeHandling, RavenCommand } from "../../Http/RavenCommand.js";
import { HttpCache } from "../../Http/HttpCache.js";
import { ServerNode } from "../../Http/ServerNode.js";
import { Readable } from "node:stream";
export declare class HeadDocumentCommand extends RavenCommand<string> {
    private readonly _id;
    private readonly _changeVector;
    constructor(id: string, changeVector: string);
    get isReadRequest(): boolean;
    createRequest(node: ServerNode): HttpRequestParameters;
    processResponse(cache: HttpCache, response: HttpResponse, bodyStream: Readable, url: string): Promise<ResponseDisposeHandling>;
}
//# sourceMappingURL=HeadDocumentCommand.d.ts.map