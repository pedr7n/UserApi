import { RavenCommand } from "../../Http/RavenCommand.js";
import { ServerNode } from "../../Http/ServerNode.js";
import { HttpRequestParameters } from "../../Primitives/Http.js";
import { Stream } from "node:stream";
import { IRaftCommand } from "../../Http/IRaftCommand.js";
import { IBroadcast } from "../../Http/IBroadcast.js";
import { DocumentConventions } from "../Conventions/DocumentConventions.js";
export declare class NextIdentityForCommand extends RavenCommand<number> implements IRaftCommand, IBroadcast {
    private readonly _id;
    private _raftUniqueRequestId;
    constructor(id: string);
    get isReadRequest(): boolean;
    createRequest(node: ServerNode): HttpRequestParameters;
    setResponseAsync(bodyStream: Stream, fromCache: boolean): Promise<string>;
    getRaftUniqueRequestId(): string;
    prepareToBroadcast(conventions: DocumentConventions): IBroadcast;
}
//# sourceMappingURL=NextIdentityForCommand.d.ts.map