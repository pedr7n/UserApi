import { RavenCommand } from "../../Http/RavenCommand.js";
import { CreateSubscriptionResult } from "../Subscriptions/CreateSubscriptionResult.js";
import { SubscriptionCreationOptions } from "../Subscriptions/SubscriptionCreationOptions.js";
import { HttpRequestParameters } from "../../Primitives/Http.js";
import { Stream } from "node:stream";
import { ServerNode } from "../../Http/ServerNode.js";
import { IRaftCommand } from "../../Http/IRaftCommand.js";
export declare class CreateSubscriptionCommand extends RavenCommand<CreateSubscriptionResult> implements IRaftCommand {
    private readonly _options;
    private readonly _id;
    constructor(options: SubscriptionCreationOptions, id?: string);
    createRequest(node: ServerNode): HttpRequestParameters;
    setResponseAsync(bodyStream: Stream, fromCache: boolean): Promise<string>;
    get isReadRequest(): boolean;
    getRaftUniqueRequestId(): string;
}
//# sourceMappingURL=CreateSubscriptionCommand.d.ts.map