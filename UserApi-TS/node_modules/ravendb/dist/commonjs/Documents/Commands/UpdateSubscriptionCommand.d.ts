import { HttpRequestParameters } from "../../Primitives/Http.js";
import { Stream } from "node:stream";
import { UpdateSubscriptionResult } from "../Subscriptions/UpdateSubscriptionResult.js";
import { SubscriptionUpdateOptions } from "../Subscriptions/SubscriptionUpdateOptions.js";
import { RavenCommand } from "../../Http/RavenCommand.js";
import { IRaftCommand } from "../../Http/IRaftCommand.js";
import { ServerNode } from "../../Http/ServerNode.js";
export declare class UpdateSubscriptionCommand extends RavenCommand<UpdateSubscriptionResult> implements IRaftCommand {
    private readonly _options;
    constructor(options: SubscriptionUpdateOptions);
    createRequest(node: ServerNode): HttpRequestParameters;
    setResponseFromCache(cachedValue: string): Promise<void>;
    setResponseAsync(bodyStream: Stream, fromCache: boolean): Promise<string>;
    get isReadRequest(): boolean;
    getRaftUniqueRequestId(): string;
}
//# sourceMappingURL=UpdateSubscriptionCommand.d.ts.map