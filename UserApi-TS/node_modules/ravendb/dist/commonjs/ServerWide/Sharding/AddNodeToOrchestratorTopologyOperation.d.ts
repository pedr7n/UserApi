import { IServerOperation, OperationResultType } from "../../Documents/Operations/OperationAbstractions.js";
import { OrchestratorTopology } from "../OrchestratorTopology.js";
import { DocumentConventions } from "../../Documents/Conventions/DocumentConventions.js";
import { RavenCommand } from "../../Http/RavenCommand.js";
export declare class AddNodeToOrchestratorTopologyOperation implements IServerOperation<ModifyOrchestratorTopologyResult> {
    private readonly _databaseName;
    private readonly _node;
    constructor(databaseName: string, node?: string);
    get resultType(): OperationResultType;
    getCommand(conventions: DocumentConventions): RavenCommand<ModifyOrchestratorTopologyResult>;
}
export interface ModifyOrchestratorTopologyResult {
    name: string;
    orchestratorTopology: OrchestratorTopology;
    raftCommandIndex: number;
}
//# sourceMappingURL=AddNodeToOrchestratorTopologyOperation.d.ts.map