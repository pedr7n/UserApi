{"version":3,"file":"DeleteServerWideAnalyzerOperation.js","sourceRoot":"","sources":["../../../../../src/ServerWide/Operations/Analyzers/DeleteServerWideAnalyzerOperation.ts"],"names":[],"mappings":";;;AACA,2DAA0D;AAE1D,mEAA6D;AAI7D,4EAAsE;AAEtE,MAAa,iCAAiC;IACzB,aAAa,CAAS;IAEvC,YAAmB,YAAoB;QACnC,IAAI,CAAC,YAAY,EAAE,CAAC;YAChB,IAAA,qBAAU,EAAC,0BAA0B,EAAE,6BAA6B,CAAC,CAAC;QAC1E,CAAC;QAED,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;IACtC,CAAC;IAED,IAAW,UAAU;QACjB,OAAO,eAAe,CAAC;IAC3B,CAAC;IAED,UAAU,CAAC,WAAgC;QACvC,OAAO,IAAI,+BAA+B,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IACnE,CAAC;CACJ;AAlBD,8EAkBC;AAED,MAAM,+BAAgC,SAAQ,8BAAkB;IAC3C,aAAa,CAAS;IAEvC,YAAmB,YAAoB;QACnC,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,YAAY,EAAE,CAAC;YAChB,IAAA,qBAAU,EAAC,0BAA0B,EAAE,6BAA6B,CAAC,CAAC;QAC1E,CAAC;QAED,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;IACtC,CAAC;IAED,aAAa,CAAC,IAAgB;QAC1B,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,wBAAwB,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAEtF,OAAO;YACH,GAAG;YACH,MAAM,EAAE,QAAQ;SACnB,CAAA;IACL,CAAC;IAED,IAAI,aAAa;QACb,OAAO,KAAK,CAAC;IACjB,CAAC;IAED,sBAAsB;QAClB,OAAO,oCAAe,CAAC,KAAK,EAAE,CAAC;IACnC,CAAC;CACJ","sourcesContent":["import { IServerOperation, OperationResultType } from \"../../../Documents/Operations/OperationAbstractions.js\";\r\nimport { throwError } from \"../../../Exceptions/index.js\";\r\nimport { DocumentConventions } from \"../../../Documents/Conventions/DocumentConventions.js\";\r\nimport { RavenCommand } from \"../../../Http/RavenCommand.js\";\r\nimport { IRaftCommand } from \"../../../Http/IRaftCommand.js\";\r\nimport { HttpRequestParameters } from \"../../../Primitives/Http.js\";\r\nimport { ServerNode } from \"../../../Http/ServerNode.js\";\r\nimport { RaftIdGenerator } from \"../../../Utility/RaftIdGenerator.js\";\r\n\r\nexport class DeleteServerWideAnalyzerOperation implements IServerOperation<void> {\r\n    private readonly _analyzerName: string;\r\n\r\n    public constructor(analyzerName: string) {\r\n        if (!analyzerName) {\r\n            throwError(\"InvalidArgumentException\", \"AnalyzerName cannot be null\");\r\n        }\r\n\r\n        this._analyzerName = analyzerName;\r\n    }\r\n\r\n    public get resultType(): OperationResultType {\r\n        return \"CommandResult\";\r\n    }\r\n\r\n    getCommand(conventions: DocumentConventions): RavenCommand<void> {\r\n        return new DeleteServerWideAnalyzerCommand(this._analyzerName);\r\n    }\r\n}\r\n\r\nclass DeleteServerWideAnalyzerCommand extends RavenCommand<void> implements IRaftCommand {\r\n    private readonly _analyzerName: string;\r\n\r\n    public constructor(analyzerName: string) {\r\n        super();\r\n\r\n        if (!analyzerName) {\r\n            throwError(\"InvalidArgumentException\", \"AnalyzerName cannot be null\");\r\n        }\r\n\r\n        this._analyzerName = analyzerName;\r\n    }\r\n\r\n    createRequest(node: ServerNode): HttpRequestParameters {\r\n        const uri = node.url + \"/admin/analyzers?name=\" + this._urlEncode(this._analyzerName);\r\n\r\n        return {\r\n            uri,\r\n            method: \"DELETE\"\r\n        }\r\n    }\r\n\r\n    get isReadRequest(): boolean {\r\n        return false;\r\n    }\r\n\r\n    getRaftUniqueRequestId(): string {\r\n        return RaftIdGenerator.newId();\r\n    }\r\n}"]}