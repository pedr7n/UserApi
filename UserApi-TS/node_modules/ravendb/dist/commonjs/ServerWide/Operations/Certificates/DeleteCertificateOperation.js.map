{"version":3,"file":"DeleteCertificateOperation.js","sourceRoot":"","sources":["../../../../../src/ServerWide/Operations/Certificates/DeleteCertificateOperation.ts"],"names":[],"mappings":";;;AAAA,2DAA0D;AAI1D,mEAA6D;AAG7D,4EAAsE;AAEtE,MAAa,0BAA0B;IAElB,WAAW,CAAS;IAErC,YAAmB,UAAkB;QACjC,IAAI,CAAC,UAAU,EAAE,CAAC;YACd,IAAA,qBAAU,EAAC,0BAA0B,EAAE,4BAA4B,CAAC,CAAC;QACzE,CAAC;QAED,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;IAClC,CAAC;IAED,IAAW,UAAU;QACjB,OAAO,eAAe,CAAC;IAC3B,CAAC;IAED,UAAU,CAAC,WAAgC;QACvC,OAAO,IAAI,wBAAwB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC1D,CAAC;CACJ;AAnBD,gEAmBC;AAED,MAAM,wBAAyB,SAAQ,8BAAkB;IACpC,WAAW,CAAS;IAErC,YAAmB,UAAkB;QACjC,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,UAAU,EAAE,CAAC;YACd,IAAA,qBAAU,EAAC,0BAA0B,EAAE,2BAA2B,CAAC,CAAC;QACxE,CAAC;QAED,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;IAClC,CAAC;IAED,IAAI,aAAa;QACb,OAAO,KAAK,CAAC;IACjB,CAAC;IAED,aAAa,CAAC,IAAgB;QAC1B,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,iCAAiC,GAAG,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAEhG,OAAO;YACH,GAAG;YACH,MAAM,EAAE,QAAQ;SACnB,CAAA;IACL,CAAC;IAEM,sBAAsB;QACzB,OAAO,oCAAe,CAAC,KAAK,EAAE,CAAC;IACnC,CAAC;CACJ","sourcesContent":["import { throwError } from \"../../../Exceptions/index.js\";\r\nimport { HttpRequestParameters } from \"../../../Primitives/Http.js\";\r\nimport { IServerOperation, OperationResultType } from \"../../../Documents/Operations/OperationAbstractions.js\";\r\nimport { DocumentConventions } from \"../../../Documents/Conventions/DocumentConventions.js\";\r\nimport { RavenCommand } from \"../../../Http/RavenCommand.js\";\r\nimport { ServerNode } from \"../../../Http/ServerNode.js\";\r\nimport { IRaftCommand } from \"../../../Http/IRaftCommand.js\";\r\nimport { RaftIdGenerator } from \"../../../Utility/RaftIdGenerator.js\";\r\n\r\nexport class DeleteCertificateOperation implements IServerOperation<void> {\r\n\r\n    private readonly _thumbprint: string;\r\n\r\n    public constructor(thumbprint: string) {\r\n        if (!thumbprint) {\r\n            throwError(\"InvalidArgumentException\", \"Thumbprint cannot be null.\");\r\n        }\r\n\r\n        this._thumbprint = thumbprint;\r\n    }\r\n\r\n    public get resultType(): OperationResultType {\r\n        return \"CommandResult\";\r\n    }\r\n\r\n    getCommand(conventions: DocumentConventions): RavenCommand<void> {\r\n        return new DeleteCertificateCommand(this._thumbprint);\r\n    }\r\n}\r\n\r\nclass DeleteCertificateCommand extends RavenCommand<void> implements IRaftCommand {\r\n    private readonly _thumbprint: string;\r\n\r\n    public constructor(thumbprint: string) {\r\n        super();\r\n        if (!thumbprint) {\r\n            throwError(\"InvalidArgumentException\", \"Thumbprint cannot be null\");\r\n        }\r\n\r\n        this._thumbprint = thumbprint;\r\n    }\r\n\r\n    get isReadRequest(): boolean {\r\n        return false;\r\n    }\r\n\r\n    createRequest(node: ServerNode): HttpRequestParameters {\r\n        const uri = node.url + \"/admin/certificates?thumbprint=\" + encodeURIComponent(this._thumbprint);\r\n\r\n        return {\r\n            uri,\r\n            method: \"DELETE\"\r\n        }\r\n    }\r\n\r\n    public getRaftUniqueRequestId(): string {\r\n        return RaftIdGenerator.newId();\r\n    }\r\n}"]}