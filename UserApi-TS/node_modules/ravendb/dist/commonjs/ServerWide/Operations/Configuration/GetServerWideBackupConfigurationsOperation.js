"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GetServerWideBackupConfigurationsOperation = void 0;
const RavenCommand_js_1 = require("../../../Http/RavenCommand.js");
class GetServerWideBackupConfigurationsOperation {
    getCommand(conventions) {
        return new GetServerWideBackupConfigurationsCommand();
    }
    get resultType() {
        return "CommandResult";
    }
}
exports.GetServerWideBackupConfigurationsOperation = GetServerWideBackupConfigurationsOperation;
class GetServerWideBackupConfigurationsCommand extends RavenCommand_js_1.RavenCommand {
    get isReadRequest() {
        return true;
    }
    createRequest(node) {
        const uri = node.url + "/admin/configuration/server-wide/tasks?type=Backup";
        return {
            method: "GET",
            uri
        };
    }
    async setResponseAsync(bodyStream, fromCache) {
        let body = null;
        const result = await this._defaultPipeline(_ => body = _).process(bodyStream);
        this.result = result["results"];
        return body;
    }
}
//# sourceMappingURL=GetServerWideBackupConfigurationsOperation.js.map