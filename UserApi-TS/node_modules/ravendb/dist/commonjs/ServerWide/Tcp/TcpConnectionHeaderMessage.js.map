{"version":3,"file":"TcpConnectionHeaderMessage.js","sourceRoot":"","sources":["../../../../src/ServerWide/Tcp/TcpConnectionHeaderMessage.ts"],"names":[],"mappings":"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","sourcesContent":["import { throwError } from \"../../Exceptions/index.js\";\r\nimport { DetailedReplicationHubAccess } from \"../../Documents/Operations/Replication/DetailedReplicationHubAccess.js\";\r\nimport { LicensedFeatures } from \"./LicensedFeatures.js\";\r\nimport { TypeUtil } from \"../../Utility/TypeUtil.js\";\r\n\r\nexport interface TcpConnectionHeaderMessage {\r\n    databaseName: string;\r\n    sourceNodeTag: string;\r\n    serverId: string;\r\n    operation: OperationTypes;\r\n    operationVersion: number;\r\n    info: string;\r\n    authorizeInfo: AuthorizationInfo;\r\n    licensedFeatures: LicensedFeatures;\r\n    replicationHubAccess: DetailedReplicationHubAccess;\r\n}\r\n\r\nexport type OperationTypes =\r\n    \"None\"\r\n    | \"Drop\"\r\n    | \"Subscription\"\r\n    | \"Replication\"\r\n    | \"Cluster\"\r\n    | \"Heartbeats\"\r\n    | \"Ping\"\r\n    | \"TestConnection\";\r\n\r\nexport const NUMBER_OR_RETRIES_FOR_SENDING_TCP_HEADER = 2;\r\n\r\nexport const PING_BASE_LINE = -1;\r\nexport const NONE_BASE_LINE = -1;\r\nexport const DROP_BASE_LINE = -2;\r\nexport const HEARTBEATS_BASE_LINE = 20;\r\nexport const HEARTBEATS_41200 = 41_200;\r\nexport const HEARTBEATS_42000 = 42_000;\r\nexport const HEARTBEATS_WITH_TCP_COMPRESSION = 54_000;\r\nexport const SUBSCRIPTION_BASE_LINE = 40;\r\nexport const SUBSCRIPTION_INCLUDES = 41_400;\r\nexport const SUBSCRIPTION_COUNTER_INCLUDES = 50_000;\r\nexport const SUBSCRIPTION_TIME_SERIES_INCLUDES = 51_000;\r\nexport const TCP_CONNECTIONS_WITH_COMPRESSION = 53_000;\r\nexport const TEST_CONNECTION_BASE_LINE = 50;\r\n\r\nexport const HEARTBEATS_TCP_VERSION = HEARTBEATS_WITH_TCP_COMPRESSION;\r\nexport const SUBSCRIPTION_TCP_VERSION = TCP_CONNECTIONS_WITH_COMPRESSION;\r\nexport const TEST_CONNECTION_TCP_VERSION = TEST_CONNECTION_BASE_LINE;\r\n\r\nexport class PingFeatures {\r\n    public baseLine = true;\r\n}\r\n\r\nexport class NoneFeatures {\r\n    public baseLine = true;\r\n}\r\n\r\nexport class DropFeatures {\r\n    public baseLine = true;\r\n}\r\n\r\nexport class SubscriptionFeatures {\r\n    public baseLine = true;\r\n    public includes = false;\r\n    public counterIncludes = false;\r\n    public timeSeriesIncludes = false;\r\n}\r\n\r\nexport class HeartbeatsFeatures {\r\n    public baseLine = true;\r\n    public sendChangesOnly: boolean = false;\r\n    public includeServerInfo: boolean;\r\n}\r\n\r\nexport class TestConnectionFeatures {\r\n    public baseLine = true;\r\n}\r\n\r\nexport class SupportedFeatures {\r\n    public readonly protocolVersion: number;\r\n\r\n    public constructor(version: number)\r\n    public constructor(source: SupportedFeatures)\r\n    public constructor(versionOrSource: number | SupportedFeatures) {\r\n        if (TypeUtil.isNumber(versionOrSource)) {\r\n            this.protocolVersion = versionOrSource;\r\n            return;\r\n        }\r\n        const source = versionOrSource;\r\n        this.protocolVersion = source.protocolVersion;\r\n        this.ping = source.ping;\r\n        this.none = source.none;\r\n        this.drop = source.drop;\r\n        this.subscription = source.subscription;\r\n        this.heartbeats = source.heartbeats;\r\n        this.testConnection = source.testConnection;\r\n        this.dataCompression = source.dataCompression;\r\n    }\r\n\r\n\r\n    public ping: PingFeatures;\r\n    public none: NoneFeatures;\r\n    public drop: DropFeatures;\r\n    public subscription: SubscriptionFeatures;\r\n    public heartbeats: HeartbeatsFeatures;\r\n    public testConnection: TestConnectionFeatures;\r\n\r\n    public dataCompression: boolean;\r\n}\r\n\r\nconst operationsToSupportedProtocolVersions = new Map<OperationTypes, number[]>();\r\nconst supportedFeaturesByProtocol = new Map<OperationTypes, Map<number, SupportedFeatures>>();\r\n\r\n{\r\n    operationsToSupportedProtocolVersions.set(\"Ping\", [PING_BASE_LINE]);\r\n    operationsToSupportedProtocolVersions.set(\"None\", [NONE_BASE_LINE]);\r\n    operationsToSupportedProtocolVersions.set(\"Drop\", [DROP_BASE_LINE]);\r\n    operationsToSupportedProtocolVersions.set(\"Subscription\", [\r\n        TCP_CONNECTIONS_WITH_COMPRESSION, SUBSCRIPTION_TIME_SERIES_INCLUDES, SUBSCRIPTION_COUNTER_INCLUDES,\r\n        SUBSCRIPTION_INCLUDES, SUBSCRIPTION_BASE_LINE\r\n    ]);\r\n    operationsToSupportedProtocolVersions.set(\"Heartbeats\", [\r\n        HEARTBEATS_TCP_VERSION,\r\n        HEARTBEATS_42000,\r\n        HEARTBEATS_41200,\r\n        HEARTBEATS_BASE_LINE\r\n    ]);\r\n    operationsToSupportedProtocolVersions.set(\"TestConnection\", [TEST_CONNECTION_BASE_LINE]);\r\n\r\n    const pingFeaturesMap = new Map<number, SupportedFeatures>();\r\n    supportedFeaturesByProtocol.set(\"Ping\", pingFeaturesMap);\r\n    const pingFeatures = new SupportedFeatures(PING_BASE_LINE);\r\n    pingFeatures.ping = new PingFeatures();\r\n    pingFeaturesMap.set(PING_BASE_LINE, pingFeatures);\r\n\r\n    const noneFeaturesMap = new Map<number, SupportedFeatures>();\r\n    supportedFeaturesByProtocol.set(\"None\", noneFeaturesMap);\r\n    const noneFeatures = new SupportedFeatures(NONE_BASE_LINE);\r\n    noneFeatures.none = new NoneFeatures();\r\n    noneFeaturesMap.set(NONE_BASE_LINE, noneFeatures);\r\n\r\n    const dropFeaturesMap = new Map<number, SupportedFeatures>();\r\n    supportedFeaturesByProtocol.set(\"Drop\", dropFeaturesMap);\r\n    const dropFeatures = new SupportedFeatures(DROP_BASE_LINE);\r\n    dropFeatures.drop = new DropFeatures();\r\n    dropFeaturesMap.set(DROP_BASE_LINE, dropFeatures);\r\n\r\n    const subscriptionFeaturesMap = new Map<number, SupportedFeatures>();\r\n    supportedFeaturesByProtocol.set(\"Subscription\", subscriptionFeaturesMap);\r\n    const subscriptionFeatures = new SupportedFeatures(SUBSCRIPTION_BASE_LINE);\r\n    subscriptionFeatures.subscription = new SubscriptionFeatures();\r\n    subscriptionFeaturesMap.set(SUBSCRIPTION_BASE_LINE, subscriptionFeatures);\r\n\r\n    const subscriptions41400Features = new SupportedFeatures(SUBSCRIPTION_INCLUDES);\r\n    subscriptions41400Features.subscription = new SubscriptionFeatures();\r\n    subscriptions41400Features.subscription.includes = true;\r\n    subscriptionFeaturesMap.set(SUBSCRIPTION_INCLUDES, subscriptions41400Features);\r\n\r\n    const subscriptions50000Features = new SupportedFeatures(SUBSCRIPTION_COUNTER_INCLUDES);\r\n    subscriptions50000Features.subscription = new SubscriptionFeatures();\r\n    subscriptions50000Features.subscription.includes = true;\r\n    subscriptions50000Features.subscription.counterIncludes = true;\r\n    subscriptionFeaturesMap.set(SUBSCRIPTION_COUNTER_INCLUDES, subscriptions50000Features);\r\n\r\n    const subscriptions51000Features = new SupportedFeatures(SUBSCRIPTION_TIME_SERIES_INCLUDES);\r\n    subscriptions51000Features.subscription = new SubscriptionFeatures();\r\n    subscriptions51000Features.subscription.includes = true;\r\n    subscriptions51000Features.subscription.counterIncludes = true;\r\n    subscriptions51000Features.subscription.timeSeriesIncludes = true;\r\n    subscriptionFeaturesMap.set(SUBSCRIPTION_TIME_SERIES_INCLUDES, subscriptions51000Features);\r\n\r\n    const subscriptions53000Features = new SupportedFeatures(TCP_CONNECTIONS_WITH_COMPRESSION);\r\n    subscriptions53000Features.dataCompression = true;\r\n    subscriptions53000Features.subscription = new SubscriptionFeatures();\r\n    subscriptions53000Features.subscription.includes = true;\r\n    subscriptions53000Features.subscription.counterIncludes = true;\r\n    subscriptions53000Features.subscription.timeSeriesIncludes = true;\r\n    subscriptionFeaturesMap.set(TCP_CONNECTIONS_WITH_COMPRESSION, subscriptions53000Features);\r\n\r\n    const heartbeatsFeaturesMap = new Map<number, SupportedFeatures>();\r\n    supportedFeaturesByProtocol.set(\"Heartbeats\", heartbeatsFeaturesMap);\r\n    const heartbeatsFeatures = new SupportedFeatures(HEARTBEATS_BASE_LINE);\r\n    heartbeatsFeatures.heartbeats = new HeartbeatsFeatures();\r\n    heartbeatsFeaturesMap.set(HEARTBEATS_BASE_LINE, heartbeatsFeatures);\r\n\r\n    const heartbeats41200Features = new SupportedFeatures(HEARTBEATS_41200);\r\n    heartbeats41200Features.heartbeats = new HeartbeatsFeatures();\r\n    heartbeats41200Features.heartbeats.sendChangesOnly = true;\r\n    heartbeatsFeaturesMap.set(HEARTBEATS_41200, heartbeats41200Features);\r\n\r\n    const heartbeats42000Features = new SupportedFeatures(HEARTBEATS_42000);\r\n    heartbeats42000Features.heartbeats = new HeartbeatsFeatures();\r\n    heartbeats42000Features.heartbeats.sendChangesOnly = true;\r\n    heartbeats42000Features.heartbeats.includeServerInfo = true;\r\n    heartbeatsFeaturesMap.set(HEARTBEATS_42000, heartbeats42000Features);\r\n\r\n    const heartbeatsWithTcpCompressionFeatures = new SupportedFeatures(HEARTBEATS_WITH_TCP_COMPRESSION);\r\n    heartbeatsWithTcpCompressionFeatures.heartbeats = new HeartbeatsFeatures();\r\n    heartbeatsWithTcpCompressionFeatures.heartbeats.sendChangesOnly = true\r\n    heartbeatsWithTcpCompressionFeatures.heartbeats.includeServerInfo = true;\r\n    heartbeatsWithTcpCompressionFeatures.dataCompression = true;\r\n    heartbeatsFeaturesMap.set(HEARTBEATS_WITH_TCP_COMPRESSION, heartbeatsWithTcpCompressionFeatures);\r\n\r\n    const testConnectionFeaturesMap = new Map<number, SupportedFeatures>();\r\n    supportedFeaturesByProtocol.set(\"TestConnection\", testConnectionFeaturesMap);\r\n    const testConnectionFeatures = new SupportedFeatures(TEST_CONNECTION_BASE_LINE);\r\n    testConnectionFeatures.testConnection = new TestConnectionFeatures();\r\n    testConnectionFeaturesMap.set(TEST_CONNECTION_BASE_LINE, testConnectionFeatures);\r\n}\r\n\r\nexport type SupportedStatus = \"OutOfRange\" | \"NotSupported\" | \"Supported\";\r\n\r\nexport function operationVersionSupported(\r\n    operationType: OperationTypes, version: number, currentRef: (value: number) => void): SupportedStatus {\r\n    currentRef(-1);\r\n\r\n    const supportedProtocols = operationsToSupportedProtocolVersions.get(operationType);\r\n    if (!supportedProtocols) {\r\n        throwError(\"InvalidOperationException\",\r\n            \"This is a bug. Probably you forgot to add '\"\r\n            + operationType + \"' operation to the operationsToSupportedProtocolVersions map\");\r\n    }\r\n\r\n    for (const current of supportedProtocols) {\r\n        currentRef(current);\r\n\r\n        if (current === version) {\r\n            return \"Supported\";\r\n        }\r\n\r\n        if (current < version) {\r\n            return \"NotSupported\";\r\n        }\r\n    }\r\n\r\n    return \"OutOfRange\";\r\n}\r\n\r\nexport function getOperationTcpVersion(operationType: OperationTypes, index: number) {\r\n    // we don't check the if the index go out of range, since this is expected and means that we don't have\r\n    switch (operationType) {\r\n        case \"Ping\":\r\n        case \"None\": {\r\n            return -1;\r\n        }\r\n        case \"Drop\": {\r\n            return -2;\r\n        }\r\n        case \"Subscription\":\r\n        case \"Replication\":\r\n        case \"Cluster\":\r\n        case \"Heartbeats\":\r\n        case \"TestConnection\": {\r\n            return operationsToSupportedProtocolVersions.get(operationType)[index];\r\n        }\r\n        default: {\r\n            throwError(\"InvalidArgumentException\", \"Invalid operation type: \" + operationType);\r\n        }\r\n    }\r\n}\r\n\r\nexport function getSupportedFeaturesFor(type: OperationTypes, protocolVersion: number) {\r\n    const features = supportedFeaturesByProtocol.get(type).get(protocolVersion);\r\n    if (!features) {\r\n        throwError(\"InvalidArgumentException\",\r\n            type + \"in protocol \" + protocolVersion + \" was not found in the features set\");\r\n    }\r\n    return features;\r\n}\r\n\r\nexport class AuthorizationInfo {\r\n    public authorizeAs: AuthorizeMethod;\r\n    public authorizationFor: string;\r\n}\r\n\r\nexport type AuthorizeMethod =\r\n    \"Server\"\r\n    | \"PullReplication\"\r\n    | \"PushReplication\";\r\n"]}