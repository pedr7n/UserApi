{"version":3,"file":"Parser.js","sourceRoot":"","sources":["../../../../../src/ext/stream-json/jsonl/Parser.ts"],"names":[],"mappings":"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","sourcesContent":["import { Utf8Stream } from \"../utils/Utf8Stream.js\";\r\n\r\nexport class JsonlParser extends Utf8Stream {\r\n    static make(options) {\r\n        return new JsonlParser(options);\r\n    }\r\n\r\n    static checkedParse(input, reviver, errorIndicator) {\r\n        try {\r\n            return JSON.parse(input, reviver);\r\n        } catch (error) {\r\n            if (typeof errorIndicator == 'function') return errorIndicator(error);\r\n        }\r\n        return errorIndicator;\r\n    }\r\n\r\n    _rest: any;\r\n    _counter: any;\r\n    _reviver: any;\r\n    _errorIndicator: any;\r\n\r\n    constructor(options?) {\r\n        super(Object.assign({}, options, {readableObjectMode: true}));\r\n        this._rest = '';\r\n        this._counter = 0;\r\n        this._reviver = options && options.reviver;\r\n        this._errorIndicator = options && options.errorIndicator;\r\n        if (options && options.checkErrors) {\r\n            this._processBuffer = this._checked_processBuffer;\r\n            this._flush = this._checked_flush;\r\n        }\r\n        if (options && 'errorIndicator' in options) {\r\n            this._processBuffer = this._suppressed_processBuffer;\r\n            this._flush = this._suppressed_flush;\r\n        }\r\n    }\r\n\r\n    _processBuffer(callback) {\r\n        const lines = this._buffer.split('\\n');\r\n        this._rest += lines[0];\r\n        if (lines.length > 1) {\r\n            this._rest && this.push({key: this._counter++, value: JSON.parse(this._rest, this._reviver)});\r\n            this._rest = lines.pop();\r\n            for (let i = 1; i < lines.length; ++i) {\r\n                lines[i] && this.push({key: this._counter++, value: JSON.parse(lines[i], this._reviver)});\r\n            }\r\n        }\r\n        this._buffer = '';\r\n        callback(null);\r\n    }\r\n\r\n    _flush(callback) {\r\n        super._flush(error => {\r\n            if (error) return callback(error);\r\n            if (this._rest) {\r\n                this.push({key: this._counter++, value: JSON.parse(this._rest, this._reviver)});\r\n                this._rest = '';\r\n            }\r\n            callback(null);\r\n        });\r\n    }\r\n\r\n    _suppressed_processBuffer(callback) {\r\n        const lines = this._buffer.split('\\n');\r\n        this._rest += lines[0];\r\n        if (lines.length > 1) {\r\n            if (this._rest) {\r\n                const value = JsonlParser.checkedParse(this._rest, this._reviver, this._errorIndicator);\r\n                value !== undefined && this.push({key: this._counter++, value});\r\n            }\r\n            this._rest = lines.pop();\r\n            for (let i = 1; i < lines.length; ++i) {\r\n                if (!lines[i]) continue;\r\n                const value = JsonlParser.checkedParse(lines[i], this._reviver, this._errorIndicator);\r\n                value !== undefined && this.push({key: this._counter++, value});\r\n            }\r\n        }\r\n        this._buffer = '';\r\n        callback(null);\r\n    }\r\n\r\n    _suppressed_flush(callback) {\r\n        super._flush(error => {\r\n            if (error) return callback(error);\r\n            if (this._rest) {\r\n                const value = JsonlParser.checkedParse(this._rest, this._reviver, this._errorIndicator);\r\n                value !== undefined && this.push({key: this._counter++, value});\r\n                this._rest = '';\r\n            }\r\n            callback(null);\r\n        });\r\n    }\r\n\r\n    _checked_processBuffer(callback) {\r\n        const lines = this._buffer.split('\\n');\r\n        this._rest += lines[0];\r\n        if (lines.length > 1) {\r\n            try {\r\n                this._rest && this.push({key: this._counter++, value: JSON.parse(this._rest, this._reviver)});\r\n                this._rest = lines.pop();\r\n                for (let i = 1; i < lines.length; ++i) {\r\n                    lines[i] && this.push({key: this._counter++, value: JSON.parse(lines[i], this._reviver)});\r\n                }\r\n            } catch (cbErr) {\r\n                this._buffer = '';\r\n                callback(cbErr);\r\n                return;\r\n            }\r\n        }\r\n        this._buffer = '';\r\n        callback(null);\r\n    }\r\n\r\n    _checked_flush(callback) {\r\n        super._flush(error => {\r\n            if (error) return callback(error);\r\n            if (this._rest) {\r\n                try {\r\n                    this.push({key: this._counter++, value: JSON.parse(this._rest, this._reviver)});\r\n                } catch (cbErr) {\r\n                    this._rest = '';\r\n                    callback(cbErr);\r\n                    return;\r\n                }\r\n                this._rest = '';\r\n            }\r\n            callback(null);\r\n        });\r\n    }\r\n}\r\n\r\n"]}