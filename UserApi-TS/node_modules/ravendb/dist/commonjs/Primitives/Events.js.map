{"version":3,"file":"Events.js","sourceRoot":"","sources":["../../../src/Primitives/Events.ts"],"names":[],"mappings":"","sourcesContent":["import { EventEmitter } from \"node:events\";\r\n\r\nexport interface TypedEventEmitter<TEvents> extends EventEmitter {\r\n    addListener(event: string | keyof TEvents | symbol, listener: (...args: any[]) => void): this;\r\n\r\n    on(event: string | keyof TEvents | symbol, listener: (...args: any[]) => void): this;\r\n\r\n    off(event: string | keyof TEvents | symbol, listener: (...args: any[]) => void): this;\r\n\r\n    once(event: string | keyof TEvents | symbol, listener: (...args: any[]) => void): this;\r\n\r\n    removeListener(event: string | keyof TEvents | symbol, listener: (...args: any[]) => void): this;\r\n\r\n    removeAllListeners(event?: string | keyof TEvents | symbol): this;\r\n\r\n    setMaxListeners(n: number): this;\r\n\r\n    getMaxListeners(): number;\r\n\r\n    // eslint-disable-next-line @typescript-eslint/ban-types\r\n    listeners(event: string | keyof TEvents | symbol): Function[];\r\n\r\n    emit(event: string | keyof TEvents | symbol, ...args: any[]): boolean;\r\n\r\n    listenerCount(type: string | keyof TEvents | symbol): number;\r\n\r\n    // Added in Node 6...\r\n    prependListener(event: string | keyof TEvents | symbol, listener: (...args: any[]) => void): this;\r\n\r\n    prependOnceListener(event: string | keyof TEvents | symbol, listener: (...args: any[]) => void): this;\r\n\r\n    // eslint-disable-next-line @typescript-eslint/ban-types\r\n    rawListeners(event: string | keyof TEvents | symbol): Function[];\r\n\r\n    eventNames(): (string | symbol)[];\r\n}\r\n"]}